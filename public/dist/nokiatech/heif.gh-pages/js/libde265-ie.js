/**
 * @preserve libde265.js HEVC/H.265 decoder
 * (c)2014 struktur AG, http://www.struktur.de, opensource@struktur.de
 *
 * This file is part of libde265.js
 * https://github.com/strukturag/libde265.js
 *
 * libde265.js is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * libde265.js is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with libde265.js.  If not, see <http://www.gnu.org/licenses/>.
 */
(function() {
var Module = {
    print: function(text) {
        text = Array.prototype.slice.call(arguments).join(' ');
        console.log(text);
    },
    printErr: function(text) {
        text = Array.prototype.slice.call(arguments).join(' ');
        console.error(text);
    },
    canvas: {},
    noInitialRun: true
};

// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    code = Pointer_stringify(code);
    if (code[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (code.indexOf('"', 1) === code.length-1) {
        code = code.substr(1, code.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + code + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + code + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    return rawList ? list : ret + flushList();
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 268435456;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 46592;



var _stdout;
var _stdout=_stdout=allocate(1, "i32*", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate(1, "i32*", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate(1, "i32*", ALLOC_STATIC);

/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } });











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































var ___dso_handle;
var ___dso_handle=___dso_handle=allocate(1, "i32*", ALLOC_STATIC);










































































































































var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,64,85,0,0,240,0,0,0,172,0,0,0,72,0,0,0,176,0,0,0,8,0,0,0,10,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,80,85,0,0,240,0,0,0,28,1,0,0,72,0,0,0,176,0,0,0,8,0,0,0,28,0,0,0,4,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;


















































































































































































var __ZTISt9exception;
var __ZTISt9exception=__ZTISt9exception=allocate([allocate([1,0,0,0,0,0,0], "i8", ALLOC_STATIC)+8, 0], "i32", ALLOC_STATIC);






















































































































































































































































































































































































































































var __ZN15decoder_contextC1Ev;
var __ZN15decoder_contextD1Ev;
var __ZN10NAL_ParserC1Ev;
var __ZN10NAL_ParserD1Ev;
var __ZN22decoded_picture_bufferC1Ev;
var __ZN22decoded_picture_bufferD1Ev;
var __ZN11de265_imageC1Ev;
var __ZN11de265_imageD1Ev;
var __ZN17pic_parameter_setC1Ev;
var __ZN17pic_parameter_setD1Ev;
var __ZN17seq_parameter_setC1Ev;
var __ZN17seq_parameter_setD1Ev;
var __ZN19de265_progress_lockC1Ev;
var __ZN19de265_progress_lockD1Ev;
var __ZNSt13runtime_errorC1EPKc;
var __ZNSt13runtime_errorD1Ev;
var __ZNSt12length_errorD1Ev;
var __ZNSt3__16localeC1Ev;
var __ZNSt3__16localeC1ERKS0_;
var __ZNSt3__16localeD1Ev;
var __ZNSt8bad_castC1Ev;
var __ZNSt8bad_castD1Ev;
/* memory initializer */ allocate([29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,33,0,0,0,34,0,0,0,34,0,0,0,35,0,0,0,35,0,0,0,36,0,0,0,36,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,26,0,0,0,21,0,0,0,17,0,0,0,13,0,0,0,9,0,0,0,5,0,0,0,2,0,0,0,0,0,0,0,254,255,255,255,251,255,255,255,247,255,255,255,243,255,255,255,239,255,255,255,235,255,255,255,230,255,255,255,224,255,255,255,230,255,255,255,235,255,255,255,239,255,255,255,243,255,255,255,247,255,255,255,251,255,255,255,254,255,255,255,0,0,0,0,2,0,0,0,5,0,0,0,9,0,0,0,13,0,0,0,17,0,0,0,21,0,0,0,26,0,0,0,32,0,0,0,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,74,117,108,0,0,0,0,0,74,117,110,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,65,112,114,0,0,0,0,0,77,97,114,0,0,0,0,0,109,111,114,101,62,61,45,49,32,38,38,32,109,111,114,101,60,61,49,0,0,0,0,0,108,97,121,101,114,32,37,100,58,32,118,112,115,95,109,97,120,95,100,101,99,95,112,105,99,95,98,117,102,102,101,114,105,110,103,32,61,32,37,100,10,0,0,0,0,0,0,0,70,101,98,0,0,0,0,0,52,58,50,58,50,0,0,0,74,97,110,0,0,0,0,0,100,101,112,101,110,100,101,110,116,95,115,108,105,99,101,95,115,101,103,109,101,110,116,95,102,108,97,103,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,42,37,115,10,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,110,117,109,95,114,101,102,95,105,100,120,95,108,49,95,100,101,102,97,117,108,116,95,97,99,116,105,118,101,32,58,32,37,100,10,0,0,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,112,101,110,100,105,110,103,95,105,110,112,117,116,95,78,65,76,32,61,61,32,78,85,76,76,0,0,0,0,0,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,68,80,66,47,111,117,116,112,117,116,32,113,117,101,117,101,32,102,117,108,108,0,0,0,65,117,103,117,115,116,0,0,74,117,108,121,0,0,0,0,74,117,110,101,0,0,0,0,77,97,121,0,0,0,0,0,80,80,83,32,37,100,32,104,97,115,32,110,111,116,32,98,101,101,110,32,114,101,97,100,10,0,0,0,0,0,0,0,118,112,115,95,115,117,98,95,108,97,121,101,114,95,111,114,100,101,114,105,110,103,95,105,110,102,111,95,112,114,101,115,101,110,116,95,102,108,97,103,32,58,32,37,100,10,0,0,65,112,114,105,108,0,0,0,52,58,50,58,48,0,0,0,77,97,114,99,104,0,0,0,115,108,105,99,101,95,112,105,99,95,112,97,114,97,109,101,116,101,114,95,115,101,116,95,105,100,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,42,37,100,37,99,32,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,110,117,109,95,114,101,102,95,105,100,120,95,108,48,95,100,101,102,97,117,108,116,95,97,99,116,105,118,101,32,58,32,37,100,10,0,0,0,0,0,74,97,110,117,97,114,121,0,112,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,99,111,100,101,100,32,112,97,114,97,109,101,116,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,104,100,114,45,62,110,117,109,95,114,101,102,95,105,100,120,95,108,49,95,97,99,116,105,118,101,32,60,61,32,49,53,0,0,0,0,0,0,0,0,118,112,115,95,116,101,109,112,111,114,97,108,95,105,100,95,110,101,115,116,105,110,103,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,99,104,114,111,109,97,95,102,111,114,109,97,116,95,105,100,99,32,32,32,32,32,32,32,58,32,37,100,32,40,37,115,41,10,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,110,111,95,111,117,116,112,117,116,95,111,102,95,112,114,105,111,114,95,112,105,99,115,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,99,97,98,97,99,95,105,110,105,116,95,112,114,101,115,101,110,116,95,102,108,97,103,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,116,97,115,107,33,61,78,85,76,76,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,114,101,102,73,100,120,66,62,61,48,0,0,0,0,0,0,105,100,120,62,61,48,0,0,118,112,115,95,109,97,120,95,115,117,98,95,108,97,121,101,114,115,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,115,101,113,95,112,97,114,97,109,101,116,101,114,95,115,101,116,95,105,100,32,32,32,32,58,32,37,100,10,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,109,111,100,101,108,45,62,115,116,97,116,101,32,60,61,32,54,50,0,0,0,0,0,0,102,105,114,115,116,95,115,108,105,99,101,95,115,101,103,109,101,110,116,95,105,110,95,112,105,99,95,102,108,97,103,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,99,111,110,116,101,120,116,32,62,61,32,48,32,38,38,32,99,111,110,116,101,120,116,32,60,61,32,50,0,0,0,0,40,119,105,100,116,104,38,49,41,61,61,48,0,0,0,0,115,105,103,110,95,100,97,116,97,95,104,105,100,105,110,103,95,102,108,97,103,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,110,84,104,114,101,97,100,115,82,117,110,110,105,110,103,32,62,61,32,48,0,0,0,0,115,99,97,108,105,110,103,95,108,105,115,116,95,112,114,101,100,95,109,97,116,114,105,120,95,105,100,95,100,101,108,116,97,61,61,49,0,0,0,0,48,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,67,84,66,32,111,117,116,115,105,100,101,32,111,102,32,105,109,97,103,101,32,97,114,101,97,0,0,0,0,0,0,0,83,117,98,72,101,105,103,104,116,67,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,99,98,102,95,108,117,109,97,32,33,61,32,45,49,0,0,83,117,98,87,105,100,116,104,67,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,99,98,102,95,99,114,32,33,61,32,45,49,0,0,0,0,77,97,120,84,66,83,105,122,101,89,32,32,32,58,32,37,100,10,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,99,98,102,95,99,98,32,33,61,32,45,49,0,0,0,0,77,105,110,84,66,83,105,122,101,89,32,32,32,58,32,37,100,10,0,0,0,0,0,0,105,110,105,116,84,121,112,101,32,62,61,32,48,32,38,38,32,105,110,105,116,84,121,112,101,32,60,61,32,50,0,0,114,101,102,80,105,99,76,105,115,116,62,61,48,0,0,0,99,116,120,45,62,100,112,98,46,104,97,115,95,102,114,101,101,95,100,112,98,95,112,105,99,116,117,114,101,40,116,114,117,101,41,0,0,0,0,0,77,97,120,67,98,83,105,122,101,89,32,32,32,58,32,37,100,10,0,0,0,0,0,0,118,112,115,95,109,97,120,95,108,97,121,101,114,115,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,80,77,0,0,0,0,0,0,99,116,120,73,100,120,76,111,111,107,117,112,91,108,111,103,50,119,45,50,93,91,99,73,100,120,93,91,115,99,97,110,73,100,120,93,91,112,114,101,118,67,115,98,102,93,91,120,67,43,40,121,67,60,60,108,111,103,50,119,41,93,32,61,61,32,99,116,120,73,100,120,73,110,99,0,0,0,0,0,77,105,110,67,98,83,105,122,101,89,32,32,32,58,32,37,100,10,0,0,0,0,0,0,115,112,115,95,116,101,109,112,111,114,97,108,95,105,100,95,110,101,115,116,105,110,103,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,0,65,77,0,0,0,0,0,0,101,110,116,114,121,32,112,111,105,110,116,32,91,37,105,93,32,58,32,37,100,10,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,32,83,76,73,67,69,32,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,10,0,0,0,0,0,0,67,116,98,83,105,122,101,89,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,111,102,102,115,101,116,95,108,101,110,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,100,101,112,101,110,100,101,110,116,95,115,108,105,99,101,95,115,101,103,109,101,110,116,115,95,101,110,97,98,108,101,100,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,102,105,114,115,116,76,97,121,101,114,82,101,97,100,32,60,32,77,65,88,95,84,69,77,80,79,82,65,76,95,83,85,66,76,65,89,69,82,83,0,118,117,105,95,112,97,114,97,109,101,116,101,114,115,95,112,114,101,115,101,110,116,95,102,108,97,103,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,110,117,109,95,101,110,116,114,121,95,112,111,105,110,116,95,111,102,102,115,101,116,115,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,69,82,82,58,32,0,0,0,101,110,100,32,37,32,50,32,61,61,32,48,0,0,0,0,115,116,114,111,110,103,95,105,110,116,114,97,95,115,109,111,111,116,104,105,110,103,95,101,110,97,98,108,101,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,115,108,105,99,101,95,108,111,111,112,95,102,105,108,116,101,114,95,97,99,114,111,115,115,95,115,108,105,99,101,115,95,101,110,97,98,108,101,100,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,0,115,112,115,95,116,101,109,112,111,114,97,108,95,109,118,112,95,101,110,97,98,108,101,100,95,102,108,97,103,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,115,108,105,99,101,95,116,99,95,111,102,102,115,101,116,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,116,104,114,101,97,100,95,99,111,110,116,101,120,116,115,61,61,78,85,76,76,0,0,0,105,109,97,103,101,32,99,104,101,99,107,115,117,109,32,109,105,115,109,97,116,99,104,0,108,116,95,114,101,102,95,112,105,99,95,112,111,99,95,108,115,98,95,115,112,115,91,37,100,93,32,58,32,37,100,32,32,32,40,117,115,101,100,95,98,121,95,99,117,114,114,95,112,105,99,95,108,116,95,115,112,115,95,102,108,97,103,61,37,100,41,10,0,0,0,0,115,108,105,99,101,95,98,101,116,97,95,111,102,102,115,101,116,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,110,117,109,95,108,111,110,103,95,116,101,114,109,95,114,101,102,95,112,105,99,115,95,115,112,115,32,58,32,37,100,10,0,0,0,0,0,0,0,0,40,102,114,111,109,32,112,112,115,41,0,0,0,0,0,0,32,32,32,32,115,117,98,95,108,97,121,101,114,95,108,101,118,101,108,95,105,100,99,32,32,32,58,32,37,100,10,0,108,111,110,103,95,116,101,114,109,95,114,101,102,95,112,105,99,115,95,112,114,101,115,101,110,116,95,102,108,97,103,32,58,32,37,100,10,0,0,0,40,111,118,101,114,114,105,100,101,41,0,0,0,0,0,0,114,101,102,80,105,99,81,48,61,61,114,101,102,80,105,99,81,49,0,0,0,0,0,0,32,32,32,32,115,117,98,95,108,97,121,101,114,95,102,114,97,109,101,95,111,110,108,121,95,99,111,110,115,116,114,97,105,110,116,95,102,108,97,103,32,58,32,37,100,10,0,0,114,101,102,95,112,105,99,95,115,101,116,91,32,37,50,100,32,93,58,32,0,0,0,0,115,108,105,99,101,95,100,101,98,108,111,99,107,105,110,103,95,102,105,108,116,101,114,95,100,105,115,97,98,108,101,100,95,102,108,97,103,32,58,32,37,100,32,37,115,10,0,0,99,104,97,110,110,101,108,62,61,48,32,38,38,32,99,104,97,110,110,101,108,32,60,61,32,50,0,0,0,0,0,0,114,101,102,73,100,120,65,62,61,48,0,0,0,0,0,0,32,32,32,32,115,117,98,95,108,97,121,101,114,95,110,111,110,95,112,97,99,107,101,100,95,99,111,110,115,116,114,97,105,110,116,95,102,108,97,103,32,58,32,37,100,10,0,0,110,117,109,95,115,104,111,114,116,95,116,101,114,109,95,114,101,102,95,112,105,99,95,115,101,116,115,32,58,32,37,100,10,0,0,0,0,0,0,0,100,101,98,108,111,99,107,105,110,103,95,102,105,108,116,101,114,95,111,118,101,114,114,105,100,101,95,102,108,97,103,32,58,32,37,100,10,0,0,0,110,97,108,0,0,0,0,0,118,105,100,101,111,95,112,97,114,97,109,101,116,101,114,95,115,101,116,95,105,100,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,100,101,50,54,53,46,99,99,0,0,0,0,0,0,0,0,32,32,32,32,115,117,98,95,108,97,121,101,114,95,105,110,116,101,114,108,97,99,101,100,95,115,111,117,114,99,101,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,0,112,99,109,95,108,111,111,112,95,102,105,108,116,101,114,95,100,105,115,97,98,108,101,95,102,108,97,103,32,32,58,32,37,100,10,0,0,0,0,0,115,112,115,95,109,97,120,95,115,117,98,95,108,97,121,101,114,115,32,32,32,32,32,32,58,32,37,100,10,0,0,0,115,108,105,99,101,95,99,114,95,113,112,95,111,102,102,115,101,116,32,32,32,32,32,58,32,37,100,10,0,0,0,0,76,111,103,50,77,105,110,67,117,81,112,68,101,108,116,97,83,105,122,101,32,58,32,37,100,10,0,0,0,0,0,0,114,101,102,60,55,0,0,0,102,97,108,115,101,0,0,0,115,112,115,45,62,115,112,115,95,114,101,97,100,0,0,0,32,32,32,32,115,117,98,95,108,97,121,101,114,95,112,114,111,103,114,101,115,115,105,118,101,95,115,111,117,114,99,101,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,108,111,103,50,95,100,105,102,102,95,109,97,120,95,109,105,110,95,112,99,109,95,108,117,109,97,95,99,111,100,105,110,103,95,98,108,111,99,107,95,115,105,122,101,32,58,32,37,100,10,0,0,0,0,0,0,115,108,105,99,101,95,99,98,95,113,112,95,111,102,102,115,101,116,32,32,32,32,32,58,32,37,100,10,0,0,0,0,112,112,115,95,101,120,116,101,110,115,105,111,110,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,0,0,0,117,110,107,110,111,119,110,32,101,114,114,111,114,0,0,0,10,0,0,0,0,0,0,0,115,101,113,95,112,97,114,97,109,101,116,101,114,95,115,101,116,95,105,100,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,108,111,103,50,95,109,105,110,95,112,99,109,95,108,117,109,97,95,99,111,100,105,110,103,95,98,108,111,99,107,95,115,105,122,101,32,58,32,37,100,10,0,0,0,0,0,0,0,115,108,105,99,101,95,113,112,95,100,101,108,116,97,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,115,108,105,99,101,95,115,101,103,109,101,110,116,95,104,101,97,100,101,114,95,101,120,116,101,110,115,105,111,110,95,112,114,101,115,101,110,116,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,0,0,83,80,83,32,104,101,97,100,101,114,32,109,105,115,115,105,110,103,44,32,99,97,110,110,111,116,32,100,101,99,111,100,101,32,83,69,73,0,0,0,37,100,0,0,0,0,0,0,102,105,114,115,116,32,37,32,50,32,61,61,32,48,0,0,112,99,109,95,115,97,109,112,108,101,95,98,105,116,95,100,101,112,116,104,95,99,104,114,111,109,97,32,32,32,58,32,37,100,10,0,0,0,0,0,102,105,118,101,95,109,105,110,117,115,95,109,97,120,95,110,117,109,95,109,101,114,103,101,95,99,97,110,100,32,32,58,32,37,100,10,0,0,0,0,110,117,109,95,101,120,116,114,97,95,115,108,105,99,101,95,104,101,97,100,101,114,95,98,105,116,115,32,32,32,32,58,32,37,100,10,0,0,0,0,99,97,110,110,111,116,32,97,112,112,108,121,32,83,65,79,32,98,101,99,97,117,115,101,32,119,101,32,114,97,110,32,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,44,0,0,0,0,0,0,0,112,99,109,95,115,97,109,112,108,101,95,98,105,116,95,100,101,112,116,104,95,108,117,109,97,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,67,104,114,111,109,97,79,102,102,115,101,116,95,76,37,100,91,37,100,93,91,37,100,93,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,108,111,103,50,95,112,97,114,97,108,108,101,108,95,109,101,114,103,101,95,108,101,118,101,108,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,110,111,110,45,101,120,105,115,116,105,110,103,32,108,111,110,103,45,116,101,114,109,32,114,101,102,101,114,101,110,99,101,32,99,97,110,100,105,100,97,116,101,32,115,112,101,99,105,102,105,101,100,32,105,110,32,115,108,105,99,101,32,104,101,97,100,101,114,0,0,0,0,99,111,101,102,102,105,99,105,101,110,116,32,111,117,116,32,111,102,32,105,109,97,103,101,32,98,111,117,110,100,115,0,32,32,32,32,115,117,98,95,108,97,121,101,114,95,112,114,111,102,105,108,101,95,99,111,109,112,97,116,105,98,105,108,105,116,121,95,102,108,97,103,115,58,32,0,0,0,0,0,112,99,109,95,101,110,97,98,108,101,100,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,67,104,114,111,109,97,87,101,105,103,104,116,95,76,37,100,91,37,100,93,91,37,100,93,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,108,105,115,116,115,95,109,111,100,105,102,105,99,97,116,105,111,110,95,112,114,101,115,101,110,116,95,102,108,97,103,58,32,37,100,10,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,110,117,109,98,101,114,32,111,102,32,116,104,114,101,97,100,115,32,108,105,109,105,116,101,100,32,116,111,32,109,97,120,105,109,117,109,32,97,109,111,117,110,116,0,0,0,0,0,32,32,32,32,115,117,98,95,108,97,121,101,114,95,112,114,111,102,105,108,101,95,105,100,99,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,115,97,109,112,108,101,95,97,100,97,112,116,105,118,101,95,111,102,102,115,101,116,95,101,110,97,98,108,101,100,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,0,0,108,117,109,97,95,111,102,102,115,101,116,95,108,37,100,91,37,100,93,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,112,105,99,95,115,99,97,108,105,110,103,95,108,105,115,116,95,100,97,116,97,95,112,114,101,115,101,110,116,95,102,108,97,103,58,32,37,100,10,0,100,101,112,101,110,100,101,110,116,32,115,108,105,99,101,32,119,105,116,104,32,97,100,100,114,101,115,115,32,48,0,0,32,32,32,32,115,117,98,95,108,97,121,101,114,95,116,105,101,114,95,102,108,97,103,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,97,109,112,95,101,110,97,98,108,101,100,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,76,117,109,97,87,101,105,103,104,116,95,76,37,100,91,37,100,93,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,116,99,95,111,102,102,115,101,116,58,32,32,32,32,32,37,100,10,0,0,0,0,0,0,115,108,105,99,101,32,115,101,103,109,101,110,116,32,97,100,100,114,101,115,115,32,105,110,118,97,108,105,100,0,0,0,105,110,118,97,108,105,100,32,99,104,114,111,109,97,32,102,111,114,109,97,116,32,105,110,32,83,80,83,32,104,101,97,100,101,114,0,0,0,0,0,32,32,32,32,115,117,98,95,108,97,121,101,114,95,112,114,111,102,105,108,101,95,115,112,97,99,101,32,58,32,37,100,10,0,0,0,0,0,0,0,115,99,97,108,105,110,103,32,108,105,115,116,32,108,111,103,103,105,110,103,32,111,117,116,112,117,116,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,0,0,0,0,67,104,114,111,109,97,76,111,103,50,87,101,105,103,104,116,68,101,110,111,109,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,98,101,116,97,95,111,102,102,115,101,116,58,32,32,37,100,10,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,101,110,100,32,111,102,32,102,105,108,101,0,0,0,0,0,99,116,120,45,62,104,97,115,95,105,109,97,103,101,40,99,111,108,80,105,99,41,0,0,32,32,80,114,111,102,105,108,101,47,84,105,101,114,47,76,101,118,101,108,32,91,76,97,121,101,114,32,37,100,93,10,0,0,0,0,0,0,0,0,115,112,115,95,115,99,97,108,105,110,103,95,108,105,115,116,95,100,97,116,97,95,112,114,101,115,101,110,116,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,0,0,0,108,117,109,97,95,108,111,103,50,95,119,101,105,103,104,116,95,100,101,110,111,109,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,105,109,103,45,62,110,117,109,95,116,104,114,101,97,100,115,95,97,99,116,105,118,101,40,41,32,61,61,32,48,0,0,112,105,99,95,100,105,115,97,98,108,101,95,100,101,98,108,111,99,107,105,110,103,95,102,105,108,116,101,114,95,102,108,97,103,58,32,37,100,10,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,32,86,80,83,32,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,10,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,109,97,120,105,109,117,109,32,110,117,109,98,101,114,32,111,102,32,114,101,102,101,114,101,110,99,101,32,112,105,99,116,117,114,101,115,32,101,120,99,101,101,100,101,100,0,0,0,32,32,103,101,110,101,114,97,108,95,108,101,118,101,108,95,105,100,99,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,115,99,97,108,105,110,103,95,108,105,115,116,95,101,110,97,98,108,101,95,102,108,97,103,32,58,32,37,100,10,0,0,118,105,100,101,111,95,112,97,114,97,109,101,116,101,114,95,115,101,116,95,105,100,32,32,58,32,37,100,10,0,0,0,99,111,108,108,111,99,97,116,101,100,95,114,101,102,95,105,100,120,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,100,101,98,108,111,99,107,105,110,103,95,102,105,108,116,101,114,95,111,118,101,114,114,105,100,101,95,101,110,97,98,108,101,100,95,102,108,97,103,58,32,37,100,10,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,101,110,100,95,111,102,95,115,117,98,95,115,116,114,101,97,109,95,111,110,101,95,98,105,116,32,110,111,116,32,115,101,116,32,116,111,32,49,32,119,104,101,110,32,105,116,32,115,104,111,117,108,100,32,98,101,0,0,0,0,0,0,0,0,112,112,115,45,62,112,112,115,95,114,101,97,100,0,0,0,42,10,0,0,0,0,0,0,109,97,120,95,116,114,97,110,115,102,111,114,109,95,104,105,101,114,97,114,99,104,121,95,100,101,112,116,104,95,105,110,116,114,97,32,58,32,37,100,10,0,0,0,0,0,0,0,99,111,108,108,111,99,97,116,101,100,95,102,114,111,109,95,108,48,95,102,108,97,103,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,100,101,98,108,111,99,107,105,110,103,95,102,105,108,116,101,114,95,99,111,110,116,114,111,108,95,112,114,101,115,101,110,116,95,102,108,97,103,58,32,37,100,10,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,102,97,117,108,116,121,32,114,101,102,101,114,101,110,99,101,32,112,105,99,116,117,114,101,32,108,105,115,116,0,0,0,42,37,100,0,0,0,0,0,112,105,99,95,112,97,114,97,109,101,116,101,114,95,115,101,116,95,105,100,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,109,97,120,95,116,114,97,110,115,102,111,114,109,95,104,105,101,114,97,114,99,104,121,95,100,101,112,116,104,95,105,110,116,101,114,32,58,32,37,100,10,0,0,0,0,0,0,0,99,97,98,97,99,95,105,110,105,116,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,112,112,115,95,108,111,111,112,95,102,105,108,116,101,114,95,97,99,114,111,115,115,95,115,108,105,99,101,115,95,101,110,97,98,108,101,100,95,102,108,97,103,58,32,37,100,10,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,115,104,111,114,116,45,116,101,114,109,32,114,101,102,45,112,105,99,45,115,101,116,32,105,110,100,101,120,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,0,0,0,42,44,0,0,0,0,0,0,102,97,108,115,101,0,0,0,108,111,103,50,95,100,105,102,102,95,109,97,120,95,109,105,110,95,116,114,97,110,115,102,111,114,109,95,98,108,111,99,107,95,115,105,122,101,32,58,32,37,100,10,0,0,0,0,109,118,100,95,108,49,95,122,101,114,111,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,108,111,111,112,95,102,105,108,116,101,114,95,97,99,114,111,115,115,95,116,105,108,101,115,95,101,110,97,98,108,101,100,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,110,117,109,98,101,114,32,111,102,32,115,104,111,114,116,45,116,101,114,109,32,114,101,102,45,112,105,99,45,115,101,116,115,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,82,73,100,120,62,61,48,0,48,0,0,0,0,0,0,0,32,32,103,101,110,101,114,97,108,95,112,114,111,102,105,108,101,95,99,111,109,112,97,116,105,98,105,108,105,116,121,95,102,108,97,103,115,58,32,0,108,111,103,50,95,109,105,110,95,116,114,97,110,115,102,111,114,109,95,98,108,111,99,107,95,115,105,122,101,32,32,32,58,32,37,100,10,0,0,0,114,101,102,95,112,105,99,95,108,105,115,116,95,109,111,100,105,102,105,99,97,116,105,111,110,95,102,108,97,103,95,108,49,32,58,32,37,100,10,0,116,105,108,101,32,114,111,119,32,98,111,117,110,100,97,114,105,101,115,58,32,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,110,117,109,77,86,95,80,32,33,61,32,110,117,109,77,86,95,81,32,105,110,32,100,101,98,108,111,99,107,105,110,103,0,0,0,0,0,0,0,0,48,46,57,0,0,0,0,0,32,32,103,101,110,101,114,97,108,95,112,114,111,102,105,108,101,95,105,100,99,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,108,111,103,50,95,100,105,102,102,95,109,97,120,95,109,105,110,95,108,117,109,97,95,99,111,100,105,110,103,95,98,108,111,99,107,95,115,105,122,101,32,58,32,37,100,10,0,0,32,32,37,100,58,32,37,100,10,0,0,0,0,0,0,0,42,10,0,0,0,0,0,0,110,111,110,45,101,120,105,115,116,105,110,103,32,114,101,102,101,114,101,110,99,101,32,112,105,99,116,117,114,101,32,97,99,99,101,115,115,101,100,0,32,32,103,101,110,101,114,97,108,95,116,105,101,114,95,102,108,97,103,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,108,111,103,50,95,109,105,110,95,108,117,109,97,95,99,111,100,105,110,103,95,98,108,111,99,107,95,115,105,122,101,32,58,32,37,100,10,0,0,0,114,101,102,95,112,105,99,95,108,105,115,116,95,109,111,100,105,102,105,99,97,116,105,111,110,95,102,108,97,103,95,108,48,32,58,32,37,100,10,0,42,37,100,32,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,98,111,116,104,32,112,114,101,100,70,108,97,103,115,91,93,32,97,114,101,32,122,101,114,111,32,105,110,32,77,67,0,37,112,0,0,0,0,0,0,32,32,103,101,110,101,114,97,108,95,112,114,111,102,105,108,101,95,115,112,97,99,101,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,32,32,115,112,115,95,109,97,120,95,108,97,116,101,110,99,121,95,105,110,99,114,101,97,115,101,95,112,108,117,115,49,32,58,32,37,100,10,0,0,110,117,109,95,114,101,102,95,105,100,120,95,108,49,95,97,99,116,105,118,101,32,32,32,32,32,32,32,32,32,32,58,32,37,100,32,37,115,10,0,83,69,73,32,100,101,99,111,100,101,100,32,112,105,99,116,117,114,101,32,104,97,115,104,58,32,37,48,52,120,44,32,100,101,99,111,100,101,100,32,112,105,99,116,117,114,101,58,32,37,48,52,120,32,40,80,79,67,61,37,100,41,10,0,102,97,108,115,101,0,0,0,116,105,108,101,32,99,111,108,117,109,110,32,98,111,117,110,100,97,114,105,101,115,58,32,0,0,0,0,0,0,0,0,110,111,110,45,101,120,105,115,116,105,110,103,32,83,80,83,32,114,101,102,101,114,101,110,99,101,100,0,0,0,0,0,118,112,115,95,101,120,116,101,110,115,105,111,110,95,102,108,97,103,32,61,32,37,100,10,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,32,32,115,112,115,95,109,97,120,95,110,117,109,95,114,101,111,114,100,101,114,95,112,105,99,115,32,32,32,32,32,32,32,58,32,37,100,10,0,0,40,102,114,111,109,32,80,80,83,41,0,0,0,0,0,0,83,69,73,32,100,101,99,111,100,101,100,32,112,105,99,116,117,114,101,32,77,68,53,32,109,105,115,109,97,116,99,104,32,40,80,79,67,61,37,100,41,10,0,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,108,111,103,50,87,68,62,61,49,0,0,0,0,0,0,0,117,110,105,102,111,114,109,95,115,112,97,99,105,110,103,95,102,108,97,103,58,32,37,100,10,0,0,0,0,0,0,0,110,111,110,45,101,120,105,115,116,105,110,103,32,80,80,83,32,114,101,102,101,114,101,110,99,101,100,0,0,0,0,0,115,104,100,114,45,62,115,108,105,99,101,95,116,121,112,101,32,61,61,32,83,76,73,67,69,95,84,89,80,69,95,66,0,0,0,0,0,0,0,0,105,109,112,111,115,115,105,98,108,101,32,109,111,116,105,111,110,32,118,101,99,116,111,114,32,115,99,97,108,105,110,103,0,0,0,0,0,0,0,0,32,32,115,112,115,95,109,97,120,95,100,101,99,95,112,105,99,95,98,117,102,102,101,114,105,110,103,32,32,32,32,32,32,58,32,37,100,10,0,0,116,114,117,101,0,0,0,0,110,117,109,95,116,105,108,101,95,114,111,119,115,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,97,108,115,101,0,0,0,110,111,32,115,117,99,104,32,102,105,108,101,0,0,0,0,116,105,108,101,88,62,61,48,32,38,38,32,116,105,108,101,89,62,61,48,0,0,0,0,104,114,100,95,108,97,121,101,114,95,115,101,116,95,105,100,120,91,37,100,93,32,61,32,37,100,10,0,0,0,0,0,76,97,121,101,114,32,37,100,10,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,32,83,80,83,32,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,10,0,0,0,0,0,0,0,0,110,117,109,95,114,101,102,95,105,100,120,95,108,48,95,97,99,116,105,118,101,32,32,32,32,32,32,32,32,32,32,58,32,37,100,32,37,115,10,0,58,32,0,0,0,0,0,0,110,117,109,95,116,105,108,101,95,99,111,108,117,109,110,115,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,115,108,105,99,101,32,104,101,97,100,101,114,32,105,110,118,97,108,105,100,0,0,0,0,118,112,115,95,110,117,109,95,104,114,100,95,112,97,114,97,109,101,116,101,114,115,32,32,32,32,32,61,32,37,100,10,0,0,0,0,0,0,0,0,115,112,115,95,115,117,98,95,108,97,121,101,114,95,111,114,100,101,114,105,110,103,95,105,110,102,111,95,112,114,101,115,101,110,116,95,102,108,97,103,32,58,32,37,100,10,0,0,110,117,109,95,114,101,102,95,105,100,120,95,97,99,116,105,118,101,95,111,118,101,114,114,105,100,101,95,102,108,97,103,32,58,32,37,100,10,0,0,101,110,116,114,111,112,121,95,99,111,100,105,110,103,95,115,121,110,99,95,101,110,97,98,108,101,100,95,102,108,97,103,58,32,37,100,10,0,0,0,112,112,115,32,104,101,97,100,101,114,32,105,110,118,97,108,105,100,0,0,0,0,0,0,118,112,115,95,110,117,109,95,116,105,99,107,115,95,112,111,99,95,100,105,102,102,95,111,110,101,32,61,32,37,100,10,0,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,32,80,80,83,32,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,10,0,0,0,0,0,0,0,0,108,111,103,50,95,109,97,120,95,112,105,99,95,111,114,100,101,114,95,99,110,116,95,108,115,98,32,58,32,37,100,10,0,0,0,0,0,0,0,0,115,108,105,99,101,95,115,97,111,95,99,104,114,111,109,97,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,116,105,108,101,115,95,101,110,97,98,108,101,100,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,115,112,115,32,104,101,97,100,101,114,32,105,110,118,97,108,105,100,0,0,0,0,0,0,118,112,115,95,112,111,99,95,112,114,111,112,111,114,116,105,111,110,97,108,95,116,111,95,116,105,109,105,110,103,95,102,108,97,103,32,61,32,37,100,10,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,98,105,116,95,100,101,112,116,104,95,99,104,114,111,109,97,32,58,32,37,100,10,0,0,115,108,105,99,101,95,115,97,111,95,108,117,109,97,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,116,114,97,110,115,113,117,97,110,116,95,98,121,112,97,115,115,95,101,110,97,98,108,101,95,102,108,97,103,58,32,37,100,10,0,0,0,0,0,0,48,0,0,0,0,0,0,0,67,84,66,32,111,117,116,115,105,100,101,32,111,102,32,105,109,97,103,101,32,97,114,101,97,32,40,99,111,110,99,101,97,108,105,110,103,32,115,116,114,101,97,109,32,101,114,114,111,114,46,46,46,41,0,0,118,112,115,95,116,105,109,101,95,115,99,97,108,101,32,32,32,32,32,32,32,32,61,32,37,100,10,0,0,0,0,0,98,105,116,95,100,101,112,116,104,95,108,117,109,97,32,32,32,58,32,37,100,10,0,0,115,108,105,99,101,95,116,101,109,112,111,114,97,108,95,109,118,112,95,101,110,97,98,108,101,100,95,102,108,97,103,32,58,32,37,100,10,0,0,0,111,117,116,112,117,116,95,102,108,97,103,95,112,114,101,115,101,110,116,95,102,108,97,103,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,73,110,99,111,114,114,101,99,116,32,101,110,116,114,121,45,112,111,105,110,116,32,111,102,102,115,101,116,115,0,0,0,118,112,115,95,110,117,109,95,117,110,105,116,115,95,105,110,95,116,105,99,107,32,61,32,37,100,10,0,0,0,0,0,99,111,110,102,95,119,105,110,95,98,111,116,116,111,109,95,111,102,102,115,101,116,58,32,37,100,10,0,0,0,0,0,110,117,109,95,108,111,110,103,95,116,101,114,109,95,112,105,99,115,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,119,101,105,103,104,116,101,100,95,98,105,112,114,101,100,95,102,108,97,103,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,110,97,108,45,112,97,114,115,101,114,46,99,99,0,0,0,80,114,101,109,97,116,117,114,101,32,101,110,100,32,111,102,32,115,108,105,99,101,32,115,101,103,109,101,110,116,0,0,118,112,115,95,116,105,109,105,110,103,95,105,110,102,111,95,112,114,101,115,101,110,116,95,102,108,97,103,32,61,32,37,100,10,0,0,0,0,0,0,99,111,110,102,95,119,105,110,95,116,111,112,95,111,102,102,115,101,116,32,32,32,58,32,37,100,10,0,0,0,0,0,110,117,109,95,108,111,110,103,95,116,101,114,109,95,115,112,115,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,119,101,105,103,104,116,101,100,95,112,114,101,100,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,102,97,108,115,101,0,0,0,84,111,111,32,109,97,110,121,32,119,97,114,110,105,110,103,115,32,113,117,101,117,101,100,0,0,0,0,0,0,0,0,108,97,121,101,114,95,105,100,95,105,110,99,108,117,100,101,100,95,102,108,97,103,91,37,100,93,91,37,100,93,32,61,32,37,100,10,0,0,0,0,99,111,110,102,95,119,105,110,95,114,105,103,104,116,95,111,102,102,115,101,116,32,58,32,37,100,10,0,0,0,0,0,110,97,110,0,0,0,0,0,115,104,111,114,116,95,116,101,114,109,95,114,101,102,95,112,105,99,95,115,101,116,95,105,100,120,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,67,0,0,0,0,0,0,0,112,112,115,95,115,108,105,99,101,95,99,104,114,111,109,97,95,113,112,95,111,102,102,115,101,116,115,95,112,114,101,115,101,110,116,95,102,108,97,103,32,58,32,37,100,10,0,0,67,97,110,110,111,116,32,114,117,110,32,100,101,99,111,100,101,114,32,109,117,108,116,105,45,116,104,114,101,97,100,101,100,32,98,101,99,97,117,115,101,32,115,116,114,101,97,109,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,87,80,80,0,0,0,118,112,115,95,110,117,109,95,108,97,121,101,114,95,115,101,116,115,32,61,32,37,100,10], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([99,111,110,102,95,119,105,110,95,108,101,102,116,95,111,102,102,115,101,116,32,32,58,32,37,100,10,0,0,0,0,0,114,101,102,95,112,105,99,95,115,101,116,91,32,37,50,100,32,93,58,32,0,0,0,0,118,101,99,116,111,114,0,0,102,97,108,108,98,97,99,107,45,109,111,116,105,111,110,46,99,99,0,0,0,0,0,0,112,105,99,95,99,114,95,113,112,95,111,102,102,115,101,116,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,83,69,73,32,100,97,116,97,32,99,97,110,110,111,116,32,98,101,32,112,114,111,99,101,115,115,101,100,0,0,0,0,109,111,116,105,111,110,46,99,99,0,0,0,0,0,0,0,118,112,115,95,109,97,120,95,108,97,121,101,114,95,105,100,32,32,32,61,32,37,100,10,0,0,0,0,0,0,0,0,99,111,110,102,111,114,109,97,110,99,101,95,119,105,110,100,111,119,95,102,108,97,103,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,115,104,111,114,116,95,116,101,114,109,95,114,101,102,95,112,105,99,95,115,101,116,95,115,112,115,95,102,108,97,103,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,37,46,48,76,102,0,0,0,112,105,99,95,99,98,95,113,112,95,111,102,102,115,101,116,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,118,112,115,46,99,99,0,0,73,78,70,79,58,32,0,0,100,101,99,99,116,120,46,99,99,0,0,0,0,0,0,0,110,111,32,109,111,114,101,32,105,110,112,117,116,32,100,97,116,97,44,32,100,101,99,111,100,101,114,32,115,116,97,108,108,101,100,0,0,0,0,0,115,112,115,0,0,0,0,0,100,101,98,108,111,99,107,46,99,99,0,0,0,0,0,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,109,97,120,105,109,117,109,32,110,117,109,98,101,114,32,111,102,32,115,108,105,99,101,115,32,101,120,99,101,101,100,101,100,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,118,112,115,95,109,97,120,95,108,97,116,101,110,99,121,95,105,110,99,114,101,97,115,101,32,32,61,32,37,100,10,0,0,0,0,112,105,99,95,104,101,105,103,104,116,95,105,110,95,108,117,109,97,95,115,97,109,112,108,101,115,32,58,32,37,100,10,0,0,0,0,0,0,0,0,115,112,115,46,99,99,0,0,115,108,105,99,101,95,112,105,99,95,111,114,100,101,114,95,99,110,116,95,108,115,98,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,100,105,102,102,95,99,117,95,113,112,95,100,101,108,116,97,95,100,101,112,116,104,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,110,111,32,101,114,114,111,114,0,0,0,0,0,0,0,0,115,108,105,99,101,46,99,99,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,118,112,115,95,109,97,120,95,110,117,109,95,114,101,111,114,100,101,114,95,112,105,99,115,32,32,61,32,37,100,10,0,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,112,105,99,95,119,105,100,116,104,95,105,110,95,108,117,109,97,95,115,97,109,112,108,101,115,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,83,97,116,0,0,0,0,0,99,111,108,111,117,114,95,112,108,97,110,101,95,105,100,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,70,114,105,0,0,0,0,0,37,76,102,0,0,0,0,0,99,117,95,113,112,95,100,101,108,116,97,95,101,110,97,98,108,101,100,95,102,108,97,103,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,84,104,117,0,0,0,0,0,87,101,100,0,0,0,0,0,114,101,102,112,105,99,46,99,99,0,0,0,0,0,0,0,116,114,97,110,115,102,111,114,109,46,99,99,0,0,0,0,84,117,101,0,0,0,0,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,109,97,120,105,109,117,109,32,110,117,109,98,101,114,32,111,102,32,116,104,114,101,97,100,32,99,111,110,116,101,120,116,115,32,101,120,99,101,101,100,101,100,0,0,0,0,0,0,77,111,110,0,0,0,0,0,83,117,110,0,0,0,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,108,97,121,101,114,32,40,97,108,108,41,58,32,118,112,115,95,109,97,120,95,100,101,99,95,112,105,99,95,98,117,102,102,101,114,105,110,103,32,61,32,37,100,10,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,112,112,115,46,99,99,0,0,115,101,112,97,114,97,116,101,95,99,111,108,111,117,114,95,112,108,97,110,101,95,102,108,97,103,32,58,32,37,100,10,0,0,0,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,112,105,99,95,111,117,116,112,117,116,95,102,108,97,103,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,84,117,101,115,100,97,121,0,116,114,97,110,115,102,111,114,109,95,115,107,105,112,95,101,110,97,98,108,101,100,95,102,108,97,103,58,32,37,100,10,0,0,0,0,0,0,0,0,77,111,110,100,97,121,0,0,83,117,110,100,97,121,0,0,99,97,110,110,111,116,32,102,114,101,101,32,108,105,98,114,97,114,121,32,100,97,116,97,32,40,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,105,110,116,114,97,112,114,101,100,46,99,99,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,118,112,115,95,109,97,120,95,108,97,116,101,110,99,121,95,105,110,99,114,101,97,115,101,32,32,61,32,37,100,10,0,0,0,0,0,0,0,0,105,109,97,103,101,46,99,99,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,117,110,107,110,111,119,110,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,33,114,101,111,114,100,101,114,95,111,117,116,112,117,116,95,113,117,101,117,101,46,101,109,112,116,121,40,41,0,0,0,115,108,105,99,101,95,116,121,112,101,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,99,10,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,99,111,110,115,116,114,97,105,110,101,100,95,105,110,116,114,97,95,112,114,101,100,95,102,108,97,103,58,32,37,100,10,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,100,112,98,46,99,99,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,103,108,111,98,97,108,32,108,105,98,114,97,114,121,32,105,110,105,116,105,97,108,105,122,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,118,112,115,95,109,97,120,95,110,117,109,95,114,101,111,114,100,101,114,95,112,105,99,115,32,32,61,32,37,100,10,0,0,0,0,0,0,0,0,52,58,52,58,52,0,0,0,68,101,99,0,0,0,0,0,115,108,105,99,101,95,115,101,103,109,101,110,116,95,97,100,100,114,101,115,115,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,78,111,118,0,0,0,0,0,112,105,99,95,105,110,105,116,95,113,112,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,58,32,37,100,10,0,0,0,0,0,0,0,0,79,99,116,0,0,0,0,0,83,101,112,0,0,0,0,0,65,117,103,0,0,0,0,0,99,97,110,110,111,116,32,115,116,97,114,116,32,100,101,99,111,100,105,110,103,32,116,104,114,101,97,100,115,0,0,0,100,101,50,54,53,95,115,101,116,95,112,97,114,97,109,101,116,101,114,95,105,110,116,0,100,101,50,54,53,95,115,101,116,95,112,97,114,97,109,101,116,101,114,95,98,111,111,108,0,0,0,0,0,0,0,0,100,101,50,54,53,95,103,101,116,95,112,97,114,97,109,101,116,101,114,95,98,111,111,108,0,0,0,0,0,0,0,0,100,101,50,54,53,95,103,101,116,95,105,109,97,103,101,95,112,108,97,110,101,95,117,115,101,114,95,100,97,116,97,0,100,101,50,54,53,95,103,101,116,95,105,109,97,103,101,95,112,108,97,110,101,0,0,0,100,117,109,112,95,115,108,105,99,101,95,115,101,103,109,101,110,116,95,104,101,97,100,101,114,0,0,0,0,0,0,0,110,101,119,95,105,109,97,103,101,0,0,0,0,0,0,0,111,117,116,112,117,116,95,110,101,120,116,95,112,105,99,116,117,114,101,95,105,110,95,114,101,111,114,100,101,114,95,98,117,102,102,101,114,0,0,0,114,101,97,100,0,0,0,0,114,101,97,100,0,0,0,0,100,101,99,111,100,101,0,0,103,101,110,101,114,97,116,101,95,117,110,97,118,97,105,108,97,98,108,101,95,114,101,102,101,114,101,110,99,101,95,112,105,99,116,117,114,101,0,0,99,111,110,115,116,114,117,99,116,95,114,101,102,101,114,101,110,99,101,95,112,105,99,116,117,114,101,95,108,105,115,116,115,0,0,0,0,0,0,0,112,114,111,99,101,115,115,95,115,108,105,99,101,95,115,101,103,109,101,110,116,95,104,101,97,100,101,114,0,0,0,0,100,101,99,111,100,101,95,115,108,105,99,101,95,117,110,105,116,95,112,97,114,97,108,108,101,108,0,0,0,0,0,0,100,101,99,111,100,101,95,115,108,105,99,101,95,117,110,105,116,95,116,105,108,101,115,0,100,101,99,111,100,101,95,115,108,105,99,101,95,117,110,105,116,95,87,80,80,0,0,0,99,104,97,110,103,101,95,102,114,97,109,101,114,97,116,101,0,0,0,0,0,0,0,0,119,97,105,116,95,102,111,114,95,112,114,111,103,114,101,115,115,0,0,0,0,0,0,0,116,104,114,101,97,100,95,102,105,110,105,115,104,101,115,0,99,111,112,121,95,108,105,110,101,115,95,102,114,111,109,0,97,108,108,111,99,95,105,109,97,103,101,0,0,0,0,0,97,108,108,111,99,97,116,101,95,116,104,114,101,97,100,95,99,111,110,116,101,120,116,115,0,0,0,0,0,0,0,0,112,117,115,104,95,78,65,76,0,0,0,0,0,0,0,0,100,101,99,111,100,101,95,115,112,108,105,116,95,116,114,97,110,115,102,111,114,109,95,102,108,97,103,0,0,0,0,0,100,101,50,54,53,95,105,109,97,103,101,95,114,101,108,101,97,115,101,95,98,117,102,102,101,114,0,0,0,0,0,0,100,101,99,111,100,101,95,112,97,114,116,95,109,111,100,101,0,0,0,0,0,0,0,0,115,101,116,95,105,110,105,116,86,97,108,117,101,0,0,0,109,99,95,99,104,114,111,109,97,0,0,0,0,0,0,0,114,101,97,100,95,118,112,115,0,0,0,0,0,0,0,0,97,108,108,111,99,95,97,110,100,95,105,110,105,116,95,115,105,103,110,105,102,105,99,97,110,116,95,99,111,101,102,102,95,99,116,120,73,100,120,95,108,111,111,107,117,112,84,97,98,108,101,0,0,0,0,0,100,101,114,105,118,101,95,99,111,109,98,105,110,101,100,95,98,105,112,114,101,100,105,99,116,105,118,101,95,109,101,114,103,105,110,103,95,99,97,110,100,105,100,97,116,101,115,0,100,101,114,105,118,101,95,115,112,97,116,105,97,108,95,108,117,109,97,95,118,101,99,116,111,114,95,112,114,101,100,105,99,116,105,111,110,0,0,0,105,110,116,114,97,95,112,114,101,100,105,99,116,105,111,110,95,115,97,109,112,108,101,95,102,105,108,116,101,114,105,110,103,0,0,0,0,0,0,0,103,101,110,101,114,97,116,101,95,105,110,116,101,114,95,112,114,101,100,105,99,116,105,111,110,95,115,97,109,112,108,101,115,0,0,0,0,0,0,0,112,117,116,95,119,101,105,103,104,116,101,100,95,112,114,101,100,95,97,118,103,95,56,95,102,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,100,101,114,105,118,101,95,99,111,108,108,111,99,97,116,101,100,95,109,111,116,105,111,110,95,118,101,99,116,111,114,115,0,0,0,0,0,0,0,0,112,117,116,95,119,101,105,103,104,116,101,100,95,98,105,112,114,101,100,95,56,95,102,97,108,108,98,97,99,107,0,0,112,117,116,95,117,110,119,101,105,103,104,116,101,100,95,112,114,101,100,95,56,95,102,97,108,108,98,97,99,107,0,0,112,117,116,95,119,101,105,103,104,116,101,100,95,112,114,101,100,95,56,95,102,97,108,108,98,97,99,107,0,0,0,0,114,101,97,100,95,115,104,111,114,116,95,116,101,114,109,95,114,101,102,95,112,105,99,95,115,101,116,0,0,0,0,0,100,101,114,105,118,101,95,98,111,117,110,100,97,114,121,83,116,114,101,110,103,116,104,0,114,101,97,100,95,116,114,97,110,115,102,111,114,109,95,117,110,105,116,0,0,0,0,0,102,105,108,108,95,115,99,97,108,105,110,103,95,102,97,99,116,111,114,0,0,0,0,0,115,99,97,108,101,95,99,111,101,102,102,105,99,105,101,110,116,115,0,0,0,0,0,0,114,101,97,100,95,115,99,97,108,105,110,103,95,108,105,115,116,0,0,0,0,0,0,0,114,101,97,100,95,99,111,100,105,110,103,95,117,110,105,116,0,0,0,0,0,0,0,0,105,110,105,116,105,97,108,105,122,101,95,67,65,66,65,67,0,0,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,26,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,88,79,0,0,40,0,0,0,138,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,79,0,0,228,0,0,0,188,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,79,0,0,78,0,0,0,52,1,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,79,0,0,114,0,0,0,8,0,0,0,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,79,0,0,114,0,0,0,26,0,0,0,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,79,0,0,222,0,0,0,92,0,0,0,58,0,0,0,2,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,79,0,0,44,1,0,0,214,0,0,0,58,0,0,0,4,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,79,0,0,186,0,0,0,216,0,0,0,58,0,0,0,8,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,80,0,0,46,1,0,0,162,0,0,0,58,0,0,0,6,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,80,0,0,38,1,0,0,110,0,0,0,58,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,80,0,0,184,0,0,0,128,0,0,0,58,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,80,0,0,48,0,0,0,130,0,0,0,58,0,0,0,118,0,0,0,6,0,0,0,64,0,0,0,8,0,0,0,38,0,0,0,88,0,0,0,2,0,0,0,248,255,255,255,240,80,0,0,20,0,0,0,10,0,0,0,32,0,0,0,14,0,0,0,2,0,0,0,30,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,81,0,0,26,1,0,0,8,1,0,0,58,0,0,0,18,0,0,0,26,0,0,0,92,0,0,0,60,0,0,0,36,0,0,0,4,0,0,0,8,0,0,0,248,255,255,255,24,81,0,0,60,0,0,0,98,0,0,0,112,0,0,0,122,0,0,0,86,0,0,0,40,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,81,0,0,86,0,0,0,220,0,0,0,58,0,0,0,42,0,0,0,120,0,0,0,8,0,0,0,44,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,81,0,0,70,0,0,0,74,0,0,0,58,0,0,0,38,0,0,0,74,0,0,0,12,0,0,0,56,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,81,0,0,30,1,0,0,2,0,0,0,58,0,0,0,24,0,0,0,32,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,81,0,0,56,0,0,0,250,0,0,0,58,0,0,0,38,0,0,0,16,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,81,0,0,254,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,81,0,0,38,0,0,0,160,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,81,0,0,6,0,0,0,200,0,0,0,58,0,0,0,8,0,0,0,6,0,0,0,20,0,0,0,4,0,0,0,18,0,0,0,4,0,0,0,2,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,81,0,0,118,0,0,0,24,0,0,0,58,0,0,0,22,0,0,0,26,0,0,0,66,0,0,0,24,0,0,0,44,0,0,0,8,0,0,0,6,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,81,0,0,50,0,0,0,32,0,0,0,58,0,0,0,82,0,0,0,80,0,0,0,70,0,0,0,74,0,0,0,62,0,0,0,78,0,0,0,68,0,0,0,50,0,0,0,86,0,0,0,84,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,82,0,0,62,0,0,0,4,0,0,0,58,0,0,0,110,0,0,0,102,0,0,0,96,0,0,0,98,0,0,0,90,0,0,0,100,0,0,0,94,0,0,0,108,0,0,0,106,0,0,0,104,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,82,0,0,80,0,0,0,108,0,0,0,58,0,0,0,6,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,82,0,0,36,0,0,0,202,0,0,0,58,0,0,0,16,0,0,0,16,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,82,0,0,14,0,0,0,212,0,0,0,58,0,0,0,2,0,0,0,10,0,0,0,14,0,0,0,116,0,0,0,92,0,0,0,24,0,0,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,82,0,0,206,0,0,0,154,0,0,0,58,0,0,0,14,0,0,0,16,0,0,0,18,0,0,0,46,0,0,0,8,0,0,0,20,0,0,0,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,82,0,0,206,0,0,0,28,0,0,0,58,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,90,0,0,0,56,0,0,0,10,0,0,0,126,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,82,0,0,206,0,0,0,120,0,0,0,58,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,28,0,0,0,64,0,0,0,8,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,82,0,0,206,0,0,0,44,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,82,0,0,66,0,0,0,180,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,82,0,0,206,0,0,0,88,0,0,0,58,0,0,0,20,0,0,0,2,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,28,0,0,0,24,0,0,0,6,0,0,0,6,0,0,0,10,0,0,0,10,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,83,0,0,50,1,0,0,46,0,0,0,58,0,0,0,12,0,0,0,4,0,0,0,2,0,0,0,36,0,0,0,10,0,0,0,8,0,0,0,26,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,83,0,0,76,0,0,0,96,0,0,0,68,0,0,0,14,0,0,0,14,0,0,0,32,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,83,0,0,206,0,0,0,94,0,0,0,58,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,28,0,0,0,64,0,0,0,8,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,83,0,0,206,0,0,0,190,0,0,0,58,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,28,0,0,0,64,0,0,0,8,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,83,0,0,150,0,0,0,18,1,0,0,20,0,0,0,22,0,0,0,18,0,0,0,14,0,0,0,78,0,0,0,94,0,0,0,34,0,0,0,26,0,0,0,24,0,0,0,8,0,0,0,44,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,83,0,0,12,0,0,0,140,0,0,0,60,0,0,0,40,0,0,0,30,0,0,0,10,0,0,0,44,0,0,0,76,0,0,0,18,0,0,0,6,0,0,0,12,0,0,0,26,0,0,0,16,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,176,83,0,0,54,0,0,0,246,0,0,0,252,255,255,255,252,255,255,255,176,83,0,0,168,0,0,0,148,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,200,83,0,0,0,1,0,0,20,1,0,0,252,255,255,255,252,255,255,255,200,83,0,0,126,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,224,83,0,0,100,0,0,0,34,1,0,0,248,255,255,255,248,255,255,255,224,83,0,0,208,0,0,0,16,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,248,83,0,0,124,0,0,0,238,0,0,0,248,255,255,255,248,255,255,255,248,83,0,0,158,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,84,0,0,234,0,0,0,210,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,84,0,0,32,1,0,0,12,1,0,0,16,0,0,0,22,0,0,0,18,0,0,0,14,0,0,0,52,0,0,0,94,0,0,0,34,0,0,0,26,0,0,0,24,0,0,0,8,0,0,0,30,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,84,0,0,178,0,0,0,204,0,0,0,38,0,0,0,40,0,0,0,30,0,0,0,10,0,0,0,80,0,0,0,76,0,0,0,18,0,0,0,6,0,0,0,12,0,0,0,26,0,0,0,42,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,84,0,0,6,1,0,0,166,0,0,0,58,0,0,0,58,0,0,0,114,0,0,0,30,0,0,0,78,0,0,0,4,0,0,0,34,0,0,0,48,0,0,0,24,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,84,0,0,122,0,0,0,64,0,0,0,58,0,0,0,106,0,0,0,4,0,0,0,66,0,0,0,74,0,0,0,76,0,0,0,26,0,0,0,110,0,0,0,52,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,84,0,0,10,1,0,0,134,0,0,0,58,0,0,0,16,0,0,0,54,0,0,0,6,0,0,0,46,0,0,0,80,0,0,0,54,0,0,0,84,0,0,0,58,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,84,0,0,84,0,0,0,198,0,0,0,58,0,0,0,96,0,0,0,100,0,0,0,32,0,0,0,72,0,0,0,28,0,0,0,22,0,0,0,70,0,0,0,70,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,85,0,0,102,0,0,0,22,0,0,0,40,0,0,0,22,0,0,0,18,0,0,0,14,0,0,0,78,0,0,0,94,0,0,0,34,0,0,0,62,0,0,0,72,0,0,0,14,0,0,0,44,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,85,0,0,18,0,0,0,2,1,0,0,62,0,0,0,40,0,0,0,30,0,0,0,10,0,0,0,44,0,0,0,76,0,0,0,18,0,0,0,88,0,0,0,22,0,0,0,4,0,0,0,16,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,85,0,0,240,0,0,0,230,0,0,0,72,0,0,0,176,0,0,0,8,0,0,0,2,0,0,0,6,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,85,0,0,40,1,0,0,14,1,0,0,244,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,85,0,0,248,0,0,0,252,0,0,0,236,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,85,0,0,36,1,0,0,82,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,85,0,0,22,1,0,0,68,0,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,50,54,116,104,114,101,97,100,95,116,97,115,107,95,100,101,98,108,111,99,107,95,67,84,66,82,111,119,0,0,0,0,50,53,116,104,114,101,97,100,95,116,97,115,107,95,115,108,105,99,101,95,115,101,103,109,101,110,116,0,0,0,0,0,49,57,116,104,114,101,97,100,95,116,97,115,107,95,99,116,98,95,114,111,119,0,0,0,49,53,116,104,114,101,97,100,95,116,97,115,107,95,115,97,111,0,0,0,0,0,0,0,49,49,116,104,114,101,97,100,95,116,97,115,107,0,0,0,0,0,0,0,56,67,0,0,0,0,0,0,72,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,67,0,0,152,79,0,0,0,0,0,0,0,0,0,0,152,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,67,0,0,144,66,0,0,192,67,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,88,84,0,0,0,0,0,0,144,66,0,0,8,68,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,96,84,0,0,0,0,0,0,144,66,0,0,80,68,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([104,84,0,0,0,0,0,0,144,66,0,0,152,68,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,112,84,0,0,0,0,0,0,0,0,0,0,224,68,0,0,160,81,0,0,0,0,0,0,0,0,0,0,16,69,0,0,160,81,0,0,0,0,0,0,144,66,0,0,64,69,0,0,0,0,0,0,1,0,0,0,152,83,0,0,0,0,0,0,144,66,0,0,88,69,0,0,0,0,0,0,1,0,0,0,152,83,0,0,0,0,0,0,144,66,0,0,112,69,0,0,0,0,0,0,1,0,0,0,160,83,0,0,0,0,0,0,144,66,0,0,136,69,0,0,0,0,0,0,1,0,0,0,160,83,0,0,0,0,0,0,144,66,0,0,160,69,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,8,85,0,0,0,8,0,0,144,66,0,0,232,69,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,8,85,0,0,0,8,0,0,144,66,0,0,48,70,0,0,0,0,0,0,3,0,0,0,216,82,0,0,2,0,0,0,168,79,0,0,2,0,0,0,56,83,0,0,0,8,0,0,144,66,0,0,120,70,0,0,0,0,0,0,3,0,0,0,216,82,0,0,2,0,0,0,168,79,0,0,2,0,0,0,64,83,0,0,0,8,0,0,0,0,0,0,192,70,0,0,216,82,0,0,0,0,0,0,0,0,0,0,216,70,0,0,216,82,0,0,0,0,0,0,144,66,0,0,240,70,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,168,83,0,0,2,0,0,0,144,66,0,0,8,71,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,168,83,0,0,2,0,0,0,0,0,0,0,32,71,0,0,0,0,0,0,56,71,0,0,16,84,0,0,0,0,0,0,144,66,0,0,88,71,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,80,80,0,0,0,0,0,0,144,66,0,0,160,71,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,104,80,0,0,0,0,0,0,144,66,0,0,232,71,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,128,80,0,0,0,0,0,0,144,66,0,0,48,72,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,152,80,0,0,0,0,0,0,0,0,0,0,120,72,0,0,216,82,0,0,0,0,0,0,0,0,0,0,144,72,0,0,216,82,0,0,0,0,0,0,144,66,0,0,168,72,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,32,84,0,0,2,0,0,0,144,66,0,0,208,72,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,32,84,0,0,2,0,0,0,144,66,0,0,248,72,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,32,84,0,0,2,0,0,0,144,66,0,0,32,73,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,32,84,0,0,2,0,0,0,0,0,0,0,72,73,0,0,144,83,0,0,0,0,0,0,0,0,0,0,96,73,0,0,216,82,0,0,0,0,0,0,144,66,0,0,120,73,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,0,85,0,0,2,0,0,0,144,66,0,0,144,73,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,0,85,0,0,2,0,0,0,0,0,0,0,168,73,0,0,0,0,0,0,208,73,0,0,0,0,0,0,248,73,0,0,40,84,0,0,0,0,0,0,0,0,0,0,24,74,0,0,184,82,0,0,0,0,0,0,0,0,0,0,64,74,0,0,184,82,0,0,0,0,0,0,0,0,0,0,104,74,0,0,0,0,0,0,160,74,0,0,0,0,0,0,216,74,0,0,0,0,0,0,248,74,0,0,0,0,0,0,24,75,0,0,0,0,0,0,56,75,0,0,0,0,0,0,88,75,0,0,144,66,0,0,112,75,0,0,0,0,0,0,1,0,0,0,48,80,0,0,3,244,255,255,144,66,0,0,160,75,0,0,0,0,0,0,1,0,0,0,64,80,0,0,3,244,255,255,144,66,0,0,208,75,0,0,0,0,0,0,1,0,0,0,48,80,0,0,3,244,255,255,144,66,0,0,0,76,0,0,0,0,0,0,1,0,0,0,64,80,0,0,3,244,255,255,0,0,0,0,48,76,0,0,120,79,0,0,0,0,0,0,0,0,0,0,72,76,0,0,0,0,0,0,96,76,0,0,136,83,0,0,0,0,0,0,0,0,0,0,120,76,0,0,120,83,0,0,0,0,0,0,0,0,0,0,152,76,0,0,128,83,0,0,0,0,0,0,0,0,0,0,184,76,0,0,0,0,0,0,216,76,0,0,0,0,0,0,248,76,0,0,0,0,0,0,24,77,0,0,144,66,0,0,56,77,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,248,84,0,0,2,0,0,0,144,66,0,0,88,77,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,248,84,0,0,2,0,0,0,144,66,0,0,120,77,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,248,84,0,0,2,0,0,0,144,66,0,0,152,77,0,0,0,0,0,0,2,0,0,0,216,82,0,0,2,0,0,0,248,84,0,0,2,0,0,0,0,0,0,0,184,77,0,0,0,0,0,0,208,77,0,0,0,0,0,0,232,77,0,0,0,0,0,0,0,78,0,0,120,83,0,0,0,0,0,0,0,0,0,0,24,78,0,0,128,83,0,0,0,0,0,0,0,0,0,0,48,78,0,0,80,85,0,0,0,0,0,0,0,0,0,0,88,78,0,0,80,85,0,0,0,0,0,0,0,0,0,0,128,78,0,0,96,85,0,0,0,0,0,0,0,0,0,0,168,78,0,0,80,79,0,0,0,0,0,0,0,0,0,0,208,78,0,0,176,85,0,0,0,0,0,0,0,0,0,0,240,78,0,0,176,85,0,0,0,0,0,0,0,0,0,0,16,79,0,0,176,85,0,0,0,0,0,0,0,0,0,0,40,79,0,0,176,85,0,0,0,0,0,0,0,0,0,0,64,79,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,4,0,0,0,18,0,0,0,29,55,74,84,74,74,0,182,84,227,182,55,55,172,74,227,0,1,4,5,2,3,4,5,6,6,8,8,7,7,8,99,128,176,208,240,128,167,197,227,128,158,187,216,123,150,178,205,116,142,169,195,111,135,160,185,105,128,152,175,100,122,144,166,95,116,137,158,90,110,130,150,85,104,123,142,81,99,117,135,77,94,111,128,73,89,105,122,69,85,100,116,66,80,95,110,62,76,90,104,59,72,86,99,56,69,81,94,53,65,77,89,51,62,73,85,48,59,69,80,46,56,66,76,43,53,63,72,41,50,59,69,39,48,56,65,37,45,54,62,35,43,51,59,33,41,48,56,32,39,46,53,30,37,43,50,29,35,41,48,27,33,39,45,26,31,37,43,24,30,35,41,23,28,33,39,22,27,32,37,21,26,30,35,20,24,29,33,19,23,27,31,18,22,26,30,17,21,25,28,16,20,23,27,15,19,22,25,14,18,21,24,14,17,20,23,13,16,19,22,12,15,18,21,12,14,17,20,11,14,16,19,11,13,15,18,10,12,15,17,10,12,14,16,9,11,13,15,9,11,12,14,8,10,12,14,8,9,11,13,7,9,11,12,7,9,10,12,7,8,10,11,6,8,9,11,6,7,9,10,6,7,8,9,2,2,2,2,0,0,0,0,0,0,0,0,24,181,0,0,152,180,0,0,152,178,0,0,152,170,0,0,0,0,0,0,0,0,0,0,120,170,0,0,248,169,0,0,248,167,0,0,248,159,0,0,0,0,0,0,0,0,0,0,216,159,0,0,88,159,0,0,88,157,0,0,88,149,0,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,90,90,88,85,82,78,73,67,61,54,46,38,31,22,13,4,252,243,234,225,218,210,202,195,189,183,178,174,171,168,166,166,90,87,80,70,57,43,25,9,247,231,213,199,186,176,169,166,166,169,176,186,199,213,231,247,9,25,43,57,70,80,87,90,90,82,67,46,22,252,225,202,183,171,166,168,178,195,218,243,13,38,61,78,88,90,85,73,54,31,4,234,210,189,174,166,89,75,50,18,238,206,181,167,167,181,206,238,18,50,75,89,89,75,50,18,238,206,181,167,167,181,206,238,18,50,75,89,88,67,31,243,202,174,166,178,210,252,38,73,90,85,61,22,234,195,171,166,183,218,4,46,78,90,82,54,13,225,189,168,87,57,9,213,176,166,186,231,25,70,90,80,43,247,199,169,169,199,247,43,80,90,70,25,231,186,166,176,213,9,57,87,85,46,243,189,166,183,234,38,82,88,54,252,195,166,178,225,31,78,90,61,4,202,168,174,218,22,73,90,67,13,210,171,83,36,220,173,173,220,36,83,83,36,220,173,173,220,36,83,83,36,220,173,173,220,36,83,83,36,220,173,173,220,36,83,82,22,202,166,195,13,78,85,31,210,166,189,4,73,88,38,218,168,183,252,67,90,46,225,171,178,243,61,90,54,234,174,80,9,186,169,231,57,90,43,213,166,199,25,87,70,247,176,176,247,70,87,25,199,166,213,43,90,57,231,169,186,9,80,78,252,174,183,13,85,67,234,168,195,31,90,54,218,166,210,46,90,38,202,166,225,61,88,22,189,171,243,73,82,4,178,75,238,167,206,50,89,18,181,181,18,89,50,206,167,238,75,75,238,167,206,50,89,18,181,181,18,89,50,206,167,238,75,73,225,166,234,78,67,218,166,243,82,61,210,168,252,85,54,202,171,4,88,46,195,174,13,90,38,189,178,22,90,31,183,70,213,169,9,90,25,176,199,57,80,231,166,247,87,43,186,186,43,87,247,166,231,80,57,199,176,25,90,9,169,213,70,67,202,178,38,85,234,166,4,90,13,168,225,82,46,183,195,61,73,210,174,31,88,243,166,252,90,22,171,218,78,54,189,64,192,192,64,64,192,192,64,64,192,192,64,64,192,192,64,64,192,192,64,64,192,192,64,64,192,192,64,64,192,192,64,61,183,210,82,31,168,243,90,252,166,22,85,218,178,54,67,189,202,78,38,171,234,90,4,166,13,88,225,174,46,73,195,57,176,231,90,247,169,43,70,186,213,87,9,166,25,80,199,199,80,25,166,9,87,213,186,70,43,169,247,90,231,176,57,54,171,252,88,210,195,82,13,166,38,67,178,234,90,225,183,73,31,166,22,78,189,218,90,243,174,61,46,168,4,85,202,50,167,18,75,181,238,89,206,206,89,238,181,75,18,167,50,50,167,18,75,181,238,89,206,206,89,238,181,75,18,167,50,46,166,38,54,166,31,61,168,22,67,171,13,73,174,4,78,178,252,82,183,243,85,189,234,88,195,225,90,202,218,90,210,43,166,57,25,169,70,9,176,80,247,186,87,231,199,90,213,213,90,199,231,87,186,247,80,176,9,70,169,25,57,166,43,38,168,73,252,189,90,210,225,85,178,13,61,166,54,22,174,82,234,202,90,195,243,78,171,31,46,166,67,4,183,88,218,36,173,83,220,220,83,173,36,36,173,83,220,220,83,173,36,36,173,83,220,220,83,173,36,36,173,83,220,220,83,173,36,31,178,90,195,4,54,168,82,218,234,73,166,67,243,210,85,171,46,13,189,90,183,22,38,174,88,202,252,61,166,78,225,25,186,90,176,43,9,199,87,169,57,247,213,80,166,70,231,231,70,166,80,213,247,57,169,87,199,9,43,176,90,186,25,22,195,85,166,73,218,252,46,178,90,174,54,243,225,67,168,88,189,31,13,202,82,166,78,210,4,38,183,90,171,61,234,18,206,75,167,89,181,50,238,238,50,181,89,167,75,206,18,18,206,75,167,89,181,50,238,238,50,181,89,167,75,206,18,13,218,61,178,88,166,85,183,54,225,4,22,210,67,174,90,166,82,189,46,234,252,31,202,73,171,90,168,78,195,38,243,9,231,43,199,70,176,87,166,90,169,80,186,57,213,25,247,247,25,213,57,186,80,169,90,166,87,176,70,199,43,231,9,4,243,22,225,38,210,54,195,67,183,78,174,85,168,90,166,90,166,88,171,82,178,73,189,61,202,46,218,31,234,13,252,72,149,0,0,240,127,0,0,208,127,0,0,80,127,0,0,80,125,0,0,80,117,0,0,0,0,0,0,0,0,0,0,72,149,0,0,152,138,0,0,120,138,0,0,248,137,0,0,248,135,0,0,248,127,0,0,0,0,0,0,0,0,0,0,72,149,0,0,64,149,0,0,32,149,0,0,160,148,0,0,160,146,0,0,160,138,0,0,0,0,0,0,0,0,0,0,110,0,0,0,110,0,0,0,124,0,0,0,125,0,0,0,140,0,0,0,153,0,0,0,125,0,0,0,127,0,0,0,140,0,0,0,109,0,0,0,111,0,0,0,143,0,0,0,127,0,0,0,111,0,0,0,79,0,0,0,108,0,0,0,123,0,0,0,63,0,0,0,125,0,0,0,110,0,0,0,94,0,0,0,110,0,0,0,95,0,0,0,79,0,0,0,125,0,0,0,111,0,0,0,110,0,0,0,78,0,0,0,110,0,0,0,111,0,0,0,111,0,0,0,95,0,0,0,94,0,0,0,108,0,0,0,123,0,0,0,108,0,0,0,125,0,0,0,110,0,0,0,124,0,0,0,110,0,0,0,95,0,0,0,94,0,0,0,125,0,0,0,111,0,0,0,111,0,0,0,79,0,0,0,125,0,0,0,126,0,0,0,111,0,0,0,111,0,0,0,79,0,0,0,108,0,0,0,123,0,0,0,93,0,0,0,138,0,0,0,153,0,0,0,136,0,0,0,167,0,0,0,152,0,0,0,152,0,0,0,107,0,0,0,167,0,0,0,91,0,0,0,122,0,0,0,107,0,0,0,167,0,0,0,107,0,0,0,167,0,0,0,91,0,0,0,107,0,0,0,107,0,0,0,167,0,0,0,140,0,0,0,92,0,0,0,137,0,0,0,138,0,0,0,140,0,0,0,152,0,0,0,138,0,0,0,139,0,0,0,153,0,0,0,74,0,0,0,149,0,0,0,92,0,0,0,139,0,0,0,107,0,0,0,122,0,0,0,152,0,0,0,140,0,0,0,179,0,0,0,166,0,0,0,182,0,0,0,140,0,0,0,227,0,0,0,122,0,0,0,197,0,0,0,154,0,0,0,196,0,0,0,196,0,0,0,167,0,0,0,154,0,0,0,152,0,0,0,167,0,0,0,182,0,0,0,182,0,0,0,134,0,0,0,149,0,0,0,136,0,0,0,153,0,0,0,121,0,0,0,136,0,0,0,137,0,0,0,169,0,0,0,194,0,0,0,166,0,0,0,167,0,0,0,154,0,0,0,167,0,0,0,137,0,0,0,182,0,0,0,154,0,0,0,196,0,0,0,167,0,0,0,167,0,0,0,154,0,0,0,152,0,0,0,167,0,0,0,182,0,0,0,182,0,0,0,134,0,0,0,149,0,0,0,136,0,0,0,153,0,0,0,121,0,0,0,136,0,0,0,122,0,0,0,169,0,0,0,208,0,0,0,166,0,0,0,167,0,0,0,154,0,0,0,152,0,0,0,167,0,0,0,182,0,0,0,200,0,0,0,185,0,0,0,160,0,0,0,0,0,0,0,184,0,0,0,154,0,0,0,183,0,0,0,0,0,0,0,154,0,0,0,154,0,0,0,154,0,0,0,0,0,0,0,111,0,0,0,111,0,0,0,125,0,0,0,110,0,0,0,110,0,0,0,94,0,0,0,124,0,0,0,108,0,0,0,124,0,0,0,107,0,0,0,125,0,0,0,141,0,0,0,179,0,0,0,153,0,0,0,125,0,0,0,107,0,0,0,125,0,0,0,141,0,0,0,179,0,0,0,153,0,0,0,125,0,0,0,107,0,0,0,125,0,0,0,141,0,0,0,179,0,0,0,153,0,0,0,125,0,0,0,140,0,0,0,139,0,0,0,182,0,0,0,182,0,0,0,152,0,0,0,136,0,0,0,152,0,0,0,136,0,0,0,153,0,0,0,136,0,0,0,139,0,0,0,111,0,0,0,136,0,0,0,139,0,0,0,111,0,0,0,155,0,0,0,154,0,0,0,139,0,0,0,153,0,0,0,139,0,0,0,123,0,0,0,123,0,0,0,63,0,0,0,153,0,0,0,166,0,0,0,183,0,0,0,140,0,0,0,136,0,0,0,153,0,0,0,154,0,0,0,166,0,0,0,183,0,0,0,140,0,0,0,136,0,0,0,153,0,0,0,154,0,0,0,166,0,0,0,183,0,0,0,140,0,0,0,136,0,0,0,153,0,0,0,154,0,0,0,170,0,0,0,153,0,0,0,123,0,0,0,123,0,0,0,107,0,0,0,121,0,0,0,107,0,0,0,121,0,0,0,167,0,0,0,151,0,0,0,183,0,0,0,140,0,0,0,151,0,0,0,183,0,0,0,140,0,0,0,170,0,0,0,154,0,0,0,139,0,0,0,153,0,0,0,139,0,0,0,123,0,0,0,123,0,0,0,63,0,0,0,124,0,0,0,166,0,0,0,183,0,0,0,140,0,0,0,136,0,0,0,153,0,0,0,154,0,0,0,166,0,0,0,183,0,0,0,140,0,0,0,136,0,0,0,153,0,0,0,154,0,0,0,166,0,0,0,183,0,0,0,140,0,0,0,136,0,0,0,153,0,0,0,154,0,0,0,170,0,0,0,153,0,0,0,138,0,0,0,138,0,0,0,122,0,0,0,121,0,0,0,122,0,0,0,121,0,0,0,167,0,0,0,151,0,0,0,183,0,0,0,140,0,0,0,151,0,0,0,183,0,0,0,140,0,0,0,63,0,0,0,152,0,0,0,152,0,0,0,0,0,0,0,140,0,0,0,198,0,0,0,169,0,0,0,198,0,0,0,153,0,0,0,153,0,0,0,153,0,0,0,0,0,0,0,153,0,0,0,138,0,0,0,138,0,0,0,124,0,0,0,138,0,0,0,94,0,0,0,224,0,0,0,167,0,0,0,122,0,0,0,0,0,0,0,91,0,0,0,171,0,0,0,134,0,0,0,141,0,0,0,121,0,0,0,140,0,0,0,61,0,0,0,154,0,0,0,121,0,0,0,140,0,0,0,61,0,0,0,154,0,0,0,139,0,0,0,139,0,0,0,16,16,16,16,16,16,16,16,16,16,17,16,17,16,17,18,17,18,18,17,18,21,19,20,21,20,19,21,24,22,22,24,24,22,22,24,25,25,27,30,27,25,25,29,31,35,35,31,29,36,41,44,41,36,47,54,54,47,65,70,65,88,88,115,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,18,18,18,18,18,18,20,20,20,20,20,20,20,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,28,28,28,28,28,28,33,33,33,33,33,41,41,41,41,54,54,54,71,71,91,154,0,0,0,154,0,0,0,149,0,0,0,134,0,0,0,95,0,0,0,79,0,0,0,63,0,0,0,31,0,0,0,31,0,0,0,0,0,0,0,139,0,0,0,141,0,0,0,157,0,0,0,107,0,0,0,139,0,0,0,126,0,0,0,107,0,0,0,139,0,0,0,126,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,79,0,0,0,0,0,0,0,197,0,0,0,185,0,0,0,201,0,0,0,197,0,0,0,185,0,0,0,201,0,0,0,168,0,0,0,0,0,0,0,153,0,0,0,153,0,0,0,110,0,0,0,154,0,0,0,94,0,0,0,138,0,0,0,182,0,0,0,154,0,0,0,149,0,0,0,107,0,0,0,167,0,0,0,154,0,0,0,149,0,0,0,92,0,0,0,167,0,0,0,154,0,0,0,184,0,0,0,154,0,0,0,139,0,0,0,154,0,0,0,154,0,0,0,154,0,0,0,139,0,0,0,154,0,0,0,154,0,0,0,0,0,0,0,122,0,0,0,137,0,0,0,111,0,0,0,141,0,0,0,153,0,0,0,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,62,63,0,0,1,2,2,4,4,5,6,7,8,9,9,11,11,12,13,13,15,15,16,16,18,18,19,19,21,21,22,22,23,24,24,25,26,26,27,27,28,29,29,30,30,30,31,32,32,33,33,33,34,34,35,35,35,36,36,36,37,37,37,38,38,63,0,240,255,255,154,249,255,255,114,252,255,255,138,253,255,255,30,254,255,255,122,254,255,255,197,254,255,255,0,255,255,255,197,254,255,255,122,254,255,255,30,254,255,255,138,253,255,255,114,252,255,255,154,249,255,255,0,240,255,255,0,0,0,0,255,255,255,255,2,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,5,5,6,6,7,8,9,10,11,13,14,16,18,20,22,24,0,0,255,255,255,255,2,0,0,0,2,0,0,0,1,0,0,0,6,5,4,4,3,3,3,3,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,40,0,0,0,45,0,0,0,51,0,0,0,57,0,0,0,64,0,0,0,72,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+20480);



var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  
  
  var ___cxa_last_thrown_exception=0;function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }
  
  var ___cxa_exception_header_size=8;function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

  
  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr - ___cxa_exception_header_size);
      } catch(e) { // XXX FIXME
      }
    }

  function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  
   
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;

  function _llvm_umul_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x*y > 4294967295),(x*y)>>>0)|0);
    }

  
  var ___cxa_caught_exceptions=[];function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }

  function _llvm_lifetime_start() {}

  function _llvm_lifetime_end() {}

  
   
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  var _llvm_memcpy_p0i8_p0i8_i64=_memcpy;

  var _llvm_memset_p0i8_i64=_memset;

  
  function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = ___cxa_caught_exceptions.pop();
      if (ptr) {
        header = ptr - ___cxa_exception_header_size;
        var destructor = HEAP32[(((header)+(4))>>2)];
        if (destructor) {
          Runtime.dynCall('vi', destructor, [ptr]);
          HEAP32[(((header)+(4))>>2)]=0;
        }
        ___cxa_free_exception(ptr);
        ___cxa_last_thrown_exception = 0;
      }
    }function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = ___cxa_caught_exceptions.pop();
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }


  function _llvm_uadd_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x+y > 4294967295),(x+y)>>>0)|0);
    }

  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
  
              if (!hasByteServing) chunkSize = datalength;
  
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
  
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
  
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
  
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      return FS.getStreamFromPtr(stream).fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }

  var _llvm_va_start=undefined;

  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function _llvm_va_end() {}



  function _pthread_create() {
  Module['printErr']('missing function: pthread_create'); abort(-1);
  }

  function _pthread_join() { throw 'TODO: ' + aborter }

  function _pthread_mutex_init() {}

  function _pthread_mutex_destroy() {}

  function _pthread_mutex_lock() {}

  function _pthread_mutex_unlock() {}

  function _pthread_cond_init() {}

  function _pthread_cond_destroy() {}

  function _pthread_cond_broadcast() {
      return 0;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  function _pthread_cond_signal() { throw 'TODO: ' + aborter }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_guard_release() {}

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;


  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  
  
  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;

  function __ZNSt9exceptionD2Ev() {}

  function ___errno_location() {
      return ___errno_state;
    }


  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _abort() {
      Module['abort']();
    }

  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function ___cxa_guard_abort() {}

  
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }function _isxdigit_l(chr) {
      return _isxdigit(chr); // no locale support yet
    }

  
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }function _isdigit_l(chr) {
      return _isdigit(chr); // no locale support yet
    }

  
  
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
  
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
  
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
                if (next === 0) return i > 0 ? fields : fields-1; // we failed to read the full length of this field
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
  
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
  
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
  
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
  
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
  
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
  
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
  
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16);
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text);
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text);
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j];
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }

  function _freelocale(locale) {
      _free(locale);
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  
  
  
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
  
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
  
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
  
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
  
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
  
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str;
      }
  
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
  
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }function _strtoull_l(str, endptr, base) {
      return _strtoull(str, endptr, base); // no locale support yet
    }

  
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }function _strtoll_l(str, endptr, base) {
      return _strtoll(str, endptr, base); // no locale support yet
    }

  function _uselocale(locale) {
      return 0;
    }

  
  
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }

  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }


  var _fabs=Math_abs;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  
  function _copysign(a, b) {
      return __reallyNegative(a) === __reallyNegative(b) ? a : -a;
    }var _copysignl=_copysign;

  
  function _fmod(x, y) {
      return x % y;
    }var _fmodl=_fmod;






  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
  
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (scrollX + rect.left);
              y = t.pageY - (scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (scrollX + rect.left);
            y = event.pageY - (scrollY + rect.top);
          }
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12) {
  try {
    Module["dynCall_viiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env._stdin|0;var p=env.__ZTVN10__cxxabiv117__class_type_infoE|0;var q=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var r=env._stderr|0;var s=env._stdout|0;var t=env.__ZTISt9exception|0;var u=env.___dso_handle|0;var v=+env.NaN;var w=+env.Infinity;var x=0;var y=0;var z=0;var A=0;var B=0,C=0,D=0,E=0,F=0.0,G=0,H=0,I=0,J=0.0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=0;var U=global.Math.floor;var V=global.Math.abs;var W=global.Math.sqrt;var X=global.Math.pow;var Y=global.Math.cos;var Z=global.Math.sin;var _=global.Math.tan;var $=global.Math.acos;var aa=global.Math.asin;var ba=global.Math.atan;var ca=global.Math.atan2;var da=global.Math.exp;var ea=global.Math.log;var fa=global.Math.ceil;var ga=global.Math.imul;var ha=env.abort;var ia=env.assert;var ja=env.asmPrintInt;var ka=env.asmPrintFloat;var la=env.min;var ma=env.invoke_viiiii;var na=env.invoke_viiiiiii;var oa=env.invoke_vi;var pa=env.invoke_vii;var qa=env.invoke_viiiiiiiiiiii;var ra=env.invoke_iiiii;var sa=env.invoke_viiiiiid;var ta=env.invoke_ii;var ua=env.invoke_iiii;var va=env.invoke_viii;var wa=env.invoke_viiiiid;var xa=env.invoke_v;var ya=env.invoke_iiiiiiiii;var za=env.invoke_viiiiiiiii;var Aa=env.invoke_viiiiiiii;var Ba=env.invoke_viiiiii;var Ca=env.invoke_iii;var Da=env.invoke_iiiiii;var Ea=env.invoke_viiii;var Fa=env._llvm_lifetime_end;var Ga=env.__scanString;var Ha=env._pthread_mutex_lock;var Ia=env.___cxa_end_catch;var Ja=env._strtoull;var Ka=env._fflush;var La=env.__isLeapYear;var Ma=env._fwrite;var Na=env._send;var Oa=env._pthread_mutex_init;var Pa=env._llvm_umul_with_overflow_i32;var Qa=env._isspace;var Ra=env._read;var Sa=env._isxdigit_l;var Ta=env._fileno;var Ua=env.___cxa_guard_abort;var Va=env._newlocale;var Wa=env.___gxx_personality_v0;var Xa=env._pthread_cond_wait;var Ya=env.___cxa_rethrow;var Za=env._fmod;var _a=env.___resumeException;var $a=env._llvm_va_end;var ab=env._vsscanf;var bb=env._snprintf;var cb=env._fgetc;var db=env.__getFloat;var eb=env._pthread_cond_signal;var fb=env.___cxa_free_exception;var gb=env._isdigit_l;var hb=env.___setErrNo;var ib=env._isxdigit;var jb=env._exit;var kb=env._sprintf;var lb=env._asprintf;var mb=env.___ctype_b_loc;var nb=env._freelocale;var ob=env._catgets;var pb=env.___cxa_is_number_type;var qb=env._llvm_uadd_with_overflow_i32;var rb=env.___cxa_does_inherit;var sb=env.___cxa_guard_acquire;var tb=env.___cxa_begin_catch;var ub=env._emscripten_memcpy_big;var vb=env._recv;var wb=env.__parseInt64;var xb=env.__ZSt18uncaught_exceptionv;var yb=env.__ZNSt9exceptionD2Ev;var zb=env._mkport;var Ab=env._copysign;var Bb=env.__exit;var Cb=env._strftime;var Db=env.___cxa_throw;var Eb=env._pread;var Fb=env._strtoull_l;var Gb=env.__arraySum;var Hb=env._sysconf;var Ib=env._strtoll_l;var Jb=env.___cxa_find_matching_catch;var Kb=env.__formatString;var Lb=env._pthread_cond_broadcast;var Mb=env.__ZSt9terminatev;var Nb=env._vfprintf;var Ob=env._pthread_mutex_unlock;var Pb=env.___cxa_call_unexpected;var Qb=env._sbrk;var Rb=env._atexit;var Sb=env.___errno_location;var Tb=env._strerror;var Ub=env._pthread_mutex_destroy;var Vb=env._catclose;var Wb=env._llvm_lifetime_start;var Xb=env.___cxa_guard_release;var Yb=env._ungetc;var Zb=env._pthread_cond_destroy;var _b=env._uselocale;var $b=env._vsnprintf;var ac=env._sscanf;var bc=env.___assert_fail;var cc=env._fread;var dc=env._strftime_l;var ec=env._abort;var fc=env._fprintf;var gc=env._isdigit;var hc=env._strtoll;var ic=env.__addDays;var jc=env._fabs;var kc=env.__reallyNegative;var lc=env._write;var mc=env.___cxa_allocate_exception;var nc=env._vasprintf;var oc=env._catopen;var pc=env.___ctype_toupper_loc;var qc=env.___ctype_tolower_loc;var rc=env._pthread_join;var sc=env._pthread_cond_init;var tc=env._pwrite;var uc=env._strerror_r;var vc=env._pthread_create;var wc=env._time;var xc=0.0;
// EMSCRIPTEN_START_FUNCS
function zh(e,f,g,h,i,j,k,l,m,n,o){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;p=c[e+78700>>2]|0;q=c[e+78740>>2]|0;r=(ga(g>>q,c[e+78744>>2]|0)|0)+(f>>q)|0;q=(c[e+78732>>2]|0)+(r*3|0)|0;r=((d[q]|d[q+1|0]<<8)<<16>>16&65535)>>>3&7;q=r&255;s=i-1|0;t=m+j|0;u=t-1|0;v=i>>p;w=(v|0)==(s>>p|0);if(w){if((j>>p|0)==(u>>p|0)){x=5}else{x=3}}else{x=3}do{if((x|0)==3){if(k<<24>>24==0&(n|0)==1){if((q&3|0)==2|r<<24>>24==7){x=5;break}}y=o|0;if(!(_f(e,f,g,h,i,j,l,m,n,s,u)|0)){z=y;x=7;break}a[y]=1;A=c[e+78760>>2]|0;B=(ga(u>>A,c[e+78764>>2]|0)|0)+(s>>A)|0;A=o+8|0;C=(c[e+78752>>2]|0)+(B*12|0)|0;b[A>>1]=b[C>>1]|0;b[A+2>>1]=b[C+2>>1]|0;b[A+4>>1]=b[C+4>>1]|0;b[A+6>>1]=b[C+6>>1]|0;b[A+8>>1]=b[C+8>>1]|0;b[A+10>>1]=b[C+10>>1]|0;D=1;E=y}}while(0);if((x|0)==5){z=o|0;x=7}if((x|0)==7){a[z]=0;b[o+12>>1]=0;b[o+14>>1]=0;a[o+8|0]=-1;a[o+10|0]=0;b[o+16>>1]=0;b[o+18>>1]=0;a[o+9|0]=-1;a[o+11|0]=0;D=0;E=z}z=l+i|0;u=z-1|0;r=j-1|0;if((v|0)==(u>>p|0)){if((j>>p|0)==(r>>p|0)){x=13}else{x=11}}else{x=11}a:do{if((x|0)==11){if(k<<24>>24==0&(n|0)==1){if((q|0)==5|(q|0)==4|(q|0)==1){x=13;break}}y=o+1|0;if(!(_f(e,f,g,h,i,j,l,m,n,u,r)|0)){F=y;x=15;break}a[y]=1;C=c[e+78760>>2]|0;A=(ga(r>>C,c[e+78764>>2]|0)|0)+(u>>C)|0;C=o+20|0;B=(c[e+78752>>2]|0)+(A*12|0)|0;b[C>>1]=b[B>>1]|0;b[C+2>>1]=b[B+2>>1]|0;b[C+4>>1]=b[B+4>>1]|0;b[C+6>>1]=b[B+6>>1]|0;b[C+8>>1]=b[B+8>>1]|0;b[C+10>>1]=b[B+10>>1]|0;if(D){G=0}else{H=1;I=y;break}do{B=a[o+10+G|0]|0;if(!(B<<24>>24==(a[o+22+G|0]|0))){H=1;I=y;break a}if(!(B<<24>>24==0)){if((b[o+12+(G<<2)>>1]|0)!=(b[o+24+(G<<2)>>1]|0)){H=1;I=y;break a}if((b[o+12+(G<<2)+2>>1]|0)!=(b[o+24+(G<<2)+2>>1]|0)){H=1;I=y;break a}if((a[o+8+G|0]|0)!=(a[o+20+G|0]|0)){H=1;I=y;break a}}G=G+1|0;}while((G|0)<2);a[y]=0;H=1;I=y}}while(0);if((x|0)==13){F=o+1|0;x=15}if((x|0)==15){a[F]=0;b[o+24>>1]=0;b[o+26>>1]=0;a[o+20|0]=-1;a[o+22|0]=0;b[o+28>>1]=0;b[o+30>>1]=0;a[o+21|0]=-1;a[o+23|0]=0;H=0;I=F}do{if((v|0)==(z>>p|0)){if((j>>p|0)!=(r>>p|0)){x=27;break}J=o+2|0;x=28}else{x=27}}while(0);b:do{if((x|0)==27){v=o+2|0;if(!(_f(e,f,g,h,i,j,l,m,n,z,r)|0)){J=v;x=28;break}a[v]=1;F=c[e+78760>>2]|0;G=(ga(r>>F,c[e+78764>>2]|0)|0)+(z>>F)|0;F=o+32|0;u=(c[e+78752>>2]|0)+(G*12|0)|0;b[F>>1]=b[u>>1]|0;b[F+2>>1]=b[u+2>>1]|0;b[F+4>>1]=b[u+4>>1]|0;b[F+6>>1]=b[u+6>>1]|0;b[F+8>>1]=b[u+8>>1]|0;b[F+10>>1]=b[u+10>>1]|0;if(H){K=0}else{L=v;break}do{u=a[o+22+K|0]|0;if(!(u<<24>>24==(a[o+34+K|0]|0))){L=v;break b}if(!(u<<24>>24==0)){if((b[o+24+(K<<2)>>1]|0)!=(b[o+36+(K<<2)>>1]|0)){L=v;break b}if((b[o+24+(K<<2)+2>>1]|0)!=(b[o+36+(K<<2)+2>>1]|0)){L=v;break b}if((a[o+20+K|0]|0)!=(a[o+32+K|0]|0)){L=v;break b}}K=K+1|0;}while((K|0)<2);a[v]=0;L=v}}while(0);if((x|0)==28){a[J]=0;b[o+36>>1]=0;b[o+38>>1]=0;a[o+32|0]=-1;a[o+34|0]=0;b[o+40>>1]=0;b[o+42>>1]=0;a[o+33|0]=-1;a[o+35|0]=0;L=J}do{if(w){if((j>>p|0)!=(t>>p|0)){x=40;break}M=o+3|0;x=49}else{x=40}}while(0);c:do{if((x|0)==40){J=o+3|0;if(!(_f(e,f,g,h,i,j,l,m,n,s,t)|0)){M=J;x=49;break}a[J]=1;K=c[e+78760>>2]|0;z=(ga(t>>K,c[e+78764>>2]|0)|0)+(s>>K)|0;K=o+44|0;y=(c[e+78752>>2]|0)+(z*12|0)|0;b[K>>1]=b[y>>1]|0;b[K+2>>1]=b[y+2>>1]|0;b[K+4>>1]=b[y+4>>1]|0;b[K+6>>1]=b[y+6>>1]|0;b[K+8>>1]=b[y+8>>1]|0;b[K+10>>1]=b[y+10>>1]|0;if(D){N=0}else{x=50;break}do{y=a[o+10+N|0]|0;if(!(y<<24>>24==(a[o+46+N|0]|0))){x=50;break c}if(!(y<<24>>24==0)){if((b[o+12+(N<<2)>>1]|0)!=(b[o+48+(N<<2)>>1]|0)){x=50;break c}if((b[o+12+(N<<2)+2>>1]|0)!=(b[o+48+(N<<2)+2>>1]|0)){x=50;break c}if((a[o+8+N|0]|0)!=(a[o+44+N|0]|0)){x=50;break c}}N=N+1|0;}while((N|0)<2);a[J]=0;x=53}}while(0);if((x|0)==49){a[M]=0;b[o+48>>1]=0;b[o+50>>1]=0;a[o+44|0]=-1;a[o+46|0]=0;b[o+52>>1]=0;b[o+54>>1]=0;a[o+45|0]=-1;a[o+47|0]=0;if((a[M]|0)==0){x=53}else{x=50}}do{if((x|0)==50){if((a[E]|0)==0){x=53;break}if((a[L]|0)==0){x=53;break}if((a[I]|0)==0){x=53}else{x=55}}}while(0);do{if((x|0)==53){if(w){if((j>>p|0)==(r>>p|0)){x=55;break}}I=o+4|0;if(!(_f(e,f,g,h,i,j,l,m,n,s,r)|0)){O=I;break}a[I]=1;L=c[e+78760>>2]|0;E=(ga(r>>L,c[e+78764>>2]|0)|0)+(s>>L)|0;L=o+56|0;M=(c[e+78752>>2]|0)+(E*12|0)|0;b[L>>1]=b[M>>1]|0;b[L+2>>1]=b[M+2>>1]|0;b[L+4>>1]=b[M+4>>1]|0;b[L+6>>1]=b[M+6>>1]|0;b[L+8>>1]=b[M+8>>1]|0;b[L+10>>1]=b[M+10>>1]|0;d:do{if(H){M=0;do{L=a[o+22+M|0]|0;if(!(L<<24>>24==(a[o+58+M|0]|0))){break d}if(!(L<<24>>24==0)){if((b[o+24+(M<<2)>>1]|0)!=(b[o+60+(M<<2)>>1]|0)){break d}if((b[o+24+(M<<2)+2>>1]|0)!=(b[o+60+(M<<2)+2>>1]|0)){break d}if((a[o+20+M|0]|0)!=(a[o+56+M|0]|0)){break d}}M=M+1|0;}while((M|0)<2);a[I]=0;return}}while(0);if(D){P=0}else{return}while(1){J=a[o+10+P|0]|0;if(!(J<<24>>24==(a[o+58+P|0]|0))){x=74;break}if(!(J<<24>>24==0)){if((b[o+12+(P<<2)>>1]|0)!=(b[o+60+(P<<2)>>1]|0)){x=74;break}if((b[o+12+(P<<2)+2>>1]|0)!=(b[o+60+(P<<2)+2>>1]|0)){x=74;break}if((a[o+8+P|0]|0)!=(a[o+56+P|0]|0)){x=74;break}}J=P+1|0;if((J|0)<2){P=J}else{x=73;break}}if((x|0)==73){a[I]=0;return}else if((x|0)==74){return}}}while(0);if((x|0)==55){O=o+4|0}a[O]=0;b[o+60>>1]=0;b[o+62>>1]=0;a[o+56|0]=-1;a[o+58|0]=0;b[o+64>>1]=0;b[o+66>>1]=0;a[o+57|0]=-1;a[o+59|0]=0;return}function Ah(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];if((f|0)<-128){k=-128}else{k=(f|0)>127?127:f}if((g|0)<-128){l=-128}else{l=(g|0)>127?127:g}if((k|0)==0){g=d;f=a;C=e[g>>1]|e[g+2>>1]<<16;b[f>>1]=C;b[f+2>>1]=C>>16;m=0;i=h;return m|0}f=(ga(((((k|0)<0?-k|0:k)>>1)+16384|0)/(k|0)|0,l)|0)+32>>6;if((f|0)<-4096){n=-4096}else{n=(f|0)>4095?4095:f}f=ga(b[d>>1]|0,n)|0;l=(f|0)<0;if(l){o=-1}else{o=(f|0)>0|0}k=(l?-f|0:f)+127>>8;do{if((ga(k,o)|0)<-32768){p=-32768}else{if(l){q=-1}else{q=(f|0)>0|0}if((ga(k,q)|0)>32767){p=32767;break}if(l){r=-1}else{r=(f|0)>0|0}p=(ga(k,r)|0)&65535}}while(0);b[a>>1]=p;p=ga(b[d+2>>1]|0,n)|0;n=(p|0)<0;if(n){s=-1}else{s=(p|0)>0|0}d=(n?-p|0:p)+127>>8;do{if((ga(d,s)|0)<-32768){t=-32768}else{if(n){u=-1}else{u=(p|0)>0|0}if((ga(d,u)|0)>32767){t=32767;break}if(n){v=-1}else{v=(p|0)>0|0}t=(ga(d,v)|0)&65535}}while(0);b[a+2>>1]=t;m=1;i=h;return m|0}function Bh(f,g,h,j,k,l,m,n,o,p,q,r){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0;k=i;i=i+8|0;j=k|0;s=j;if(!((l|0)>-1)){bc(5808,10408,997,13504)}t=c[f+1468668>>2]|0;if(((c[f+1468672>>2]|0)-t>>2|0)<=(l|0)){bc(5808,10408,997,13504)}u=c[t+(l<<2)>>2]|0;l=c[u+78740>>2]|0;v=(ga(n>>l,c[u+78744>>2]|0)|0)+(m>>l)|0;l=(c[u+78732>>2]|0)+(v*3|0)|0;if(((d[l]|d[l+1|0]<<8)<<16>>16&768)==0){b[q>>1]=0;b[q+2>>1]=0;a[r]=0;i=k;return}if((a[u+78864|0]|0)==1){b[q>>1]=0;b[q+2>>1]=0;a[r]=0;i=k;return}l=c[u+78760>>2]|0;v=(ga(n>>l,c[u+78764>>2]|0)|0)+(m>>l)|0;l=c[u+78752>>2]|0;do{if((a[l+(v*12|0)+2|0]|0)==0){w=1;x=l+(v*12|0)+1|0;y=l+(v*12|0)+8|0}else{if((a[l+(v*12|0)+3|0]|0)==0){w=0;x=l+(v*12|0)|0;y=l+(v*12|0)+4|0;break}z=c[g+88>>2]|0;A=c[h+328>>2]|0;if((A|0)<1){B=1}else{D=0;E=1;while(1){F=(c[(c[t+(c[h+916+(D<<2)>>2]<<2)>>2]|0)+88>>2]|0)>(z|0)?0:E;G=D+1|0;if((G|0)>=(A|0)|(F|0)==0){B=F;break}else{D=G;E=F}}}E=c[h+332>>2]|0;D=(B|0)==0;if((E|0)<1|D){H=D}else{D=0;A=B;while(1){F=(c[(c[t+(c[h+980+(D<<2)>>2]<<2)>>2]|0)+88>>2]|0)>(z|0)?0:A;G=D+1|0;I=(F|0)==0;if((G|0)>=(E|0)|I){H=I;break}else{D=G;A=F}}}if(H){A=a[h+372|0]|0;w=A;x=l+(v*12|0)+A|0;y=l+(v*12|0)+4+(A<<2)|0;break}else{w=p;x=l+(v*12|0)+p|0;y=l+(v*12|0)+4+(p<<2)|0;break}}}while(0);v=y;y=e[v>>1]|e[v+2>>1]<<16;v=a[x]|0;x=c[u+78720>>2]|0;l=(ga(n>>x,c[u+78724>>2]|0)|0)+(m>>x)|0;x=c[(c[u+44>>2]|0)+(e[(c[u+78712>>2]|0)+(l*24|0)+2>>1]<<2)>>2]|0;l=h+1300+(p<<4)+o|0;if((a[l]|0)!=(a[x+1300+(w<<4)+v|0]|0)){a[r]=0;b[q>>1]=0;b[q+2>>1]=0;i=k;return}a[r]=1;r=(c[u+88>>2]|0)-(c[x+1044+(w<<6)+(v<<2)>>2]|0)|0;v=(c[g+88>>2]|0)-(c[h+1044+(p<<6)+(o<<2)>>2]|0)|0;if((a[l]|0)!=0|(r|0)==(v|0)){l=q;C=y;b[l>>1]=C;b[l+2>>1]=C>>16;i=k;return}c[j>>2]=y;if(Ah(q,s,r,v)|0){i=k;return}we(f|0,1008,0);a[g+78864|0]=3;i=k;return}function Ch(d,e,f,g,h,i,j,k,l,m,n){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if((a[f+324|0]|0)==0){b[m>>1]=0;b[m+2>>1]=0;a[n]=0;return}o=c[e+74220>>2]|0;do{if((c[f+20>>2]|0)==0){if((a[f+372|0]|0)!=0){p=6;break}q=f+980+(c[f+376>>2]<<2)|0}else{p=6}}while(0);if((p|0)==6){q=f+916+(c[f+376>>2]<<2)|0}r=c[q>>2]|0;do{if((r|0)>-1){if(((c[d+1468672>>2]|0)-(c[d+1468668>>2]|0)>>2|0)<=(r|0)){break}q=j+h|0;s=i+g|0;do{if((h>>o|0)==(q>>o|0)){if((s|0)>=(c[e+69752>>2]|0)){p=13;break}if((q|0)>=(c[e+69756>>2]|0)){p=13;break}Bh(d,e,f,0,0,r,s&-16,q&-16,k,l,m,n);if((a[n]|0)==0){break}return}else{p=13}}while(0);if((p|0)==13){b[m>>1]=0;b[m+2>>1]=0;a[n]=0}Bh(d,e,f,0,0,r,(i>>1)+g&-16,(j>>1)+h&-16,k,l,m,n);return}}while(0);b[m>>1]=0;b[m+2>>1]=0;a[n]=0;we(d|0,1012,0);return}function Dh(d,f,g,h,i){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0;j=c[h>>2]|0;if((j|0)<=1){return}k=f+804|0;if((j|0)>=(c[k>>2]|0)){return}l=ga(i-1|0,i)|0;i=d+1468668|0;d=0;m=1;n=j;o=j;a:while(1){p=d;q=n;r=o;while(1){if(!m){s=19;break a}t=c[25576+(p<<2)>>2]|0;u=c[25624+(p<<2)>>2]|0;if(!((t|0)<(j|0)&(u|0)<(j|0))){s=7;break a}v=g+(t*12|0)|0;w=a[g+(t*12|0)+2|0]|0;x=w<<24>>24==0;if(x){y=0}else{y=c[(c[i>>2]|0)+(c[f+916+(a[v|0]<<2)>>2]<<2)>>2]|0}z=a[g+(u*12|0)+3|0]|0;A=z<<24>>24==0;if(A){B=0}else{B=c[(c[i>>2]|0)+(c[f+980+(a[g+(u*12|0)+1|0]<<2)>>2]<<2)>>2]|0}b:do{if(x|A){D=q;E=r}else{do{if((c[y+88>>2]|0)==(c[B+88>>2]|0)){if((b[g+(t*12|0)+4>>1]|0)!=(b[g+(u*12|0)+8>>1]|0)){break}if((b[g+(t*12|0)+6>>1]|0)==(b[g+(u*12|0)+10>>1]|0)){D=q;E=r;break b}}}while(0);a[g+(r*12|0)|0]=a[v|0]|0;a[g+(r*12|0)+1|0]=a[g+(u*12|0)+1|0]|0;a[g+(r*12|0)+2|0]=w;a[g+(r*12|0)+3|0]=z;F=g+(t*12|0)+4|0;G=g+(r*12|0)+4|0;C=e[F>>1]|e[F+2>>1]<<16;b[G>>1]=C;b[G+2>>1]=C>>16;G=g+(u*12|0)+8|0;F=g+(r*12|0)+8|0;C=e[G>>1]|e[G+2>>1]<<16;b[F>>1]=C;b[F+2>>1]=C>>16;F=(c[h>>2]|0)+1|0;c[h>>2]=F;D=F;E=F}}while(0);u=p+1|0;if((u|0)==(l|0)){d=l;m=0;n=D;o=E;continue a}if((D|0)==(c[k>>2]|0)){d=u;m=0;n=D;o=E;continue a}else{p=u;q=D;r=E}}}if((s|0)==7){bc(2176,10408,1228,13296)}else if((s|0)==19){return}}function Eh(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;q=i;i=i+184|0;r=q|0;s=q+96|0;t=q+104|0;u=q+112|0;v=q+176|0;w=c[f+14636>>2]|0;x=f+14632|0;y=c[x>>2]|0;z=(c[y+78700>>2]|0)>2&(l|0)==8;A=z?l:n;B=z?l:m;D=z?h:k;k=z?g:j;zh(y,g,h,l,k,D,z&1,B,A,z?0:o,r);o=t|0;Ch(e,c[x>>2]|0,w,k,D,B,A,0,0,s|0,o);z=a[o]|0;l=t+1|0;a[l]=0;t=w+20|0;if((c[t>>2]|0)==0){Ch(e,c[x>>2]|0,w,k,D,B,A,0,1,s+4|0,l);A=a[l]|0;E=A|z;F=A}else{E=z;F=0}z=u|0;c[v>>2]=0;if((a[r|0]|0)==0){G=0}else{c[v>>2]=1;A=r+8|0;b[z>>1]=b[A>>1]|0;b[z+2>>1]=b[A+2>>1]|0;b[z+4>>1]=b[A+4>>1]|0;b[z+6>>1]=b[A+6>>1]|0;b[z+8>>1]=b[A+8>>1]|0;b[z+10>>1]=b[A+10>>1]|0;G=1}if((a[r+1|0]|0)==0){H=G}else{A=G+1|0;c[v>>2]=A;z=u+(G*12|0)|0;G=r+20|0;b[z>>1]=b[G>>1]|0;b[z+2>>1]=b[G+2>>1]|0;b[z+4>>1]=b[G+4>>1]|0;b[z+6>>1]=b[G+6>>1]|0;b[z+8>>1]=b[G+8>>1]|0;b[z+10>>1]=b[G+10>>1]|0;H=A}if((a[r+2|0]|0)==0){I=H}else{A=H+1|0;c[v>>2]=A;G=u+(H*12|0)|0;H=r+32|0;b[G>>1]=b[H>>1]|0;b[G+2>>1]=b[H+2>>1]|0;b[G+4>>1]=b[H+4>>1]|0;b[G+6>>1]=b[H+6>>1]|0;b[G+8>>1]=b[H+8>>1]|0;b[G+10>>1]=b[H+10>>1]|0;I=A}if((a[r+3|0]|0)==0){J=I}else{A=I+1|0;c[v>>2]=A;H=u+(I*12|0)|0;I=r+44|0;b[H>>1]=b[I>>1]|0;b[H+2>>1]=b[I+2>>1]|0;b[H+4>>1]=b[I+4>>1]|0;b[H+6>>1]=b[I+6>>1]|0;b[H+8>>1]=b[I+8>>1]|0;b[H+10>>1]=b[I+10>>1]|0;J=A}if((a[r+4|0]|0)==0){K=J}else{A=J+1|0;c[v>>2]=A;I=u+(J*12|0)|0;J=r+56|0;b[I>>1]=b[J>>1]|0;b[I+2>>1]=b[J+2>>1]|0;b[I+4>>1]=b[J+4>>1]|0;b[I+6>>1]=b[J+6>>1]|0;b[I+8>>1]=b[J+8>>1]|0;b[I+10>>1]=b[J+10>>1]|0;K=A}if(E<<24>>24==0){L=K}else{a[r+5|0]=E;E=r+72|0;C=c[s>>2]|0;b[E>>1]=C;b[E+2>>1]=C>>16;E=r+76|0;C=c[s+4>>2]|0;b[E>>1]=C;b[E+2>>1]=C>>16;a[r+70|0]=a[o]|0;a[r+71|0]=F;F=r+68|0;a[F]=0;a[r+69|0]=0;r=K+1|0;c[v>>2]=r;o=u+(K*12|0)|0;b[o>>1]=b[F>>1]|0;b[o+2>>1]=b[F+2>>1]|0;b[o+4>>1]=b[F+4>>1]|0;b[o+6>>1]=b[F+6>>1]|0;b[o+8>>1]=b[F+8>>1]|0;b[o+10>>1]=b[F+10>>1]|0;L=r}r=c[t>>2]|0;if((r|0)==0){Dh(e,w,u|0,v,L);M=c[t>>2]|0}else{M=r}r=(M|0)==1;M=c[w+328>>2]|0;if(r){N=M}else{t=c[w+332>>2]|0;N=(M|0)<(t|0)?M:t}t=c[v>>2]|0;M=c[w+804>>2]|0;if((t|0)<(M|0)){w=0;L=t;while(1){t=(w|0)<(N|0)?w&255:0;a[u+(L*12|0)|0]=t;e=u+(L*12|0)+1|0;if(r){a[e]=-1;a[u+(L*12|0)+2|0]=1;a[u+(L*12|0)+3|0]=0}else{a[e]=t;a[u+(L*12|0)+2|0]=1;a[u+(L*12|0)+3|0]=1}t=u+(L*12|0)+4|0;e=t|0;C=0;b[e>>1]=C;b[e+2>>1]=C>>16;e=t+4|0;C=0;b[e>>1]=C;b[e+2>>1]=C>>16;O=L+1|0;if((O|0)>=(M|0)){break}w=w+1|0;L=O}c[v>>2]=O}O=p|0;v=u+((d[f+27|0]|0)*12|0)|0;b[O>>1]=b[v>>1]|0;b[O+2>>1]=b[v+2>>1]|0;b[O+4>>1]=b[v+4>>1]|0;b[O+6>>1]=b[v+6>>1]|0;b[O+8>>1]=b[v+8>>1]|0;b[O+10>>1]=b[v+10>>1]|0;if((a[p+2|0]|0)==0){P=60;Q=0;R=92;S=0;i=q;return}v=p+3|0;if((a[v]|0)==0){P=60;Q=0;R=92;S=0;i=q;return}if((n+m|0)!=12){P=60;Q=0;R=92;S=0;i=q;return}a[p+1|0]=-1;a[v]=0;P=60;Q=0;R=92;S=0;i=q;return}function Fh(f,g,h,j,k,l,m,n,o,p,q,r,s,t){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;t=t|0;var u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0;u=i;i=i+80|0;v=u|0;w=u+8|0;x=u+16|0;y=u+24|0;z=u+32|0;A=u+48|0;B=u+64|0;D=u+72|0;E=f+78708|0;F=c[E>>2]|0;G=l-1|0;c[v>>2]=G;H=o+m|0;c[w>>2]=H;c[v+4>>2]=G;I=H-1|0;c[w+4>>2]=I;a[s]=0;b[t>>1]=0;b[t+2>>1]=0;J=_f(f,h,j,k,l,m,n,o,r,G,H)|0;H=J&1;a[x|0]=H;K=_f(f,h,j,k,l,m,n,o,r,G,I)|0;a[x+1|0]=K&1;I=g+916+(p<<6)+(q<<2)|0;L=F+1468668|0;F=c[(c[(c[L>>2]|0)+(c[I>>2]<<2)>>2]|0)+88>>2]|0;M=f+78740|0;N=f+78744|0;O=f+78732|0;P=1-p|0;Q=f+78760|0;R=f+78764|0;S=f+78752|0;T=t;U=0;V=-1;W=H;while(1){a:do{if(W<<24>>24==0){X=V}else{if((a[s]|0)!=0){X=V;break}H=c[v+(U<<2)>>2]|0;Y=c[w+(U<<2)>>2]|0;Z=c[M>>2]|0;_=(ga(Y>>Z,c[N>>2]|0)|0)+(H>>Z)|0;Z=(c[O>>2]|0)+(_*3|0)|0;if(((d[Z]|d[Z+1|0]<<8)<<16>>16&768)==0){X=V;break}Z=c[Q>>2]|0;_=(ga(Y>>Z,c[R>>2]|0)|0)+(H>>Z)|0;Z=c[S>>2]|0;do{if((a[Z+(_*12|0)+2+p|0]|0)!=0){H=Z+(_*12|0)+p|0;if((c[(c[(c[L>>2]|0)+(c[g+916+(p<<6)+(a[H]<<2)>>2]<<2)>>2]|0)+88>>2]|0)!=(F|0)){break}a[s]=1;Y=Z+(_*12|0)+4+(p<<2)|0;C=e[Y>>1]|e[Y+2>>1]<<16;b[T>>1]=C;b[T+2>>1]=C>>16;X=a[H]|0;break a}}while(0);if((a[Z+(_*12|0)+2+P|0]|0)==0){X=V;break}H=Z+(_*12|0)+P|0;if((c[(c[(c[L>>2]|0)+(c[g+916+(P<<6)+(a[H]<<2)>>2]<<2)>>2]|0)+88>>2]|0)!=(F|0)){X=V;break}a[s]=1;Y=Z+(_*12|0)+4+(P<<2)|0;C=e[Y>>1]|e[Y+2>>1]<<16;b[T>>1]=C;b[T+2>>1]=C>>16;X=a[H]|0}}while(0);H=U+1|0;if((H|0)>=2){break}U=H;V=X;W=a[x+H|0]|0}W=y;V=D;U=J|K;K=g+1300+(p<<4)+q|0;q=f+88|0;J=f+78864|0;H=0;Y=X;b:while(1){if((a[s]|0)!=0){$=33;break}c:do{if((a[x+H|0]|0)==0){aa=Y;ba=-1}else{X=c[v+(H<<2)>>2]|0;ca=c[w+(H<<2)>>2]|0;da=c[M>>2]|0;ea=(ga(ca>>da,c[N>>2]|0)|0)+(X>>da)|0;da=(c[O>>2]|0)+(ea*3|0)|0;if(((d[da]|d[da+1|0]<<8)<<16>>16&768)==0){aa=Y;ba=-1;break}da=c[Q>>2]|0;ea=(ga(ca>>da,c[R>>2]|0)|0)+(X>>da)|0;da=c[S>>2]|0;do{if((a[da+(ea*12|0)+2+p|0]|0)==1){X=da+(ea*12|0)+p|0;if((a[K]|0)!=(a[(a[X]|0)+(g+1300+(p<<4))|0]|0)){break}a[s]=1;ca=da+(ea*12|0)+4+(p<<2)|0;C=e[ca>>1]|e[ca+2>>1]<<16;b[T>>1]=C;b[T+2>>1]=C>>16;aa=a[X]|0;ba=p;break c}}while(0);if((a[da+(ea*12|0)+2+P|0]|0)!=1){aa=Y;ba=-1;break}_=da+(ea*12|0)+P|0;if((a[K]|0)!=(a[(a[_]|0)+(g+1300+(P<<4))|0]|0)){aa=Y;ba=-1;break}a[s]=1;Z=da+(ea*12|0)+4+(P<<2)|0;C=e[Z>>1]|e[Z+2>>1]<<16;b[T>>1]=C;b[T+2>>1]=C>>16;aa=a[_]|0;ba=P}}while(0);do{if((a[s]|0)==1){if(!((aa|0)>-1)){$=25;break b}if(!((ba|0)>-1)){$=27;break b}if((a[g+1300+(ba<<4)+aa|0]|0)!=0){break}if((a[K]|0)!=0){break}_=c[q>>2]|0;Z=_-(c[(c[(c[L>>2]|0)+(c[g+916+(ba<<6)+(aa<<2)>>2]<<2)>>2]|0)+88>>2]|0)|0;c[y>>2]=e[T>>1]|e[T+2>>1]<<16;if(Ah(t,W,Z,_-F|0)|0){break}we(c[E>>2]|0,1008,0);a[J]=3}}while(0);_=H+1|0;if((_|0)<2){H=_;Y=aa}else{$=33;break}}if(($|0)==25){bc(3640,10408,1507,13344)}else if(($|0)==27){bc(2328,10408,1508,13344)}else if(($|0)==33){aa=n+l|0;c[z>>2]=aa;Y=m-1|0;c[A>>2]=Y;c[z+4>>2]=aa-1;c[A+4>>2]=Y;c[z+8>>2]=G;c[A+8>>2]=Y;G=s+1|0;a[G]=0;H=t+4|0;b[H>>1]=0;b[t+6>>1]=0;t=H;W=0;y=-1;ba=aa;aa=Y;while(1){Y=_f(f,h,j,k,l,m,n,o,r,ba,aa)|0;a[B+W|0]=Y&1;d:do{if(Y){if((a[G]|0)!=0){fa=y;break}O=c[Q>>2]|0;N=(ga(aa>>O,c[R>>2]|0)|0)+(ba>>O)|0;O=c[S>>2]|0;do{if((a[O+(N*12|0)+2+p|0]|0)!=0){M=O+(N*12|0)+p|0;if((c[(c[(c[L>>2]|0)+(c[g+916+(p<<6)+(a[M]<<2)>>2]<<2)>>2]|0)+88>>2]|0)!=(F|0)){break}a[G]=1;w=O+(N*12|0)+4+(p<<2)|0;C=e[w>>1]|e[w+2>>1]<<16;b[t>>1]=C;b[t+2>>1]=C>>16;fa=a[M]|0;break d}}while(0);if((a[O+(N*12|0)+2+P|0]|0)==0){fa=y;break}ea=O+(N*12|0)+P|0;if((c[(c[(c[L>>2]|0)+(c[g+916+(P<<6)+(a[ea]<<2)>>2]<<2)>>2]|0)+88>>2]|0)!=(F|0)){fa=y;break}a[G]=1;da=O+(N*12|0)+4+(P<<2)|0;C=e[da>>1]|e[da+2>>1]<<16;b[t>>1]=C;b[t+2>>1]=C>>16;fa=a[ea]|0}else{fa=y}}while(0);Y=W+1|0;if((Y|0)>=3){break}W=Y;y=fa;ba=c[z+(Y<<2)>>2]|0;aa=c[A+(Y<<2)>>2]|0}if(U){i=u;return}if((a[G]|0)!=0){a[s]=1;C=e[t>>1]|e[t+2>>1]<<16;b[T>>1]=C;b[T+2>>1]=C>>16}a[G]=0;T=0;s=fa;fa=1;e:while(1){if(!fa){$=67;break}f:do{if((a[B+T|0]|0)==0){ha=s;ia=-1}else{U=c[Q>>2]|0;aa=(ga(c[A+(T<<2)>>2]>>U,c[R>>2]|0)|0)+(c[z+(T<<2)>>2]>>U)|0;U=c[S>>2]|0;do{if((a[U+(aa*12|0)+2+p|0]|0)==1){ba=U+(aa*12|0)+p|0;if((a[K]|0)!=(a[(a[ba]|0)+(g+1300+(p<<4))|0]|0)){break}a[G]=1;y=U+(aa*12|0)+4+(p<<2)|0;C=e[y>>1]|e[y+2>>1]<<16;b[t>>1]=C;b[t+2>>1]=C>>16;ha=a[ba]|0;ia=p;break f}}while(0);if((a[U+(aa*12|0)+2+P|0]|0)!=1){ha=s;ia=-1;break}N=U+(aa*12|0)+P|0;if((a[K]|0)!=(a[(a[N]|0)+(g+1300+(P<<4))|0]|0)){ha=s;ia=-1;break}a[G]=1;O=U+(aa*12|0)+4+(P<<2)|0;C=e[O>>1]|e[O+2>>1]<<16;b[t>>1]=C;b[t+2>>1]=C>>16;ha=a[N]|0;ia=P}}while(0);do{if((a[G]|0)==1){if(!((ia|0)>-1)){$=58;break e}if(!((ha|0)>-1)){$=60;break e}N=c[(c[E>>2]|0)+1468668>>2]|0;O=c[(c[N+(c[g+916+(ia<<6)+(ha<<2)>>2]<<2)>>2]|0)+88>>2]|0;if((O|0)==(c[(c[N+(c[I>>2]<<2)>>2]|0)+88>>2]|0)){break}if(!((a[g+1300+(ia<<4)+ha|0]|a[K])<<24>>24==0)){break}N=c[q>>2]|0;c[D>>2]=e[t>>1]|e[t+2>>1]<<16;if(Ah(H,V,N-O|0,N-F|0)|0){break}we(c[E>>2]|0,1008,0);a[J]=3}}while(0);N=T+1|0;if((N|0)>=3){$=67;break}T=N;s=ha;fa=(a[G]|0)==0}if(($|0)==58){bc(2328,10408,1641,13344)}else if(($|0)==60){bc(1488,10408,1642,13344)}else if(($|0)==67){i=u;return}}}function Gh(d,e,f,g,h,j,k,l,m,n,o,p,q){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;r=i;i=i+32|0;s=r|0;t=r+8|0;u=r+16|0;v=r+24|0;w=v;x=i;i=i+12|0;i=i+7&-8;y=c[f+14636>>2]|0;z=f+14632|0;A=s|0;Fh(c[z>>2]|0,y,g,h,j,k,l,m,n,o,p,q,A,t|0);q=(a[A]|0)==0;do{if(q){B=6}else{if((a[s+1|0]|0)==0){B=6;break}if((b[t>>1]|0)==(b[t+4>>1]|0)){if((b[t+2>>1]|0)==(b[t+6>>1]|0)){B=6;break}}a[u]=0}}while(0);if((B|0)==6){Ch(e,c[z>>2]|0,y,k,l,m,n,p,o,w,u)}if(q){D=0}else{c[x>>2]=c[t>>2];D=1}a:do{if((a[s+1|0]|0)==0){E=D}else{do{if(!q){if((b[t>>1]|0)!=(b[t+4>>1]|0)){break}if((b[t+2>>1]|0)==(b[t+6>>1]|0)){E=D;break a}}}while(0);c[x+(D<<2)>>2]=c[t+4>>2];E=D+1|0}}while(0);if((a[u]|0)==0){F=E}else{c[x+(E<<2)>>2]=c[v>>2];F=E+1|0}if((F|0)<2){G=F}else{H=f+28+o|0;I=a[H]|0;J=I&255;K=x+(J<<2)|0;L=K;M=d;N=c[L>>2]|0;C=N;b[M>>1]=C;b[M+2>>1]=C>>16;i=r;return}do{b[x+(G<<2)>>1]=0;b[x+(G<<2)+2>>1]=0;G=G+1|0;}while((G|0)<2);H=f+28+o|0;I=a[H]|0;J=I&255;K=x+(J<<2)|0;L=K;M=d;N=c[L>>2]|0;C=N;b[M>>1]=C;b[M+2>>1]=C>>16;i=r;return}function Hh(f,g,h,j,k,l,m,n,o,p,q){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0;r=i;i=i+8|0;s=r|0;t=s;u=k+h|0;k=l+j|0;l=c[g+14632>>2]|0;v=c[l+78740>>2]|0;w=(ga(j>>v,c[l+78744>>2]|0)|0)+(h>>v)|0;v=(c[l+78732>>2]|0)+(w*3|0)|0;w=((d[v]|d[v+1|0]<<8)<<16>>16&65535)>>>8&255&3;if((w|0)==1){if((a[g+26|0]|0)!=0){x=4}}else if((w|0)==2){x=4}if((x|0)==4){Eh(f,g,h,j,u,k,m,n,o,p,q);i=r;return}x=g+30|0;w=a[x]|0;if((w<<24>>24|0)==2|(w<<24>>24|0)==0){w=a[g+16|0]|0;a[q|0]=w;a[q+2|0]=1;v=e[g+20>>1]|0;l=e[g+18>>1]|0;Gh(t,f,g,h,j,m,u,k,n,o,0,w<<24>>24,p);w=c[s>>2]|0;b[q+4>>1]=w+l;b[q+6>>1]=(w>>>16)+v}else{a[q|0]=-1;a[q+2|0]=0}if(((a[x]|0)-1&255)>>>0<2>>>0){x=a[g+17|0]|0;a[q+1|0]=x;a[q+3|0]=1;v=e[g+24>>1]|0;w=e[g+22>>1]|0;Gh(t,f,g,h,j,m,u,k,n,o,1,x<<24>>24,p);p=c[s>>2]|0;b[q+8>>1]=p+w;b[q+10>>1]=(p>>>16)+v;i=r;return}else{a[q+1|0]=-1;a[q+3|0]=0;i=r;return}}function Ih(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0;l=i;i=i+24|0;m=l|0;n=c[a+14636>>2]|0;o=a+14628|0;Hh(c[o>>2]|0,a,b,d,e,f,g,h,j,k,m);k=a+14632|0;yh(c[o>>2]|0,c[k>>2]|0,n,b,d,e,f,g,h,j,m);Yf(c[k>>2]|0,e+b|0,f+d|0,h,j,m|0);i=l;return}function Jh(a){a=a|0;var b=0;b;return}function Kh(a){a=a|0;var b=0;b;return}function Lh(a){a=a|0;var b=0;b;return}function Mh(a){a=a|0;var b=0;b;return}function Nh(a){a=a|0;var b=0;b;return}function Oh(a){a=a|0;var b=0;b;return}function Ph(a,b){a=a|0;b=b|0;Lb(a|0)|0;return}function Qh(a,b){a=a|0;b=b|0;Xa(a|0,b|0)|0;return}function Rh(a){a=a|0;var b=0,d=0;c[a>>2]=0;b;d;return}function Sh(a){a=a|0;var b=0,c=0;b;c;return}function Th(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a|0;if((c[d>>2]|0)>=(b|0)){return}e=a+4|0;f;if((c[d>>2]|0)<(b|0)){f=a+28|0;do{Xa(f|0,e|0)|0;}while((c[d>>2]|0)<(b|0))}g;return}function Uh(a,b){a=a|0;b=b|0;var d=0,e=0;d;d=a|0;if((c[d>>2]|0)>=(b|0)){e;return}c[d>>2]=b;Lb(a+28|0)|0;e;return}function Vh(a){a=a|0;return c[a>>2]|0}function Wh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=(d|0)>32;f=e?32:d;d=e?1022:0;e=b+156|0;c[e>>2]=0;g;h;i;c[b+160>>2]=0;i=b|0;a[i]=0;j;if((f|0)>0){k=0}else{l=d;return l|0}while(1){if((vc(b+28+(k<<2)|0,0,104,i|0)|0)!=0){l=10;m=4;break}c[e>>2]=(c[e>>2]|0)+1;j=k+1|0;if((j|0)<(f|0)){k=j}else{l=d;m=4;break}}if((m|0)==4){return l|0}return 0}function Xh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=b+420|0;e;if((a[b]|0)!=0){f;return 0}e=b+24|0;g=b+444|0;h=b+8|0;i=b+20|0;j=b+160|0;do{k=c[e>>2]|0;if((k|0)==0){Xa(g|0,d|0)|0}else{l=c[h>>2]|0;m=c[i>>2]|0;n=c[(c[l+(m>>>10<<2)>>2]|0)+((m&1023)<<2)>>2]|0;c[e>>2]=k-1;k=m+1|0;c[i>>2]=k;if(k>>>0>2047>>>0){is(c[l>>2]|0);c[h>>2]=(c[h>>2]|0)+4;c[i>>2]=(c[i>>2]|0)-1024}c[j>>2]=(c[j>>2]|0)+1;o;Ac[c[(c[n>>2]|0)+8>>2]&511](n);p;c[j>>2]=(c[j>>2]|0)-1}}while((a[b]|0)==0);f;return 0}function Yh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d;a[b|0]=1;e;Lb(b+444|0)|0;e=b+156|0;if((c[e>>2]|0)>0){f=0}else{g;h;return}do{rc(c[b+28+(f<<2)>>2]|0,0)|0;f=f+1|0;}while((f|0)<(c[e>>2]|0));g;h;return}function Zh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e;if((a[b|0]|0)!=0){f;return}e=b+12|0;g=c[e>>2]|0;h=b+8|0;i=c[h>>2]|0;if((g|0)==(i|0)){j=0}else{j=(g-i<<8)-1|0}k=b+20|0;l=c[k>>2]|0;m=b+24|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){_h(b+4|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[e>>2]|0}else{o=n;p=l;q=i;r=g}g=o+p|0;do{if((r|0)!=(q|0)){p=(c[q+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0;if((p|0)==0){break}c[p>>2]=d}}while(0);c[m>>2]=o+1;eb(b+444|0)|0;f;return}function _h(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=a+16|0;g=c[f>>2]|0;if(g>>>0>1023>>>0){c[f>>2]=g-1024;g=a+4|0;f=c[g>>2]|0;h=c[f>>2]|0;j=f+4|0;c[g>>2]=j;k=a+8|0;l=c[k>>2]|0;m=a+12|0;do{if((l|0)==(c[m>>2]|0)){n=a|0;o=c[n>>2]|0;if(j>>>0>o>>>0){p=j;q=((p-o>>2)+1|0)/-2|0;r=l-p|0;zs(f+(q+1<<2)|0,j|0,r|0)|0;p=f+((r>>2)+1+q<<2)|0;c[k>>2]=p;c[g>>2]=(c[g>>2]|0)+(q<<2);s=p;t=13;break}p=l-o>>1;q=(p|0)==0?1:p;p=gs(q<<2)|0;r=p+(q>>>2<<2)|0;u=p+(q<<2)|0;if((j|0)==(l|0)){v=r;w=o}else{o=j;q=r;do{if((q|0)==0){x=0}else{c[q>>2]=c[o>>2];x=q}q=x+4|0;o=o+4|0;}while((o|0)!=(l|0));v=q;w=c[n>>2]|0}c[n>>2]=p;c[g>>2]=r;c[k>>2]=v;c[m>>2]=u;if((w|0)==0){y=v;t=12;break}is(w);y=c[k>>2]|0;t=12}else{y=l;t=12}}while(0);if((t|0)==12){if((y|0)==0){z=0}else{s=y;t=13}}if((t|0)==13){c[s>>2]=h;z=c[k>>2]|0}c[k>>2]=z+4;i=b;return}z=a|0;k=a+8|0;h=c[k>>2]|0;s=a+4|0;y=h-(c[s>>2]|0)>>2;l=a+12|0;w=c[l>>2]|0;v=a|0;m=w-(c[v>>2]|0)|0;if(!(y>>>0<m>>2>>>0)){g=m>>1;m=(g|0)==0?1:g;g=e+12|0;c[e+16>>2]=a+12;a=gs(m<<2)|0;x=a;j=e|0;c[j>>2]=x;f=x+(y<<2)|0;o=e+8|0;c[o>>2]=f;A=e+4|0;c[A>>2]=f;c[g>>2]=x+(m<<2);B=gs(4096)|0;do{if((y|0)==(m|0)){C=f-a|0;if(f>>>0>x>>>0){D=x+(y+(((C>>2)+1|0)/-2|0)<<2)|0;c[o>>2]=D;c[A>>2]=D;E=D;break}D=C>>1;C=(D|0)==0?1:D;D=gs(C<<2)|0;F=D+(C>>>2<<2)|0;c[j>>2]=D;c[A>>2]=F;c[o>>2]=F;c[g>>2]=D+(C<<2);if((a|0)==0){E=F;break}is(a);E=F}else{E=f}}while(0);if((E|0)==0){G=0}else{c[E>>2]=B;G=c[o>>2]|0}c[o>>2]=G+4;G=c[k>>2]|0;while(1){if((G|0)==(c[s>>2]|0)){break}B=G-4|0;ai(e,B);G=B}e=c[v>>2]|0;c[v>>2]=c[j>>2];c[j>>2]=e;c[s>>2]=c[A>>2];c[A>>2]=G;A=c[k>>2]|0;c[k>>2]=c[o>>2];c[o>>2]=A;j=c[l>>2]|0;c[l>>2]=c[g>>2];c[g>>2]=j;if((A|0)!=(G|0)){c[o>>2]=A+(~((A-4+(-G|0)|0)>>>2)<<2)}if((e|0)==0){i=b;return}is(e);i=b;return}e=gs(4096)|0;if((w|0)!=(h|0)){if((h|0)==0){H=0}else{c[h>>2]=e;H=c[k>>2]|0}c[k>>2]=H+4;i=b;return}c[d>>2]=e;$h(z,d);d=c[s>>2]|0;z=c[d>>2]|0;e=d+4|0;c[s>>2]=e;H=c[k>>2]|0;do{if((H|0)==(c[l>>2]|0)){h=c[v>>2]|0;if(e>>>0>h>>>0){w=e;G=((w-h>>2)+1|0)/-2|0;A=H-w|0;zs(d+(G+1<<2)|0,e|0,A|0)|0;w=d+((A>>2)+1+G<<2)|0;c[k>>2]=w;c[s>>2]=(c[s>>2]|0)+(G<<2);I=w;t=31;break}w=H-h>>1;G=(w|0)==0?1:w;w=gs(G<<2)|0;A=w+(G>>>2<<2)|0;o=w+(G<<2)|0;if((e|0)==(H|0)){J=A;K=h}else{h=e;G=A;do{if((G|0)==0){L=0}else{c[G>>2]=c[h>>2];L=G}G=L+4|0;h=h+4|0;}while((h|0)!=(H|0));J=G;K=c[v>>2]|0}c[v>>2]=w;c[s>>2]=A;c[k>>2]=J;c[l>>2]=o;if((K|0)==0){M=J;t=30;break}is(K);M=c[k>>2]|0;t=30}else{M=H;t=30}}while(0);if((t|0)==30){if((M|0)==0){N=0}else{I=M;t=31}}if((t|0)==31){c[I>>2]=z;N=c[k>>2]|0}c[k>>2]=N+4;i=b;return}function $h(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;zs(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=gs(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;if((e|0)==(h|0)){o=l;p=e}else{k=e;q=l;do{if((q|0)==0){r=0}else{c[q>>2]=c[k>>2];r=q}q=r+4|0;k=k+4|0;}while((k|0)!=(h|0));o=q;p=c[f>>2]|0}c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((p|0)==0){n=l;break}is(p);n=c[d>>2]|0}else{n=e}}while(0);c[n-4>>2]=c[b>>2];c[d>>2]=(c[d>>2]|0)-4;return}function ai(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;zs(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=gs(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;if((e|0)==(h|0)){o=l;p=e}else{k=e;q=l;do{if((q|0)==0){r=0}else{c[q>>2]=c[k>>2];r=q}q=r+4|0;k=k+4|0;}while((k|0)!=(h|0));o=q;p=c[f>>2]|0}c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((p|0)==0){n=l;break}is(p);n=c[d>>2]|0}else{n=e}}while(0);c[n-4>>2]=c[b>>2];c[d>>2]=(c[d>>2]|0)-4;return}function bi(a){a=a|0;c[a>>2]=46;c[a+4>>2]=14;c[a+8>>2]=6;c[a+12>>2]=2;c[a+16>>2]=4;c[a+20>>2]=10;c[a+24>>2]=10;c[a+28>>2]=10;c[a+32>>2]=16;c[a+36>>2]=72;c[a+40>>2]=30;c[a+44>>2]=24;c[a+48>>2]=58;c[a+52>>2]=42;c[a+56>>2]=28;c[a+60>>2]=40;c[a+64>>2]=12;c[a+68>>2]=2;c[a+72>>2]=52;c[a+76>>2]=48;c[a+80>>2]=34;c[a+84>>2]=54;c[a+88>>2]=14;c[a+92>>2]=32;c[a+96>>2]=2;c[a+100>>2]=6;c[a+104>>2]=12;c[a+108>>2]=10;c[a+112>>2]=4;c[a+116>>2]=6;c[a+120>>2]=8;return}function ci(c,d,e,f,g,h){c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((g&1|0)!=0){bc(1808,10312,40,13576)}if((h|0)>0&(g|0)>0){i=0}else{return}do{j=e+((ga(i,f)|0)<<1)|0;k=c+(ga(i,d)|0)|0;l=0;while(1){m=(b[j>>1]|0)+32>>6;if((m|0)<0){n=0}else{n=(m|0)>255?-1:m&255}a[k]=n;m=(b[j+2>>1]|0)+32>>6;if((m|0)<0){o=0}else{o=(m|0)>255?-1:m&255}a[k+1|0]=o;m=l+2|0;if((m|0)<(g|0)){j=j+4|0;k=k+2|0;l=m}else{break}}i=i+1|0;}while((i|0)<(h|0));return}function di(c,d,e,f,g,h,i,j,k){c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0;if((k|0)<=0){bc(8232,10312,60,13608)}l=1<<k-1;if((h|0)>0&(g|0)>0){m=0}else{return}do{n=e+((ga(m,f)|0)<<1)|0;o=c+(ga(m,d)|0)|0;p=0;while(1){q=((ga(b[n>>1]|0,i)|0)+l>>k)+j|0;if((q|0)<0){r=0}else{r=(q|0)>255?-1:q&255}a[o]=r;q=p+1|0;if((q|0)<(g|0)){n=n+2|0;o=o+1|0;p=q}else{break}}m=m+1|0;}while((m|0)<(h|0));return}function ei(c,d,e,f,g,h,i,j,k,l,m,n){c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((n|0)<=0){bc(8232,10312,80,13544)}o=k+1+m<<n;if((i|0)<=0){return}m=n+1|0;if((h|0)>0){p=0}else{return}do{n=ga(p,g)|0;k=e+(n<<1)|0;q=f+(n<<1)|0;n=c+(ga(p,d)|0)|0;r=0;while(1){s=ga(b[k>>1]|0,j)|0;t=s+o+(ga(b[q>>1]|0,l)|0)>>m;if((t|0)<0){u=0}else{u=(t|0)>255?-1:t&255}a[n]=u;t=r+1|0;if((t|0)<(h|0)){k=k+2|0;q=q+2|0;n=n+1|0;r=t}else{break}}p=p+1|0;}while((p|0)<(i|0));return}function fi(c,d,e,f,g,h,i){c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if((h&1|0)!=0){bc(1808,10312,105,13464)}if((i|0)<=0){return}j=(h|0)>0;k=0;do{l=ga(k,g)|0;if(j){m=e+(l<<1)|0;n=f+(l<<1)|0;l=c+(ga(k,d)|0)|0;o=0;while(1){p=(b[m>>1]|0)+64+(b[n>>1]|0)>>7;if((p|0)<0){q=0}else{q=(p|0)>255?-1:p&255}a[l]=q;p=(b[m+2>>1]|0)+64+(b[n+2>>1]|0)>>7;if((p|0)<0){r=0}else{r=(p|0)>255?-1:p&255}a[l+1|0]=r;p=o+2|0;if((p|0)<(h|0)){m=m+4|0;n=n+4|0;l=l+2|0;o=p}else{break}}}k=k+1|0;}while((k|0)<(i|0));return}function gi(a,c,e,f,g,h,i,j,k){a=a|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0;if((h|0)<=0){return}k=(g|0)>0;j=0;do{if(k){i=a+((ga(j,c)|0)<<1)|0;l=e+(ga(j,f)|0)|0;m=0;while(1){b[i>>1]=(d[l]|0)<<6;n=m+1|0;if((n|0)<(g|0)){i=i+2|0;l=l+1|0;m=n}else{break}}}j=j+1|0;}while((j|0)<(h|0));return}function hi(a,c,e,f,g,h,j,k,l){a=a|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;l=i;m=h+3|0;n=ga(g<<1,m)|0;o=i;i=i+n|0;i=i+7&-8;n=o;o=h+2|0;if((o|0)>-1){p=(g|0)>0;q=-1;while(1){a:do{if(p){r=q+1|0;s=e+((ga(q,f)|0)-1)|0;t=0;while(1){switch(j|0){case 4:{u=(((d[s]|0)*-4&65535)-(d[s+3|0]<<2)&65535)+(((d[s+2|0]|0)+(d[s+1|0]|0)&65535)*36&65535)&65535;break};case 5:{u=((((d[s+1|0]|0)*28&65535)+((d[s]|0)*-4&65535)&65535)+((d[s+2|0]|0)*46&65535)&65535)+((d[s+3|0]|0)*-6&65535)&65535;break};case 6:{u=(((d[s+1|0]<<4)+((d[s]|0)*-2&65535)&65535)+((d[s+2|0]|0)*54&65535)&65535)-(d[s+3|0]<<2)&65535;break};case 0:{u=d[s+1|0]|0;break};case 1:{u=((((d[s+1|0]|0)*58&65535)+((d[s]|0)*-2&65535)&65535)+((d[s+2|0]|0)*10&65535)&65535)-(d[s+3|0]<<1)&65535;break};case 3:{u=((((d[s+1|0]|0)*46&65535)+((d[s]|0)*-6&65535)&65535)+((d[s+2|0]|0)*28&65535)&65535)-(d[s+3|0]<<2)&65535;break};case 2:{u=((((d[s+1|0]|0)*54&65535)+((d[s]|0)*-4&65535)&65535)+(d[s+2|0]<<4)&65535)-(d[s+3|0]<<1)&65535;break};default:{u=((((d[s+1|0]|0)*10&65535)+((d[s]|0)*-2&65535)&65535)+((d[s+2|0]|0)*58&65535)&65535)-(d[s+3|0]<<1)&65535}}b[n+(r+(ga(t,m)|0)<<1)>>1]=u;v=t+1|0;if((v|0)<(g|0)){s=s+1|0;t=v}else{w=r;break a}}}else{w=q+1|0}}while(0);if((w|0)<(o|0)){q=w}else{break}}}w=(j|0)==0?0:6;if((g|0)<=0){i=l;return}j=(h|0)>0;q=0;do{b:do{if(j){o=n+((ga(q,m)|0)<<1)|0;u=0;while(1){switch(k|0){case 3:{x=((b[o+2>>1]|0)*46|0)+((b[o>>1]|0)*-6|0)+((b[o+4>>1]|0)*28|0)-(b[o+6>>1]<<2)>>w&65535;break};case 4:{x=((b[o>>1]|0)*-4|0)-(b[o+6>>1]<<2)+(((b[o+4>>1]|0)+(b[o+2>>1]|0)|0)*36|0)>>w&65535;break};case 2:{x=((b[o+2>>1]|0)*54|0)+((b[o>>1]|0)*-4|0)+(b[o+4>>1]<<4)-(b[o+6>>1]<<1)>>w&65535;break};case 1:{x=((b[o+2>>1]|0)*58|0)+((b[o>>1]|0)*-2|0)+((b[o+4>>1]|0)*10|0)-(b[o+6>>1]<<1)>>w&65535;break};case 0:{x=b[o+2>>1]|0;break};case 5:{x=((b[o+2>>1]|0)*28|0)+((b[o>>1]|0)*-4|0)+((b[o+4>>1]|0)*46|0)+((b[o+6>>1]|0)*-6|0)>>w&65535;break};case 6:{x=(b[o+2>>1]<<4)+((b[o>>1]|0)*-2|0)+((b[o+4>>1]|0)*54|0)-(b[o+6>>1]<<2)>>w&65535;break};default:{x=((b[o+2>>1]|0)*10|0)+((b[o>>1]|0)*-2|0)+((b[o+4>>1]|0)*58|0)-(b[o+6>>1]<<1)>>w&65535}}b[a+((ga(u,c)|0)+q<<1)>>1]=x;f=u+1|0;if((f|0)<(h|0)){o=o+2|0;u=f}else{break b}}}}while(0);q=q+1|0;}while((q|0)<(g|0));i=l;return}function ii(a,c,e,f,g,h,i){a=a|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;if((h|0)<=0){return}i=(g|0)>0;j=0;do{if(i){k=0;l=a+((ga(j,c)|0)<<1)|0;m=e+(ga(j,f)|0)|0;while(1){n=(d[m+1|0]|0)<<6;o=(d[m+2|0]|0)<<6;p=(d[m+3|0]|0)<<6;b[l>>1]=(d[m]|0)<<6;b[l+2>>1]=n;b[l+4>>1]=o;b[l+6>>1]=p;p=k+4|0;if((p|0)<(g|0)){k=p;l=l+8|0;m=m+4|0}else{break}}}j=j+1|0;}while((j|0)<(h|0));return}function ji(a,e,f,g,h,i,j,k,l){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;m=c[25512+(k<<2)>>2]|0;n=c[25512+(l<<2)>>2]|0;o=c[25544+(l<<2)>>2]|0;p=n+i+o|0;do{if((k|0)==0){q=-n|0;r=o+i|0;if((r|0)<=(q|0)){break}s=(h|0)>0;t=q;do{if(s){q=f+((ga(t,g)|0)-m)|0;u=j+(t+n<<1)|0;v=0;while(1){b[u>>1]=d[q]|0;w=v+1|0;if((w|0)<(h|0)){q=q+1|0;u=u+(p<<1)|0;v=w}else{break}}}t=t+1|0;}while((t|0)<(r|0))}else if((k|0)==1){r=-n|0;t=o+i|0;if((t|0)<=(r|0)){break}s=(h|0)>0;v=r;do{if(s){r=f+((ga(v,g)|0)-m)|0;u=j+(v+n<<1)|0;q=0;while(1){w=r+1|0;b[u>>1]=((((((d[w]<<2)-(d[r]|0)&65535)+((d[r+2|0]|0)*-10&65535)&65535)+((d[r+3|0]|0)*58&65535)&65535)+((d[r+4|0]|0)*17&65535)&65535)+((d[r+5|0]|0)*-5&65535)&65535)+(d[r+6|0]|0);x=q+1|0;if((x|0)<(h|0)){r=w;u=u+(p<<1)|0;q=x}else{break}}}v=v+1|0;}while((v|0)<(t|0))}else if((k|0)==2){t=-n|0;v=o+i|0;if((v|0)<=(t|0)){break}s=(h|0)>0;q=t;do{if(s){t=f+((ga(q,g)|0)-m)|0;u=j+(q+n<<1)|0;r=0;while(1){x=t+1|0;b[u>>1]=(((((d[x]<<2)-(d[t]|0)&65535)+(d[t+6|0]<<2)&65535)-(d[t+7|0]|0)&65535)+(((d[t+4|0]|0)+(d[t+3|0]|0)&65535)*40&65535)&65535)+(((d[t+5|0]|0)+(d[t+2|0]|0)&65535)*-11&65535);w=r+1|0;if((w|0)<(h|0)){t=x;u=u+(p<<1)|0;r=w}else{break}}}q=q+1|0;}while((q|0)<(v|0))}else if((k|0)==3){v=-n|0;q=o+i|0;if((q|0)<=(v|0)){break}s=(h|0)>0;r=v;do{if(s){v=f+((ga(r,g)|0)-m)|0;u=j+(r+n<<1)|0;t=0;while(1){w=v+1|0;b[u>>1]=(((((((d[w]|0)*-5&65535)+(d[v]|0)&65535)+((d[v+2|0]|0)*17&65535)&65535)+((d[v+3|0]|0)*58&65535)&65535)+((d[v+4|0]|0)*-10&65535)&65535)+(d[v+5|0]<<2)&65535)-(d[v+6|0]|0);x=t+1|0;if((x|0)<(h|0)){v=w;u=u+(p<<1)|0;t=x}else{break}}}r=r+1|0;}while((r|0)<(q|0))}}while(0);n=(k|0)==0?0:6;if((l|0)==2){if((h|0)<=0){return}k=(i|0)>0;m=0;do{if(k){g=j+((ga(m,p)|0)<<1)|0;f=a+(m<<1)|0;o=0;while(1){q=g+2|0;b[f>>1]=(b[q>>1]<<2)-(b[g>>1]|0)+(b[g+12>>1]<<2)-(b[g+14>>1]|0)+(((b[g+8>>1]|0)+(b[g+6>>1]|0)|0)*40|0)+(((b[g+10>>1]|0)+(b[g+4>>1]|0)|0)*-11|0)>>n;r=o+1|0;if((r|0)<(i|0)){g=q;f=f+(e<<1)|0;o=r}else{break}}}m=m+1|0;}while((m|0)<(h|0));return}else if((l|0)==0){if((h|0)<=0){return}m=(i|0)>0;k=0;do{if(m){o=j+((ga(k,p)|0)<<1)|0;f=a+(k<<1)|0;g=0;while(1){b[f>>1]=b[o>>1]|0;r=g+1|0;if((r|0)<(i|0)){o=o+2|0;f=f+(e<<1)|0;g=r}else{break}}}k=k+1|0;}while((k|0)<(h|0));return}else if((l|0)==3){if((h|0)<=0){return}k=(i|0)>0;m=0;do{if(k){g=j+((ga(m,p)|0)<<1)|0;f=a+(m<<1)|0;o=0;while(1){r=g+2|0;b[f>>1]=((b[r>>1]|0)*-5|0)+(b[g>>1]|0)+((b[g+4>>1]|0)*17|0)+((b[g+6>>1]|0)*58|0)+((b[g+8>>1]|0)*-10|0)+(b[g+10>>1]<<2)-(b[g+12>>1]|0)>>n;q=o+1|0;if((q|0)<(i|0)){g=r;f=f+(e<<1)|0;o=q}else{break}}}m=m+1|0;}while((m|0)<(h|0));return}else if((l|0)==1){if((h|0)<=0){return}l=(i|0)>0;m=0;do{if(l){k=j+((ga(m,p)|0)<<1)|0;o=a+(m<<1)|0;f=0;while(1){g=k+2|0;b[o>>1]=(b[g>>1]<<2)-(b[k>>1]|0)+((b[k+4>>1]|0)*-10|0)+((b[k+6>>1]|0)*58|0)+((b[k+8>>1]|0)*17|0)+((b[k+10>>1]|0)*-5|0)+(b[k+12>>1]|0)>>n;q=f+1|0;if((q|0)<(i|0)){k=g;o=o+(e<<1)|0;f=q}else{break}}}m=m+1|0;}while((m|0)<(h|0));return}else{return}}function ki(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,0,1);return}function li(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,0,2);return}function mi(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,0,3);return}function ni(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,1,0);return}function oi(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,1,1);return}function pi(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,1,2);return}function qi(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,1,3);return}function ri(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,2,0);return}function si(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,2,1);return}function ti(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,2,2);return}function ui(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,2,3);return}function vi(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,3,0);return}function wi(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,3,1);return}function xi(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,3,2);return}function yi(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ji(a,b,c,d,e,f,g,3,3);return}function zi(c,e,f){c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;g=0;do{h=g<<2;i=ga(g,f)|0;j=c+i|0;k=((b[e+(h<<1)>>1]<<7)+2048>>12)+(d[j]|0)|0;if((k|0)<0){l=0}else{l=(k|0)>255?-1:k&255}a[j]=l;j=c+(i+1)|0;k=((b[e+((h|1)<<1)>>1]<<7)+2048>>12)+(d[j]|0)|0;if((k|0)<0){m=0}else{m=(k|0)>255?-1:k&255}a[j]=m;j=c+(i+2)|0;k=((b[e+((h|2)<<1)>>1]<<7)+2048>>12)+(d[j]|0)|0;if((k|0)<0){n=0}else{n=(k|0)>255?-1:k&255}a[j]=n;j=c+(i+3)|0;i=((b[e+((h|3)<<1)>>1]<<7)+2048>>12)+(d[j]|0)|0;if((i|0)<0){o=0}else{o=(i|0)>255?-1:i&255}a[j]=o;g=g+1|0;}while((g|0)<4);return}function Ai(c,e,f,g){c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;if((f|0)>0){h=0}else{return}do{i=ga(h,f)|0;j=ga(h,g)|0;k=0;do{l=c+(k+j)|0;m=(d[l]|0)+(b[e+(k+i<<1)>>1]|0)|0;if((m|0)<0){n=0}else{n=(m|0)>255?-1:m&255}a[l]=n;k=k+1|0;}while((k|0)<(f|0));h=h+1|0;}while((h|0)<(f|0));return}function Bi(c,e,f){c=c|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;i=i+32|0;h=g|0;j=0;while(1){k=b[e+(j<<1)>>1]|0;l=0;do{m=ga(k<<16>>16,a[21992+l|0]|0)|0;n=(ga(b[e+(j+4<<1)>>1]|0,a[21996+l|0]|0)|0)+m|0;m=(ga(b[e+(j+8<<1)>>1]|0,a[22e3+l|0]|0)|0)+n|0;n=(ga(b[e+(j+12<<1)>>1]|0,a[22004+l|0]|0)|0)+m+64>>7;if((n|0)<-32768){o=-32768}else{o=(n|0)>32767?32767:n&65535}b[h+(l<<3)+(j<<1)>>1]=o;l=l+1|0;}while((l|0)<4);l=j+1|0;if((l|0)<4){j=l}else{p=0;break}}do{j=ga(p,f)|0;o=b[h+(p<<3)>>1]|0;e=b[h+(p<<3)+2>>1]|0;l=b[h+(p<<3)+4>>1]|0;k=b[h+(p<<3)+6>>1]|0;n=0;do{m=ga(o<<16>>16,a[21992+n|0]|0)|0;q=(ga(e<<16>>16,a[21996+n|0]|0)|0)+m|0;m=(ga(l<<16>>16,a[22e3+n|0]|0)|0)+q|0;q=(ga(k<<16>>16,a[22004+n|0]|0)|0)+m+2048>>12;if((q|0)<-32768){r=-32768}else{r=(q|0)>32767?32767:q}q=c+(n+j)|0;m=(d[q]|0)+r|0;if((m|0)<0){s=0}else{s=(m|0)>255?-1:m&255}a[q]=s;n=n+1|0;}while((n|0)<4);p=p+1|0;}while((p|0)<4);i=g;return}function Ci(a,b,c){a=a|0;b=b|0;c=c|0;Di(a,c,4,b);return}function Di(c,e,f,g){c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;h=i;i=i+2048|0;j=h|0;if((f|0)>1){k=f;l=0;while(1){m=l+1|0;n=k>>1;if((n|0)>1){k=n;l=m}else{o=m;break}}}else{o=0}l=5-o|0;o=(f|0)>0;if(o){p=0}else{q=2048;r=0;i=h;return}do{k=f;while(1){s=k-1|0;if((k|0)<=0){t=0;u=8;break}if((b[g+((ga(s,f)|0)+p<<1)>>1]|0)==0){k=s}else{v=0;u=9;break}}if((u|0)==8){while(1){u=0;b[j+((ga(t,f)|0)+p<<1)>>1]=0;k=t+1|0;if((k|0)<(f|0)){t=k;u=8}else{break}}}else if((u|0)==9){while(1){u=0;k=0;m=0;while(1){w=(ga(b[g+((ga(m,f)|0)+p<<1)>>1]|0,a[22352+(m<<l<<5)+v|0]|0)|0)+k|0;if((m|0)<(s|0)){k=w;m=m+1|0}else{break}}m=w+64>>7;if((m|0)<-32768){x=-32768}else{x=(m|0)>32767?32767:m&65535}b[j+((ga(v,f)|0)+p<<1)>>1]=x;m=v+1|0;if((m|0)<(f|0)){v=m;u=9}else{break}}}p=p+1|0;}while((p|0)<(f|0));if(o){y=0}else{q=2048;r=0;i=h;return}do{o=ga(y,f)|0;p=f;while(1){z=p-1|0;if((p|0)<=0){A=0;u=19;break}if((b[j+(z+o<<1)>>1]|0)==0){p=z}else{u=18;break}}if((u|0)==18){u=0;p=ga(y,e)|0;v=0;do{x=0;w=0;while(1){B=(ga(b[j+(w+o<<1)>>1]|0,a[22352+(w<<l<<5)+v|0]|0)|0)+x|0;if((w|0)<(z|0)){x=B;w=w+1|0}else{break}}w=c+(v+p)|0;x=(d[w]|0)+(B+2048>>12)|0;if((x|0)<0){C=0}else{C=(x|0)>255?-1:x&255}a[w]=C;v=v+1|0;}while((v|0)<(f|0))}else if((u|0)==19){while(1){u=0;v=A+1|0;if((v|0)<(f|0)){A=v;u=19}else{break}}}y=y+1|0;}while((y|0)<(f|0));q=2048;r=0;i=h;return}function Ei(a,b,c){a=a|0;b=b|0;c=c|0;Di(a,c,8,b);return}function Fi(a,b,c){a=a|0;b=b|0;c=c|0;Di(a,c,16,b);return}function Gi(a,b,c){a=a|0;b=b|0;c=c|0;Di(a,c,32,b);return}function Hi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;h=c[o>>2]|0;bj(28904,h,29032);c[7474]=16420;c[7476]=16440;c[7475]=0;ek(29904,28904);c[7494]=0;c[7495]=-1;j=c[s>>2]|0;c[7202]=16200;mp(28812);ys(28816,0,24)|0;c[7202]=16568;c[7210]=j;np(g,28812);k=pp(g,29232)|0;l=k;op(g);c[7211]=l;c[7212]=29040;a[28852]=(Fc[c[(c[k>>2]|0)+28>>2]&255](l)|0)&1;c[7408]=16324;c[7409]=16344;ek(29636,28808);c[7427]=0;c[7428]=-1;l=c[r>>2]|0;c[7214]=16200;mp(28860);ys(28864,0,24)|0;c[7214]=16568;c[7222]=l;np(f,28860);k=pp(f,29232)|0;g=k;op(f);c[7223]=g;c[7224]=29048;a[28900]=(Fc[c[(c[k>>2]|0)+28>>2]&255](g)|0)&1;c[7452]=16324;c[7453]=16344;ek(29812,28856);c[7471]=0;c[7472]=-1;g=c[(c[(c[7452]|0)-12>>2]|0)+29832>>2]|0;c[7430]=16324;c[7431]=16344;ek(29724,g);c[7449]=0;c[7450]=-1;c[(c[(c[7474]|0)-12>>2]|0)+29968>>2]=29632;g=(c[(c[7452]|0)-12>>2]|0)+29812|0;c[g>>2]=c[g>>2]|8192;c[(c[(c[7452]|0)-12>>2]|0)+29880>>2]=29632;Pi(28752,h,29056);c[7386]=16372;c[7388]=16392;c[7387]=0;ek(29552,28752);c[7406]=0;c[7407]=-1;c[7164]=16128;mp(28660);ys(28664,0,24)|0;c[7164]=16496;c[7172]=j;np(e,28660);j=pp(e,29224)|0;h=j;op(e);c[7173]=h;c[7174]=29064;a[28700]=(Fc[c[(c[j>>2]|0)+28>>2]&255](h)|0)&1;c[7316]=16276;c[7317]=16296;ek(29268,28656);c[7335]=0;c[7336]=-1;c[7176]=16128;mp(28708);ys(28712,0,24)|0;c[7176]=16496;c[7184]=l;np(d,28708);l=pp(d,29224)|0;h=l;op(d);c[7185]=h;c[7186]=29072;a[28748]=(Fc[c[(c[l>>2]|0)+28>>2]&255](h)|0)&1;c[7360]=16276;c[7361]=16296;ek(29444,28704);c[7379]=0;c[7380]=-1;h=c[(c[(c[7360]|0)-12>>2]|0)+29464>>2]|0;c[7338]=16276;c[7339]=16296;ek(29356,h);c[7357]=0;c[7358]=-1;c[(c[(c[7386]|0)-12>>2]|0)+29616>>2]=29264;h=(c[(c[7360]|0)-12>>2]|0)+29444|0;c[h>>2]=c[h>>2]|8192;c[(c[(c[7360]|0)-12>>2]|0)+29512>>2]=29264;i=b;return}function Ii(a){a=a|0;Lk(29632)|0;Lk(29720)|0;Qk(29264)|0;Qk(29352)|0;return}function Ji(a){a=a|0;c[a>>2]=16128;op(a+4|0);return}function Ki(a){a=a|0;c[a>>2]=16128;op(a+4|0);is(a);return}function Li(b,d){b=b|0;d=d|0;var e=0;Fc[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=pp(d,29224)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(Fc[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function Mi(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=Pc[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((Ma(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((Ka(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function Ni(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((a[b+44|0]|0)!=0){f=Ma(d|0,4,e|0,c[b+32>>2]|0)|0;return f|0}g=b;if((e|0)>0){h=d;i=0}else{f=0;return f|0}while(1){if((Oc[c[(c[g>>2]|0)+52>>2]&31](b,c[h>>2]|0)|0)==-1){f=i;j=6;break}d=i+1|0;if((d|0)<(e|0)){h=h+4|0;i=d}else{f=d;j=6;break}}if((j|0)==6){return f|0}return 0}function Oi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){c[g>>2]=d;if((a[b+44|0]|0)!=0){if((Ma(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=Kc[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2>>>0)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((Ma(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((Ma(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function Pi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=16128;j=b+4|0;mp(j);ys(b+8|0,0,24)|0;c[h>>2]=16896;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;np(g,j);j=pp(g,29224)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=Fc[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(Fc[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){op(g);i=f;return}yo(264);op(g);i=f;return}function Qi(a){a=a|0;c[a>>2]=16128;op(a+4|0);return}function Ri(a){a=a|0;c[a>>2]=16128;op(a+4|0);is(a);return}function Si(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=pp(d,29224)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=Fc[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(Fc[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}yo(264);return}function Ti(a){a=a|0;return Wi(a,0)|0}function Ui(a){a=a|0;return Wi(a,1)|0}function Vi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=Kc[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+4|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o-1|0;c[g>>2]=r;if((Yb(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function Wi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;if((a[k]|0)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;a:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=cb(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o;l=l+1|0;if((l|0)>=(k|0)){break a}}i=e;return n|0}}while(0);b:do{if((a[b+53|0]|0)==0){l=b+40|0;m=b+36|0;o=f|0;p=g+4|0;q=b+32|0;r=k;while(1){s=c[l>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=Kc[c[(c[t>>2]|0)+16>>2]&31](t,s,o,w,h,g,p,j)|0;if((x|0)==3){y=14;break}else if((x|0)==2){n=-1;y=22;break}else if((x|0)!=1){z=r;break b}x=c[l>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;y=22;break}v=cb(c[q>>2]|0)|0;if((v|0)==-1){n=-1;y=22;break}a[w]=v;r=r+1|0}if((y|0)==14){c[g>>2]=a[o]|0;z=r;break}else if((y|0)==22){i=e;return n|0}}else{c[g>>2]=a[f|0]|0;z=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=z;while(1){if((b|0)<=0){break}z=b-1|0;if((Yb(a[f+z|0]|0,c[d>>2]|0)|0)==-1){n=-1;y=22;break}else{b=z}}if((y|0)==22){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function Xi(a){a=a|0;c[a>>2]=16200;op(a+4|0);return}function Yi(a){a=a|0;c[a>>2]=16200;op(a+4|0);is(a);return}function Zi(b,d){b=b|0;d=d|0;var e=0;Fc[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=pp(d,29232)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(Fc[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function _i(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=Pc[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((Ma(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((Ka(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function $i(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((a[b+44|0]|0)!=0){g=Ma(e|0,1,f|0,c[b+32>>2]|0)|0;return g|0}h=b;if((f|0)>0){i=e;j=0}else{g=0;return g|0}while(1){if((Oc[c[(c[h>>2]|0)+52>>2]&31](b,d[i]|0)|0)==-1){g=j;k=6;break}e=j+1|0;if((e|0)<(f|0)){i=i+1|0;j=e}else{g=e;k=6;break}}if((k|0)==6){return g|0}return 0}function aj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){a[g]=d;if((a[b+44|0]|0)!=0){if((Ma(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=Kc[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2>>>0)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((Ma(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((Ma(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function bj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=16200;j=b+4|0;mp(j);ys(b+8|0,0,24)|0;c[h>>2]=16968;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;np(g,j);j=pp(g,29232)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=Fc[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(Fc[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){op(g);i=f;return}yo(264);op(g);i=f;return}function cj(a){a=a|0;c[a>>2]=16200;op(a+4|0);return}function dj(a){a=a|0;c[a>>2]=16200;op(a+4|0);is(a);return}function ej(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=pp(d,29232)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=Fc[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(Fc[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}yo(264);return}function fj(a){a=a|0;return ij(a,0)|0}function gj(a){a=a|0;return ij(a,1)|0}function hj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){a[h]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=Kc[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+1|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o-1|0;c[g>>2]=r;if((Yb(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function ij(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=b+52|0;if((a[l]|0)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;a:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=cb(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p;m=m+1|0;if((m|0)>=(l|0)){break a}}i=f;return o|0}}while(0);b:do{if((a[b+53|0]|0)==0){m=b+40|0;n=b+36|0;p=g|0;q=h+1|0;r=b+32|0;s=l;while(1){t=c[m>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=Kc[c[(c[u>>2]|0)+16>>2]&31](u,t,p,x,j,h,q,k)|0;if((y|0)==3){z=14;break}else if((y|0)==2){o=-1;z=23;break}else if((y|0)!=1){A=s;break b}y=c[m>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;z=23;break}w=cb(c[r>>2]|0)|0;if((w|0)==-1){o=-1;z=23;break}a[x]=w;s=s+1|0}if((z|0)==14){a[h]=a[p]|0;A=s;break}else if((z|0)==23){i=f;return o|0}}else{a[h]=a[g|0]|0;A=l}}while(0);do{if(e){l=a[h]|0;c[b+48>>2]=l&255;B=l}else{l=b+32|0;k=A;while(1){if((k|0)<=0){z=21;break}j=k-1|0;if((Yb(d[g+j|0]|0,c[l>>2]|0)|0)==-1){o=-1;z=23;break}else{k=j}}if((z|0)==21){B=a[h]|0;break}else if((z|0)==23){i=f;return o|0}}}while(0);o=B&255;i=f;return o|0}function jj(){Hi(0);Rb(164,29984,u|0)|0;return}function kj(a){a=a|0;return}function lj(a){a=a|0;var b=0;b=a+4|0;I=c[b>>2]|0,c[b>>2]=I+1,I;return}function mj(a){a=a|0;var b=0,d=0;b=a+4|0;if(((I=c[b>>2]|0,c[b>>2]=I+ -1,I)|0)!=0){d=0;return d|0}Ac[c[(c[a>>2]|0)+8>>2]&511](a);d=1;return d|0}function nj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=14504;d=As(b|0)|0;e=hs(d+13|0)|0;c[e+4>>2]=d;c[e>>2]=d;f=e+12|0;c[a+4>>2]=f;c[e+8>>2]=0;xs(f|0,b|0,d+1|0)|0;return}function oj(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=14504;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a|0;f=a;is(f);return}js((c[b>>2]|0)-12|0);e=a|0;f=a;is(f);return}function pj(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=14504;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a|0;return}js((c[b>>2]|0)-12|0);e=a|0;return}function qj(a){a=a|0;return c[a+4>>2]|0}function rj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b>>2]=14440;if((a[d]&1)==0){e=d+1|0}else{e=c[d+8>>2]|0}d=As(e|0)|0;f=hs(d+13|0)|0;c[f+4>>2]=d;c[f>>2]=d;g=f+12|0;c[b+4>>2]=g;c[f+8>>2]=0;xs(g|0,e|0,d+1|0)|0;return}function sj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=14440;d=As(b|0)|0;e=hs(d+13|0)|0;c[e+4>>2]=d;c[e>>2]=d;f=e+12|0;c[a+4>>2]=f;c[e+8>>2]=0;xs(f|0,b|0,d+1|0)|0;return}function tj(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=14440;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a|0;f=a;is(f);return}js((c[b>>2]|0)-12|0);e=a|0;f=a;is(f);return}function uj(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=14440;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a|0;return}js((c[b>>2]|0)-12|0);e=a|0;return}function vj(a){a=a|0;return c[a+4>>2]|0}function wj(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=14504;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a|0;f=a;is(f);return}js((c[b>>2]|0)-12|0);e=a|0;f=a;is(f);return}function xj(a){a=a|0;return}function yj(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function zj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;Hc[c[(c[a>>2]|0)+12>>2]&31](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function Aj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[b+4>>2]|0)!=(a|0)){e=0;return e|0}e=(c[b>>2]|0)==(d|0);return e|0}function Bj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;d=Tb(e|0)|0;e=As(d|0)|0;if(e>>>0>4294967279>>>0){Hj(0)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;xs(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=gs(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;xs(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function Cj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+16|0;g=f|0;h=d|0;j=c[h>>2]|0;k=e;do{if((j|0)!=0){l=a[k]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[e+4>>2]|0}if((m|0)==0){n=j}else{Rj(e,8664,2)|0;n=c[h>>2]|0}l=c[d+4>>2]|0;Hc[c[(c[l>>2]|0)+24>>2]&31](g,l,n);l=g;o=a[l]|0;if((o&1)==0){p=(o&255)>>>1;q=g+1|0}else{p=c[g+4>>2]|0;q=c[g+8>>2]|0}Rj(e,q,p)|0;if((a[l]&1)==0){break}is(c[g+8>>2]|0)}}while(0);g=b;c[g>>2]=c[k>>2];c[g+4>>2]=c[k+4>>2];c[g+8>>2]=c[k+8>>2];ys(k|0,0,12)|0;i=f;return}function Dj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=f|0;h=f+16|0;j=As(e|0)|0;if(j>>>0>4294967279>>>0){Hj(0)}if(j>>>0<11>>>0){a[h]=j<<1;k=h+1|0}else{l=j+16&-16;m=gs(l)|0;c[h+8>>2]=m;c[h>>2]=l|1;c[h+4>>2]=j;k=m}xs(k|0,e|0,j)|0;a[k+j|0]=0;Cj(g,d,h);rj(b|0,g);if(!((a[g]&1)==0)){is(c[g+8>>2]|0)}if(!((a[h]&1)==0)){is(c[h+8>>2]|0)}c[b>>2]=16464;h=d;d=b+8|0;b=c[h+4>>2]|0;c[d>>2]=c[h>>2];c[d+4>>2]=b;i=f;return}function Ej(a){a=a|0;uj(a|0);is(a);return}function Fj(a){a=a|0;uj(a|0);return}function Gj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e;if((c[a>>2]|0)==1){do{Xa(28984,28960)|0;}while((c[a>>2]|0)==1)}if((c[a>>2]|0)!=0){f;return}c[a>>2]=1;g;Ac[d&511](b);h;c[a>>2]=-1;i;Lb(28984)|0;return}function Hj(a){a=a|0;a=mc(8)|0;nj(a,832);c[a>>2]=14472;Db(a|0,20360,42)}function Ij(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=d;if((a[e]&1)==0){f=b;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];return}e=c[d+8>>2]|0;f=c[d+4>>2]|0;if(f>>>0>4294967279>>>0){Hj(0)}if(f>>>0<11>>>0){a[b]=f<<1;g=b+1|0}else{d=f+16&-16;h=gs(d)|0;c[b+8>>2]=h;c[b>>2]=d|1;c[b+4>>2]=f;g=h}xs(g|0,e|0,f)|0;a[g+f|0]=0;return}function Jj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(e>>>0>4294967279>>>0){Hj(0)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;xs(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=gs(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;xs(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function Kj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(d>>>0>4294967279>>>0){Hj(0)}if(d>>>0<11>>>0){a[b]=d<<1;f=b+1|0}else{g=d+16&-16;h=gs(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=d;f=h}ys(f|0,e|0,d|0)|0;a[f+d|0]=0;return}function Lj(b){b=b|0;if((a[b]&1)==0){return}is(c[b+8>>2]|0);return}function Mj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=As(d|0)|0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=(i&1)==0;if(h>>>0<e>>>0){if(g){j=(i&255)>>>1}else{j=c[b+4>>2]|0}Sj(b,h,e-h|0,j,0,j,e,d);return b|0}if(g){k=b+1|0}else{k=c[b+8>>2]|0}zs(k|0,d|0,e|0)|0;a[k+e|0]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function Nj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b;g=a[f]|0;h=(g&1)==0;if(h){i=(g&255)>>>1}else{i=c[b+4>>2]|0}if(i>>>0<d>>>0){Oj(b,d-i|0,e)|0;return}if(h){a[b+1+d|0]=0;a[f]=d<<1;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;return}}function Oj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((d|0)==0){return b|0}f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if((i&1)==0){j=(i&255)>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<d>>>0){Tj(b,h,d-h+j|0,j,j,0,0);k=a[f]|0}else{k=i}if((k&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}ys(l+j|0,e|0,d|0)|0;e=j+d|0;if((a[f]&1)==0){a[f]=e<<1}else{c[b+4>>2]=e}a[l+e|0]=0;return b|0}function Pj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(d>>>0>4294967279>>>0){Hj(0)}e=b;f=a[e]|0;if((f&1)==0){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<11>>>0){j=10}else{j=(f+16&-16)-1|0}if((j|0)==(g|0)){return}do{if((j|0)==10){k=b+1|0;l=c[b+8>>2]|0;m=1;n=0}else{f=j+1|0;if(j>>>0>g>>>0){o=gs(f)|0}else{o=gs(f)|0}if((h&1)==0){k=o;l=b+1|0;m=0;n=1;break}else{k=o;l=c[b+8>>2]|0;m=1;n=1;break}}}while(0);if((h&1)==0){p=(h&255)>>>1}else{p=c[b+4>>2]|0}xs(k|0,l|0,p+1|0)|0;if(m){is(l)}if(n){c[b>>2]=j+1|1;c[b+4>>2]=i;c[b+8>>2]=k;return}else{a[e]=i<<1;return}}function Qj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b;f=a[e]|0;g=(f&1)!=0;if(g){h=c[b+4>>2]|0;i=(c[b>>2]&-2)-1|0}else{h=(f&255)>>>1;i=10}if((h|0)==(i|0)){Tj(b,i,1,i,i,0,0);if((a[e]&1)==0){j=7}else{j=8}}else{if(g){j=8}else{j=7}}if((j|0)==7){a[e]=(h<<1)+2;k=b+1|0;l=h+1|0;m=k+h|0;a[m]=d;n=k+l|0;a[n]=0;return}else if((j|0)==8){j=c[b+8>>2]|0;e=h+1|0;c[b+4>>2]=e;k=j;l=e;m=k+h|0;a[m]=d;n=k+l|0;a[n]=0;return}}function Rj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if((i&1)==0){j=(i&255)>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<e>>>0){Sj(b,h,e-h+j|0,j,j,0,e,d);return b|0}if((e|0)==0){return b|0}if((i&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}xs(k+j|0,d|0,e)|0;d=j+e|0;if((a[f]&1)==0){a[f]=d<<1}else{c[b+4>>2]=d}a[k+d|0]=0;return b|0}function Sj(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((-18-d|0)>>>0<e>>>0){Hj(0)}if((a[b]&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<11>>>0){o=11;break}o=n+16&-16}else{o=-17}}while(0);e=gs(o)|0;if((g|0)!=0){xs(e|0,k|0,g)|0}if((i|0)!=0){xs(e+g|0,j|0,i)|0}j=f-h|0;if((j|0)!=(g|0)){xs(e+(i+g)|0,k+(h+g)|0,j-g|0)|0}if((d|0)==10){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}is(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}function Tj(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((-17-d|0)>>>0<e>>>0){Hj(0)}if((a[b]&1)==0){j=b+1|0}else{j=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<11>>>0){n=11;break}n=m+16&-16}else{n=-17}}while(0);e=gs(n)|0;if((g|0)!=0){xs(e|0,j|0,g)|0}m=f-h|0;if((m|0)!=(g|0)){xs(e+(i+g)|0,j+(h+g)|0,m-g|0)|0}if((d|0)==10){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}is(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function Uj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e>>>0>1073741807>>>0){Hj(0)}if(e>>>0<2>>>0){a[b]=e<<1;f=b+4|0;g=Cr(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}else{i=e+4&-4;j=gs(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=e;f=j;g=Cr(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}}function Vj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(d>>>0>1073741807>>>0){Hj(0)}if(d>>>0<2>>>0){a[b]=d<<1;f=b+4|0;g=Er(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}else{i=d+4&-4;j=gs(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=d;f=j;g=Er(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}}function Wj(b){b=b|0;if((a[b]&1)==0){return}is(c[b+8>>2]|0);return}function Xj(a,b){a=a|0;b=b|0;return Yj(a,b,Br(b)|0)|0}function Yj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=1;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=(i&1)==0;if(h>>>0<e>>>0){if(g){j=(i&255)>>>1}else{j=c[b+4>>2]|0}$j(b,h,e-h|0,j,0,j,e,d);return b|0}if(g){k=b+4|0}else{k=c[b+8>>2]|0}Dr(k,d,e)|0;c[k+(e<<2)>>2]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function Zj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(d>>>0>1073741807>>>0){Hj(0)}e=b;f=a[e]|0;if((f&1)==0){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<2>>>0){j=1}else{j=(f+4&-4)-1|0}if((j|0)==(g|0)){return}do{if((j|0)==1){k=b+4|0;l=c[b+8>>2]|0;m=1;n=0}else{f=(j<<2)+4|0;if(j>>>0>g>>>0){o=gs(f)|0}else{o=gs(f)|0}f=o;if((h&1)==0){k=f;l=b+4|0;m=0;n=1;break}else{k=f;l=c[b+8>>2]|0;m=1;n=1;break}}}while(0);if((h&1)==0){p=(h&255)>>>1}else{p=c[b+4>>2]|0}Cr(k,l,p+1|0)|0;if(m){is(l)}if(n){c[b>>2]=j+1|1;c[b+4>>2]=i;c[b+8>>2]=k;return}else{a[e]=i<<1;return}}function _j(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b;f=a[e]|0;g=(f&1)!=0;if(g){h=c[b+4>>2]|0;i=(c[b>>2]&-2)-1|0}else{h=(f&255)>>>1;i=1}if((h|0)==(i|0)){ak(b,i,1,i,i,0,0);if((a[e]&1)==0){j=7}else{j=8}}else{if(g){j=8}else{j=7}}if((j|0)==7){a[e]=(h<<1)+2;k=b+4|0;l=h+1|0;m=k+(h<<2)|0;c[m>>2]=d;n=k+(l<<2)|0;c[n>>2]=0;return}else if((j|0)==8){j=c[b+8>>2]|0;e=h+1|0;c[b+4>>2]=e;k=j;l=e;m=k+(h<<2)|0;c[m>>2]=d;n=k+(l<<2)|0;c[n>>2]=0;return}}function $j(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((1073741806-d|0)>>>0<e>>>0){Hj(0)}if((a[b]&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<2>>>0){o=2;break}o=n+4&-4}else{o=1073741807}}while(0);e=gs(o<<2)|0;if((g|0)!=0){Cr(e,k,g)|0}if((i|0)!=0){Cr(e+(g<<2)|0,j,i)|0}j=f-h|0;if((j|0)!=(g|0)){Cr(e+(i+g<<2)|0,k+(h+g<<2)|0,j-g|0)|0}if((d|0)==1){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}is(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}function ak(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((1073741807-d|0)>>>0<e>>>0){Hj(0)}if((a[b]&1)==0){j=b+4|0}else{j=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<2>>>0){n=2;break}n=m+4&-4}else{n=1073741807}}while(0);e=gs(n<<2)|0;if((g|0)!=0){Cr(e,j,g)|0}m=f-h|0;if((m|0)!=(g|0)){Cr(e+(i+g<<2)|0,j+(h+g<<2)|0,m-g|0)|0}if((d|0)==1){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}is(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function bk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;g=(c[b+24>>2]|0)==0;if(g){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((g&1|d)&c[b+20>>2]|0)==0){i=e;return}e=mc(16)|0;do{if((a[46472]|0)==0){if((sb(46472)|0)==0){break}c[7e3]=15968;Rb(76,28e3,u|0)|0}}while(0);b=Ds(28e3,0,32)|0;c[f>>2]=b|1;c[f+4>>2]=K;Dj(e,f,9272);c[e>>2]=15152;Db(e|0,20904,38)}function ck(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=15128;b=c[a+40>>2]|0;d=a+32|0;e=a+36|0;if((b|0)!=0){f=b;do{f=f-1|0;Hc[c[(c[d>>2]|0)+(f<<2)>>2]&31](0,a,c[(c[e>>2]|0)+(f<<2)>>2]|0);}while((f|0)!=0)}op(a+28|0);as(c[d>>2]|0);as(c[e>>2]|0);as(c[a+48>>2]|0);as(c[a+60>>2]|0);return}function dk(a,b){a=a|0;b=b|0;np(a,b+28|0);return}function ek(a,b){a=a|0;b=b|0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;ys(a+32|0,0,40)|0;mp(a+28|0);return}function fk(a){a=a|0;c[a>>2]=16200;op(a+4|0);is(a);return}function gk(a){a=a|0;c[a>>2]=16200;op(a+4|0);return}function hk(a,b){a=a|0;b=b|0;return}function ik(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function jk(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function kk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function lk(a){a=a|0;return 0}function mk(a){a=a|0;return 0}function nk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;if((e|0)<=0){g=0;return g|0}h=b+12|0;i=b+16|0;j=d;d=0;while(1){k=c[h>>2]|0;if(k>>>0<(c[i>>2]|0)>>>0){c[h>>2]=k+1;l=a[k]|0}else{k=Fc[c[(c[f>>2]|0)+40>>2]&255](b)|0;if((k|0)==-1){g=d;m=8;break}l=k&255}a[j]=l;k=d+1|0;if((k|0)<(e|0)){j=j+1|0;d=k}else{g=k;m=8;break}}if((m|0)==8){return g|0}return 0}function ok(a){a=a|0;return-1|0}function pk(a){a=a|0;var b=0,e=0;if((Fc[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a]|0;return b|0}function qk(a,b){a=a|0;b=b|0;return-1|0}function rk(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;if((f|0)<=0){h=0;return h|0}i=b+24|0;j=b+28|0;k=0;l=e;while(1){e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){m=a[l]|0;c[i>>2]=e+1;a[e]=m}else{if((Oc[c[(c[g>>2]|0)+52>>2]&31](b,d[l]|0)|0)==-1){h=k;n=7;break}}m=k+1|0;if((m|0)<(f|0)){k=m;l=l+1|0}else{h=m;n=7;break}}if((n|0)==7){return h|0}return 0}function sk(a,b){a=a|0;b=b|0;return-1|0}function tk(a){a=a|0;c[a>>2]=16128;op(a+4|0);is(a);return}function uk(a){a=a|0;c[a>>2]=16128;op(a+4|0);return}function vk(a,b){a=a|0;b=b|0;return}function wk(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function xk(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function yk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function zk(a){a=a|0;return 0}function Ak(a){a=a|0;return 0}function Bk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+12|0;h=a+16|0;i=b;b=0;while(1){j=c[g>>2]|0;if(j>>>0<(c[h>>2]|0)>>>0){c[g>>2]=j+4;k=c[j>>2]|0}else{j=Fc[c[(c[e>>2]|0)+40>>2]&255](a)|0;if((j|0)==-1){f=b;l=8;break}else{k=j}}c[i>>2]=k;j=b+1|0;if((j|0)>=(d|0)){f=j;l=8;break}i=i+4|0;b=j}if((l|0)==8){return f|0}return 0}function Ck(a){a=a|0;return-1|0}function Dk(a){a=a|0;var b=0,d=0;if((Fc[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;b=c[a>>2]|0;return b|0}function Ek(a,b){a=a|0;b=b|0;return-1|0}function Fk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+24|0;h=a+28|0;i=0;j=b;while(1){b=c[g>>2]|0;if(b>>>0<(c[h>>2]|0)>>>0){k=c[j>>2]|0;c[g>>2]=b+4;c[b>>2]=k}else{if((Oc[c[(c[e>>2]|0)+52>>2]&31](a,c[j>>2]|0)|0)==-1){f=i;l=8;break}}k=i+1|0;if((k|0)>=(d|0)){f=k;l=8;break}i=k;j=j+4|0}if((l|0)==8){return f|0}return 0}function Gk(a,b){a=a|0;b=b|0;return-1|0}function Hk(a){a=a|0;ck(a+8|0);is(a);return}function Ik(a){a=a|0;ck(a+8|0);return}function Jk(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;ck(b+(d+8)|0);is(b+d|0);return}function Kk(a){a=a|0;ck(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function Lk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)==0){l=g}else{Lk(k)|0;l=c[(c[f>>2]|0)-12>>2]|0}a[j]=1;k=c[h+(l+24)>>2]|0;if(!((Fc[c[(c[k>>2]|0)+24>>2]&255](k)|0)==-1)){break}k=c[(c[f>>2]|0)-12>>2]|0;bk(h+k|0,c[h+(k+16)>>2]|1)}}while(0);Vk(e);i=d;return b|0}function Mk(a){a=a|0;ck(a+8|0);is(a);return}function Nk(a){a=a|0;ck(a+8|0);return}function Ok(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;ck(b+(d+8)|0);is(b+d|0);return}function Pk(a){a=a|0;ck(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function Qk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)==0){l=g}else{Qk(k)|0;l=c[(c[f>>2]|0)-12>>2]|0}a[j]=1;k=c[h+(l+24)>>2]|0;if(!((Fc[c[(c[k>>2]|0)+24>>2]&255](k)|0)==-1)){break}k=c[(c[f>>2]|0)-12>>2]|0;bk(h+k|0,c[h+(k+16)>>2]|1)}}while(0);_k(e);i=d;return b|0}function Rk(a){a=a|0;ck(a+4|0);is(a);return}function Sk(a){a=a|0;ck(a+4|0);return}function Tk(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;ck(b+(d+4)|0);is(b+d|0);return}function Uk(a){a=a|0;ck(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function Vk(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(xb()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if(!((Fc[c[(c[e>>2]|0)+24>>2]&255](e)|0)==-1)){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;bk(d+b|0,c[d+(b+16)>>2]|1);return}function Wk(a){a=a|0;ck(a+4|0);is(a);return}function Xk(a){a=a|0;ck(a+4|0);return}function Yk(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;ck(b+(d+4)|0);is(b+d|0);return}function Zk(a){a=a|0;ck(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function _k(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(xb()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if(!((Fc[c[(c[e>>2]|0)+24>>2]&255](e)|0)==-1)){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;bk(d+b|0,c[d+(b+16)>>2]|1);return}function $k(a){a=a|0;return 11024}function al(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)==1){Jj(a,11904,35);return}else{Bj(a,b|0,c);return}}function bl(a){a=a|0;xj(a|0);return}function cl(a){a=a|0;Fj(a|0);is(a);return}function dl(a){a=a|0;Fj(a|0);return}function el(a){a=a|0;ck(a);is(a);return}function fl(a){a=a|0;xj(a|0);is(a);return}function gl(a){a=a|0;kj(a|0);is(a);return}function hl(a){a=a|0;kj(a|0);return}function il(a){a=a|0;kj(a|0);return}function jl(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do{if((e|0)==(f|0)){g=c}else{b=c;h=e;while(1){if((b|0)==(d|0)){i=-1;j=7;break}k=a[b]|0;l=a[h]|0;if(k<<24>>24<l<<24>>24){i=-1;j=7;break}if(l<<24>>24<k<<24>>24){i=1;j=7;break}k=b+1|0;l=h+1|0;if((l|0)==(f|0)){g=k;break a}else{b=k;h=l}}if((j|0)==7){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function kl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=e;g=f-d|0;if(g>>>0>4294967279>>>0){Hj(b)}if(g>>>0<11>>>0){a[b]=g<<1;h=b+1|0}else{i=g+16&-16;j=gs(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=g;h=j}if((e|0)==(f|0)){k=h;a[k]=0;return}else{l=h;m=e}while(1){a[l]=a[m]|0;e=m+1|0;if((e|0)==(f|0)){break}else{l=l+1|0;m=e}}k=h+(f+(-d|0))|0;a[k]=0;return}function ll(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0)){e=0;return e|0}else{f=c;g=0}while(1){c=(a[f]|0)+(g<<4)|0;b=c&-268435456;h=(b>>>24|b)^c;c=f+1|0;if((c|0)==(d|0)){e=h;break}else{f=c;g=h}}return e|0}function ml(a){a=a|0;kj(a|0);is(a);return}function nl(a){a=a|0;kj(a|0);return}function ol(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do{if((e|0)==(f|0)){g=b;h=6}else{a=b;i=e;while(1){if((a|0)==(d|0)){j=-1;break a}k=c[a>>2]|0;l=c[i>>2]|0;if((k|0)<(l|0)){j=-1;break a}if((l|0)<(k|0)){j=1;break a}k=a+4|0;l=i+4|0;if((l|0)==(f|0)){g=k;h=6;break}else{a=k;i=l}}}}while(0);if((h|0)==6){j=(g|0)!=(d|0)|0}return j|0}function pl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;h=g>>2;if(h>>>0>1073741807>>>0){Hj(b)}if(h>>>0<2>>>0){a[b]=g>>>1;i=b+4|0}else{g=h+4&-4;j=gs(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}if((e|0)==(f|0)){k=i;c[k>>2]=0;return}j=f-4+(-d|0)|0;d=i;h=e;while(1){c[d>>2]=c[h>>2];e=h+4|0;if((e|0)==(f|0)){break}else{d=d+4|0;h=e}}k=i+((j>>>2)+1<<2)|0;c[k>>2]=0;return}function ql(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=0;return e|0}else{f=b;g=0}while(1){b=(c[f>>2]|0)+(g<<4)|0;a=b&-268435456;h=(a>>>24|a)^b;b=f+4|0;if((b|0)==(d|0)){e=h;break}else{f=b;g=h}}return e|0}function rl(a){a=a|0;kj(a|0);is(a);return}function sl(a){a=a|0;kj(a|0);return}function tl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];zc[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==0){a[j]=0}else if((w|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}dk(r,g);q=r|0;r=c[q>>2]|0;if(!((c[7384]|0)==-1)){c[m>>2]=29536;c[m+4>>2]=16;c[m+8>>2]=0;Gj(29536,m,116)}m=(c[7385]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;mj(c[q>>2]|0)|0;dk(s,g);n=s|0;p=c[n>>2]|0;if(!((c[7288]|0)==-1)){c[l>>2]=29152;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29152,l,116)}d=(c[7289]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;mj(c[n>>2]|0)|0;z=t|0;A=x;Bc[c[(c[A>>2]|0)+24>>2]&127](z,y);Bc[c[(c[A>>2]|0)+28>>2]&127](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(ul(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];Lj(t+12|0);Lj(t|0);i=k;return}}while(0);o=mc(4)|0;Gr(o);Db(o|0,20328,156)}}while(0);k=mc(4)|0;Gr(k);Db(k|0,20328,156)}function ul(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0;k=i;i=i+104|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=(f-e|0)/12|0;m=k|0;do{if(l>>>0>100>>>0){n=$r(l)|0;if((n|0)!=0){o=n;p=n;break}ns();o=0;p=0}else{o=m;p=0}}while(0);m=(e|0)==(f|0);if(m){q=l;r=0}else{n=l;l=0;s=o;t=e;while(1){u=a[t]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[t+4>>2]|0}if((v|0)==0){a[s]=2;w=l+1|0;x=n-1|0}else{a[s]=1;w=l;x=n}u=t+12|0;if((u|0)==(f|0)){q=x;r=w;break}else{n=x;l=w;s=s+1|0;t=u}}}t=b|0;b=d|0;d=g;s=0;w=r;r=q;a:while(1){q=c[t>>2]|0;do{if((q|0)==0){y=0}else{if((c[q+12>>2]|0)!=(c[q+16>>2]|0)){y=q;break}if((Fc[c[(c[q>>2]|0)+36>>2]&255](q)|0)==-1){c[t>>2]=0;y=0;break}else{y=c[t>>2]|0;break}}}while(0);q=(y|0)==0;l=c[b>>2]|0;do{if((l|0)==0){z=0}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){z=l;break}if(!((Fc[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1)){z=l;break}c[b>>2]=0;z=0}}while(0);A=(z|0)==0;B=c[t>>2]|0;if(!((q^A)&(r|0)!=0)){break}l=c[B+12>>2]|0;if((l|0)==(c[B+16>>2]|0)){C=(Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{C=a[l]|0}if(j){D=C}else{D=Oc[c[(c[d>>2]|0)+12>>2]&31](g,C)|0}l=s+1|0;if(m){s=l;w=w;r=r;continue}b:do{if(j){x=r;n=w;v=o;u=0;E=e;while(1){do{if((a[v]|0)==1){F=a[E]|0;G=(F&1)==0;if(G){H=E+1|0}else{H=c[E+8>>2]|0}if(!(D<<24>>24==(a[H+s|0]|0))){a[v]=0;I=u;J=n;K=x-1|0;break}if(G){L=(F&255)>>>1}else{L=c[E+4>>2]|0}if((L|0)!=(l|0)){I=1;J=n;K=x;break}a[v]=2;I=1;J=n+1|0;K=x-1|0}else{I=u;J=n;K=x}}while(0);F=E+12|0;if((F|0)==(f|0)){M=K;N=J;O=I;break b}x=K;n=J;v=v+1|0;u=I;E=F}}else{E=r;u=w;v=o;n=0;x=e;while(1){do{if((a[v]|0)==1){F=x;if((a[F]&1)==0){P=x+1|0}else{P=c[x+8>>2]|0}if(!(D<<24>>24==(Oc[c[(c[d>>2]|0)+12>>2]&31](g,a[P+s|0]|0)|0)<<24>>24)){a[v]=0;Q=n;R=u;S=E-1|0;break}G=a[F]|0;if((G&1)==0){T=(G&255)>>>1}else{T=c[x+4>>2]|0}if((T|0)!=(l|0)){Q=1;R=u;S=E;break}a[v]=2;Q=1;R=u+1|0;S=E-1|0}else{Q=n;R=u;S=E}}while(0);G=x+12|0;if((G|0)==(f|0)){M=S;N=R;O=Q;break b}E=S;u=R;v=v+1|0;n=Q;x=G}}}while(0);if(!O){s=l;w=N;r=M;continue}q=c[t>>2]|0;x=q+12|0;n=c[x>>2]|0;if((n|0)==(c[q+16>>2]|0)){Fc[c[(c[q>>2]|0)+40>>2]&255](q)|0}else{c[x>>2]=n+1}if((M+N|0)>>>0<2>>>0){s=l;w=N;r=M;continue}else{U=N;V=o;W=e}while(1){do{if((a[V]|0)==2){n=a[W]|0;if((n&1)==0){X=(n&255)>>>1}else{X=c[W+4>>2]|0}if((X|0)==(l|0)){Y=U;break}a[V]=0;Y=U-1|0}else{Y=U}}while(0);n=W+12|0;if((n|0)==(f|0)){s=l;w=Y;r=M;continue a}else{U=Y;V=V+1|0;W=n}}}do{if((B|0)==0){Z=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){Z=B;break}if((Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1){c[t>>2]=0;Z=0;break}else{Z=c[t>>2]|0;break}}}while(0);t=(Z|0)==0;do{if(A){_=92}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(t){break}else{_=94;break}}if((Fc[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1){c[b>>2]=0;_=92;break}else{if(t){break}else{_=94;break}}}}while(0);if((_|0)==92){if(t){_=94}}if((_|0)==94){c[h>>2]=c[h>>2]|2}c:do{if(m){_=99}else{if((a[o]|0)==2){$=e;break}else{aa=e;ba=o}while(1){t=aa+12|0;b=ba+1|0;if((t|0)==(f|0)){_=99;break c}if((a[b]|0)==2){$=t;break}else{aa=t;ba=b}}}}while(0);if((_|0)==99){c[h>>2]=c[h>>2]|4;$=f}if((p|0)==0){ca=100;da=0;i=k;return $|0}as(p);ca=100;da=0;i=k;return $|0}function vl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];wl(a,0,j,k,f,g,h);i=b;return}function wl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;mm(m,g,s,l);g=n;ys(g|0,0,12)|0;Nj(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Fc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}Nj(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}Nj(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if((Ol(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){Fc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=kr(F,c[o>>2]|0,h,t)|0;Co(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}if((Fc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}function xl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];yl(a,0,j,k,f,g,h);i=b;return}function yl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;mm(m,g,s,l);g=n;ys(g|0,0,12)|0;Nj(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Fc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;L=(C&255)>>>1}else{C=c[y>>2]|0;J=C;L=C}Nj(n,J<<1,0);if((a[g]&1)==0){M=10}else{M=(c[f>>2]&-2)-1|0}Nj(n,M,0);if((a[g]&1)==0){N=v}else{N=c[w>>2]|0}c[o>>2]=N+L;O=N}else{O=l}C=A+12|0;H=c[C>>2]|0;P=A+16|0;if((H|0)==(c[P>>2]|0)){Q=(Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{Q=a[H]|0}if((Ol(Q,t,O,o,r,z,m,k,q,s)|0)!=0){F=O;G=E;break}H=c[C>>2]|0;if((H|0)==(c[P>>2]|0)){Fc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=O;u=A;continue}else{c[C>>2]=H+1;l=O;u=A;continue}}u=a[m]|0;if((u&1)==0){R=(u&255)>>>1}else{R=c[m+4>>2]|0}do{if((R|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}O=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=O}}while(0);r=jr(F,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=K;Co(m,k,c[q>>2]|0,h);do{if((A|0)==0){S=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){S=A;break}if(!((Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){S=A;break}c[x>>2]=0;S=0}}while(0);x=(S|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}T=b|0;c[T>>2]=S;U=160;V=0;Lj(n);Lj(m);i=d;return}if((Fc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}T=b|0;c[T>>2]=S;U=160;V=0;Lj(n);Lj(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}T=b|0;c[T>>2]=S;U=160;V=0;Lj(n);Lj(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;T=b|0;c[T>>2]=S;U=160;V=0;Lj(n);Lj(m);i=d;return}function zl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Al(a,0,j,k,f,g,h);i=b;return}function Al(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+256|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=e+72|0;q=e+80|0;r=e+240|0;s=e+248|0;t=c[h+4>>2]&74;if((t|0)==8){u=16}else if((t|0)==64){u=8}else if((t|0)==0){u=0}else{u=10}t=l|0;mm(n,h,t,m);h=o;ys(h|0,0,12)|0;Nj(o,10,0);if((a[h]&1)==0){l=o+1|0;v=l;w=l;x=o+8|0}else{l=o+8|0;v=c[l>>2]|0;w=o+1|0;x=l}c[p>>2]=v;l=q|0;c[r>>2]=l;c[s>>2]=0;y=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=v;v=c[y>>2]|0;a:while(1){do{if((v|0)==0){B=0}else{if((c[v+12>>2]|0)!=(c[v+16>>2]|0)){B=v;break}if(!((Fc[c[(c[v>>2]|0)+36>>2]&255](v)|0)==-1)){B=v;break}c[y>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=21}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;break}else{G=m;H=D;break a}}if((Fc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=21;break}else{if(C){F=D;break}else{G=m;H=D;break a}}}}while(0);if((E|0)==21){E=0;if(C){G=m;H=0;break}else{F=0}}D=a[h]|0;I=(D&1)==0;if(I){J=(D&255)>>>1}else{J=c[z>>2]|0}if(((c[p>>2]|0)-m|0)==(J|0)){if(I){K=(D&255)>>>1;L=(D&255)>>>1}else{D=c[z>>2]|0;K=D;L=D}Nj(o,K<<1,0);if((a[h]&1)==0){M=10}else{M=(c[g>>2]&-2)-1|0}Nj(o,M,0);if((a[h]&1)==0){N=w}else{N=c[x>>2]|0}c[p>>2]=N+L;O=N}else{O=m}D=B+12|0;I=c[D>>2]|0;P=B+16|0;if((I|0)==(c[P>>2]|0)){Q=(Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{Q=a[I]|0}if((Ol(Q,u,O,p,s,A,n,l,r,t)|0)!=0){G=O;H=F;break}I=c[D>>2]|0;if((I|0)==(c[P>>2]|0)){Fc[c[(c[B>>2]|0)+40>>2]&255](B)|0;m=O;v=B;continue}else{c[D>>2]=I+1;m=O;v=B;continue}}v=a[n]|0;if((v&1)==0){R=(v&255)>>>1}else{R=c[n+4>>2]|0}do{if((R|0)!=0){v=c[r>>2]|0;if((v-q|0)>=160){break}O=c[s>>2]|0;c[r>>2]=v+4;c[v>>2]=O}}while(0);b[k>>1]=ir(G,c[p>>2]|0,j,u)|0;Co(n,l,c[r>>2]|0,j);do{if((B|0)==0){S=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){S=B;break}if(!((Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){S=B;break}c[y>>2]=0;S=0}}while(0);y=(S|0)==0;do{if((H|0)==0){E=66}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){if(!y){break}T=d|0;c[T>>2]=S;U=160;V=0;Lj(o);Lj(n);i=e;return}if((Fc[c[(c[H>>2]|0)+36>>2]&255](H)|0)==-1){c[f>>2]=0;E=66;break}if(!(y^(H|0)==0)){break}T=d|0;c[T>>2]=S;U=160;V=0;Lj(o);Lj(n);i=e;return}}while(0);do{if((E|0)==66){if(y){break}T=d|0;c[T>>2]=S;U=160;V=0;Lj(o);Lj(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;T=d|0;c[T>>2]=S;U=160;V=0;Lj(o);Lj(n);i=e;return}function Bl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Cl(a,0,j,k,f,g,h);i=b;return}function Cl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;mm(m,g,s,l);g=n;ys(g|0,0,12)|0;Nj(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Fc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}Nj(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}Nj(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if((Ol(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){Fc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=hr(F,c[o>>2]|0,h,t)|0;Co(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}if((Fc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}function Dl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];El(a,0,j,k,f,g,h);i=b;return}function El(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;mm(m,g,s,l);g=n;ys(g|0,0,12)|0;Nj(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Fc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}Nj(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}Nj(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if((Ol(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){Fc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=gr(F,c[o>>2]|0,h,t)|0;Co(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}if((Fc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;T=160;U=0;Lj(n);Lj(m);i=d;return}function Fl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Gl(a,0,j,k,f,g,h);i=b;return}function Gl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;mm(m,g,s,l);g=n;ys(g|0,0,12)|0;Nj(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Fc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;L=(C&255)>>>1}else{C=c[y>>2]|0;J=C;L=C}Nj(n,J<<1,0);if((a[g]&1)==0){M=10}else{M=(c[f>>2]&-2)-1|0}Nj(n,M,0);if((a[g]&1)==0){N=v}else{N=c[w>>2]|0}c[o>>2]=N+L;O=N}else{O=l}C=A+12|0;H=c[C>>2]|0;P=A+16|0;if((H|0)==(c[P>>2]|0)){Q=(Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{Q=a[H]|0}if((Ol(Q,t,O,o,r,z,m,k,q,s)|0)!=0){F=O;G=E;break}H=c[C>>2]|0;if((H|0)==(c[P>>2]|0)){Fc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=O;u=A;continue}else{c[C>>2]=H+1;l=O;u=A;continue}}u=a[m]|0;if((u&1)==0){R=(u&255)>>>1}else{R=c[m+4>>2]|0}do{if((R|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}O=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=O}}while(0);r=fr(F,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=K;Co(m,k,c[q>>2]|0,h);do{if((A|0)==0){S=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){S=A;break}if(!((Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){S=A;break}c[x>>2]=0;S=0}}while(0);x=(S|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}T=b|0;c[T>>2]=S;U=160;V=0;Lj(n);Lj(m);i=d;return}if((Fc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}T=b|0;c[T>>2]=S;U=160;V=0;Lj(n);Lj(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}T=b|0;c[T>>2]=S;U=160;V=0;Lj(n);Lj(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;T=b|0;c[T>>2]=S;U=160;V=0;Lj(n);Lj(m);i=d;return}function Hl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Il(a,0,j,k,f,g,h);i=b;return}function Il(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;nm(n,h,v,l,m);h=o;ys(h|0,0,12)|0;Nj(o,10,0);if((a[h]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((Fc[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[h]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Nj(o,M<<1,0);if((a[h]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Nj(o,O,0);if((a[h]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Fc[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((om(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Fc[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);g[k>>2]=+er(I,c[p>>2]|0,j);Co(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((Fc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}if((Fc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}function Jl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Kl(a,0,j,k,f,g,h);i=b;return}function Kl(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;nm(n,g,v,l,m);g=o;ys(g|0,0,12)|0;Nj(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((Fc[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[g]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Nj(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Nj(o,O,0);if((a[g]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Fc[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((om(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Fc[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);h[k>>3]=+dr(I,c[p>>2]|0,j);Co(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((Fc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}if((Fc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}function Ll(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Ml(a,0,j,k,f,g,h);i=b;return}function Ml(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;nm(n,g,v,l,m);g=o;ys(g|0,0,12)|0;Nj(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((Fc[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[g]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Nj(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Nj(o,O,0);if((a[g]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Fc[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((om(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Fc[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);h[k>>3]=+cr(I,c[p>>2]|0,j);Co(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((Fc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}if((Fc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(n);i=d;return}function Nl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+272|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+48|0;n=d+64|0;o=d+72|0;p=d+88|0;q=d+96|0;r=d+256|0;s=d+264|0;ys(m|0,0,12)|0;dk(n,g);g=n|0;n=c[g>>2]|0;if(!((c[7384]|0)==-1)){c[k>>2]=29536;c[k+4>>2]=16;c[k+8>>2]=0;Gj(29536,k,116)}k=(c[7385]|0)-1|0;t=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-t>>2>>>0>k>>>0){u=c[t+(k<<2)>>2]|0;if((u|0)==0){break}v=l|0;Dc[c[(c[u>>2]|0)+32>>2]&15](u,21944,21970,v)|0;mj(c[g>>2]|0)|0;u=o;ys(u|0,0,12)|0;Nj(o,10,0);if((a[u]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;A=e|0;B=f|0;C=o|0;D=o+4|0;E=x;F=c[A>>2]|0;a:while(1){do{if((F|0)==0){G=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){G=F;break}if(!((Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){G=F;break}c[A>>2]=0;G=0}}while(0);H=(G|0)==0;I=c[B>>2]|0;do{if((I|0)==0){J=25}else{if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(H){break}else{K=E;break a}}if((Fc[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1){c[B>>2]=0;J=25;break}else{if(H){break}else{K=E;break a}}}}while(0);if((J|0)==25){J=0;if(H){K=E;break}}I=a[u]|0;L=(I&1)==0;if(L){M=(I&255)>>>1}else{M=c[D>>2]|0}if(((c[p>>2]|0)-E|0)==(M|0)){if(L){N=(I&255)>>>1;O=(I&255)>>>1}else{I=c[D>>2]|0;N=I;O=I}Nj(o,N<<1,0);if((a[u]&1)==0){P=10}else{P=(c[C>>2]&-2)-1|0}Nj(o,P,0);if((a[u]&1)==0){Q=y}else{Q=c[z>>2]|0}c[p>>2]=Q+O;R=Q}else{R=E}I=G+12|0;L=c[I>>2]|0;S=G+16|0;if((L|0)==(c[S>>2]|0)){T=(Fc[c[(c[G>>2]|0)+36>>2]&255](G)|0)&255}else{T=a[L]|0}if((Ol(T,16,R,p,s,0,m,w,r,v)|0)!=0){K=R;break}L=c[I>>2]|0;if((L|0)==(c[S>>2]|0)){Fc[c[(c[G>>2]|0)+40>>2]&255](G)|0;E=R;F=G;continue}else{c[I>>2]=L+1;E=R;F=G;continue}}a[K+3|0]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);F=Pl(K,c[6998]|0,7792,(E=i,i=i+8|0,c[E>>2]=j,E)|0)|0;i=E;if((F|0)!=1){c[h>>2]=4}F=c[A>>2]|0;do{if((F|0)==0){U=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){U=F;break}if(!((Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){U=F;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;F=c[B>>2]|0;do{if((F|0)==0){J=73}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(m);i=d;return}if((Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[B>>2]=0;J=73;break}if(!(A^(F|0)==0)){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(m);i=d;return}}while(0);do{if((J|0)==73){if(A){break}V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;V=b|0;c[V>>2]=U;W=160;X=0;Lj(o);Lj(m);i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function Ol(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;m=c[f>>2]|0;n=(m|0)==(e|0);do{if(n){o=(a[l+24|0]|0)==b<<24>>24;if(!o){if(!((a[l+25|0]|0)==b<<24>>24)){break}}c[f>>2]=e+1;a[e]=o?43:45;c[g>>2]=0;p=0;return p|0}}while(0);o=a[i]|0;if((o&1)==0){q=(o&255)>>>1}else{q=c[i+4>>2]|0}if((q|0)!=0&b<<24>>24==h<<24>>24){h=c[k>>2]|0;if((h-j|0)>=160){p=0;return p|0}j=c[g>>2]|0;c[k>>2]=h+4;c[h>>2]=j;c[g>>2]=0;p=0;return p|0}j=l+26|0;h=l;while(1){k=h+1|0;if((a[h]|0)==b<<24>>24){r=h;break}if((k|0)==(j|0)){r=j;break}else{h=k}}h=r-l|0;if((h|0)>23){p=-1;return p|0}do{if((d|0)==8|(d|0)==10){if((h|0)<(d|0)){break}else{p=-1}return p|0}else if((d|0)==16){if((h|0)<22){break}if(n){p=-1;return p|0}if((m-e|0)>=3){p=-1;return p|0}if((a[m-1|0]|0)!=48){p=-1;return p|0}c[g>>2]=0;l=a[21944+h|0]|0;c[f>>2]=m+1;a[m]=l;p=0;return p|0}}while(0);e=a[21944+h|0]|0;c[f>>2]=m+1;a[m]=e;c[g>>2]=(c[g>>2]|0)+1;p=0;return p|0}function Pl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=_b(b|0)|0;b=ab(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}_b(h|0)|0;i=f;return b|0}function Ql(a){a=a|0;kj(a|0);is(a);return}function Rl(a){a=a|0;kj(a|0);return}function Sl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];zc[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==1){a[j]=1}else if((w|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}dk(r,g);q=r|0;r=c[q>>2]|0;if(!((c[7382]|0)==-1)){c[m>>2]=29528;c[m+4>>2]=16;c[m+8>>2]=0;Gj(29528,m,116)}m=(c[7383]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;mj(c[q>>2]|0)|0;dk(s,g);n=s|0;p=c[n>>2]|0;if(!((c[7286]|0)==-1)){c[l>>2]=29144;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29144,l,116)}d=(c[7287]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;mj(c[n>>2]|0)|0;z=t|0;A=x;Bc[c[(c[A>>2]|0)+24>>2]&127](z,y);Bc[c[(c[A>>2]|0)+28>>2]&127](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(Tl(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];Wj(t+12|0);Wj(t|0);i=k;return}}while(0);o=mc(4)|0;Gr(o);Db(o|0,20328,156)}}while(0);k=mc(4)|0;Gr(k);Db(k|0,20328,156)}function Tl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;k=i;i=i+104|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=(f-e|0)/12|0;m=k|0;do{if(l>>>0>100>>>0){n=$r(l)|0;if((n|0)!=0){o=n;p=n;break}ns();o=0;p=0}else{o=m;p=0}}while(0);m=(e|0)==(f|0);if(m){q=l;r=0}else{n=l;l=0;s=o;t=e;while(1){u=a[t]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[t+4>>2]|0}if((v|0)==0){a[s]=2;w=l+1|0;x=n-1|0}else{a[s]=1;w=l;x=n}u=t+12|0;if((u|0)==(f|0)){q=x;r=w;break}else{n=x;l=w;s=s+1|0;t=u}}}t=b|0;b=d|0;d=g;s=0;w=r;r=q;a:while(1){q=c[t>>2]|0;do{if((q|0)==0){y=1}else{l=c[q+12>>2]|0;if((l|0)==(c[q+16>>2]|0)){z=Fc[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{z=c[l>>2]|0}if((z|0)==-1){c[t>>2]=0;y=1;break}else{y=(c[t>>2]|0)==0;break}}}while(0);q=c[b>>2]|0;do{if((q|0)==0){A=1;B=0}else{l=c[q+12>>2]|0;if((l|0)==(c[q+16>>2]|0)){C=Fc[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{C=c[l>>2]|0}if(!((C|0)==-1)){A=0;B=q;break}c[b>>2]=0;A=1;B=0}}while(0);D=c[t>>2]|0;if(!((y^A)&(r|0)!=0)){break}q=c[D+12>>2]|0;if((q|0)==(c[D+16>>2]|0)){E=Fc[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{E=c[q>>2]|0}if(j){F=E}else{F=Oc[c[(c[d>>2]|0)+28>>2]&31](g,E)|0}q=s+1|0;if(m){s=q;w=w;r=r;continue}b:do{if(j){l=r;x=w;n=o;v=0;u=e;while(1){do{if((a[n]|0)==1){G=a[u]|0;H=(G&1)==0;if(H){I=u+4|0}else{I=c[u+8>>2]|0}if((F|0)!=(c[I+(s<<2)>>2]|0)){a[n]=0;J=v;K=x;L=l-1|0;break}if(H){M=(G&255)>>>1}else{M=c[u+4>>2]|0}if((M|0)!=(q|0)){J=1;K=x;L=l;break}a[n]=2;J=1;K=x+1|0;L=l-1|0}else{J=v;K=x;L=l}}while(0);G=u+12|0;if((G|0)==(f|0)){N=L;O=K;P=J;break b}l=L;x=K;n=n+1|0;v=J;u=G}}else{u=r;v=w;n=o;x=0;l=e;while(1){do{if((a[n]|0)==1){G=l;if((a[G]&1)==0){Q=l+4|0}else{Q=c[l+8>>2]|0}if((F|0)!=(Oc[c[(c[d>>2]|0)+28>>2]&31](g,c[Q+(s<<2)>>2]|0)|0)){a[n]=0;R=x;S=v;T=u-1|0;break}H=a[G]|0;if((H&1)==0){U=(H&255)>>>1}else{U=c[l+4>>2]|0}if((U|0)!=(q|0)){R=1;S=v;T=u;break}a[n]=2;R=1;S=v+1|0;T=u-1|0}else{R=x;S=v;T=u}}while(0);H=l+12|0;if((H|0)==(f|0)){N=T;O=S;P=R;break b}u=T;v=S;n=n+1|0;x=R;l=H}}}while(0);if(!P){s=q;w=O;r=N;continue}l=c[t>>2]|0;x=l+12|0;n=c[x>>2]|0;if((n|0)==(c[l+16>>2]|0)){Fc[c[(c[l>>2]|0)+40>>2]&255](l)|0}else{c[x>>2]=n+4}if((N+O|0)>>>0<2>>>0){s=q;w=O;r=N;continue}else{V=O;W=o;X=e}while(1){do{if((a[W]|0)==2){n=a[X]|0;if((n&1)==0){Y=(n&255)>>>1}else{Y=c[X+4>>2]|0}if((Y|0)==(q|0)){Z=V;break}a[W]=0;Z=V-1|0}else{Z=V}}while(0);n=X+12|0;if((n|0)==(f|0)){s=q;w=Z;r=N;continue a}else{V=Z;W=W+1|0;X=n}}}do{if((D|0)==0){_=1}else{X=c[D+12>>2]|0;if((X|0)==(c[D+16>>2]|0)){$=Fc[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{$=c[X>>2]|0}if(($|0)==-1){c[t>>2]=0;_=1;break}else{_=(c[t>>2]|0)==0;break}}}while(0);do{if((B|0)==0){aa=94}else{t=c[B+12>>2]|0;if((t|0)==(c[B+16>>2]|0)){ba=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{ba=c[t>>2]|0}if((ba|0)==-1){c[b>>2]=0;aa=94;break}else{if(_){break}else{aa=96;break}}}}while(0);if((aa|0)==94){if(_){aa=96}}if((aa|0)==96){c[h>>2]=c[h>>2]|2}c:do{if(m){aa=101}else{if((a[o]|0)==2){ca=e;break}else{da=e;ea=o}while(1){_=da+12|0;b=ea+1|0;if((_|0)==(f|0)){aa=101;break c}if((a[b]|0)==2){ca=_;break}else{da=_;ea=b}}}}while(0);if((aa|0)==101){c[h>>2]=c[h>>2]|4;ca=f}if((p|0)==0){fa=100;ga=0;i=k;return ca|0}as(p);fa=100;ga=0;i=k;return ca|0}function Ul(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Vl(a,0,j,k,f,g,h);i=b;return}function Vl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;pm(m,g,s,l);g=n;ys(g|0,0,12)|0;Nj(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Fc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}Nj(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Nj(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((lm(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){Fc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=kr(I,c[o>>2]|0,h,t)|0;Co(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=Fc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;Y=160;Z=0;Lj(n);Lj(m);_=104;$=0;i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;Y=160;Z=0;Lj(n);Lj(m);_=104;$=0;i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;Y=160;Z=0;Lj(n);Lj(m);_=104;$=0;i=d;return}function Wl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Xl(a,0,j,k,f,g,h);i=b;return}function Xl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==8){t=16}else if((s|0)==64){t=8}else{t=10}s=k|0;pm(m,g,s,l);g=n;ys(g|0,0,12)|0;Nj(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Fc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){L=(C&255)>>>1}else{L=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(L|0)){if(F){M=(C&255)>>>1;N=(C&255)>>>1}else{C=c[y>>2]|0;M=C;N=C}Nj(n,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Nj(n,O,0);if((a[g]&1)==0){P=v}else{P=c[w>>2]|0}c[o>>2]=P+N;Q=P}else{Q=l}C=B+12|0;F=c[C>>2]|0;R=B+16|0;if((F|0)==(c[R>>2]|0)){S=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{S=c[F>>2]|0}if((lm(S,t,Q,o,r,z,m,k,q,s)|0)!=0){I=Q;J=H;break}F=c[C>>2]|0;if((F|0)==(c[R>>2]|0)){Fc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=Q;u=B;continue}else{c[C>>2]=F+4;l=Q;u=B;continue}}u=a[m]|0;if((u&1)==0){T=(u&255)>>>1}else{T=c[m+4>>2]|0}do{if((T|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}Q=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=Q}}while(0);r=jr(I,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=K;Co(m,k,c[q>>2]|0,h);do{if((B|0)==0){U=1;V=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){W=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[q>>2]|0}if(!((W|0)==-1)){U=0;V=B;break}c[x>>2]=0;U=1;V=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){X=Fc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{X=c[x>>2]|0}if((X|0)==-1){c[e>>2]=0;E=67;break}if(!U){break}Y=b|0;c[Y>>2]=V;Z=160;_=0;Lj(n);Lj(m);$=104;aa=0;i=d;return}}while(0);do{if((E|0)==67){if(U){break}Y=b|0;c[Y>>2]=V;Z=160;_=0;Lj(n);Lj(m);$=104;aa=0;i=d;return}}while(0);c[h>>2]=c[h>>2]|2;Y=b|0;c[Y>>2]=V;Z=160;_=0;Lj(n);Lj(m);$=104;aa=0;i=d;return}function Yl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Zl(a,0,j,k,f,g,h);i=b;return}function Zl(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;e=i;i=i+328|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+152|0;r=e+312|0;s=e+320|0;t=c[h+4>>2]&74;if((t|0)==8){u=16}else if((t|0)==64){u=8}else if((t|0)==0){u=0}else{u=10}t=l|0;pm(n,h,t,m);h=o;ys(h|0,0,12)|0;Nj(o,10,0);if((a[h]&1)==0){l=o+1|0;v=l;w=l;x=o+8|0}else{l=o+8|0;v=c[l>>2]|0;w=o+1|0;x=l}c[p>>2]=v;l=q|0;c[r>>2]=l;c[s>>2]=0;y=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=v;v=c[y>>2]|0;a:while(1){do{if((v|0)==0){B=1;C=0}else{D=c[v+12>>2]|0;if((D|0)==(c[v+16>>2]|0)){E=Fc[c[(c[v>>2]|0)+36>>2]&255](v)|0}else{E=c[D>>2]|0}if(!((E|0)==-1)){B=0;C=v;break}c[y>>2]=0;B=1;C=0}}while(0);D=c[f>>2]|0;do{if((D|0)==0){F=22}else{G=c[D+12>>2]|0;if((G|0)==(c[D+16>>2]|0)){H=Fc[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=22;break}else{if(B){I=D;break}else{J=m;K=D;break a}}}}while(0);if((F|0)==22){F=0;if(B){J=m;K=0;break}else{I=0}}D=a[h]|0;G=(D&1)==0;if(G){L=(D&255)>>>1}else{L=c[z>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(G){M=(D&255)>>>1;N=(D&255)>>>1}else{D=c[z>>2]|0;M=D;N=D}Nj(o,M<<1,0);if((a[h]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}Nj(o,O,0);if((a[h]&1)==0){P=w}else{P=c[x>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}D=C+12|0;G=c[D>>2]|0;R=C+16|0;if((G|0)==(c[R>>2]|0)){S=Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{S=c[G>>2]|0}if((lm(S,u,Q,p,s,A,n,l,r,t)|0)!=0){J=Q;K=I;break}G=c[D>>2]|0;if((G|0)==(c[R>>2]|0)){Fc[c[(c[C>>2]|0)+40>>2]&255](C)|0;m=Q;v=C;continue}else{c[D>>2]=G+4;m=Q;v=C;continue}}v=a[n]|0;if((v&1)==0){T=(v&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){v=c[r>>2]|0;if((v-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=v+4;c[v>>2]=Q}}while(0);b[k>>1]=ir(J,c[p>>2]|0,j,u)|0;Co(n,l,c[r>>2]|0,j);do{if((C|0)==0){U=1;V=0}else{r=c[C+12>>2]|0;if((r|0)==(c[C+16>>2]|0)){W=Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{W=c[r>>2]|0}if(!((W|0)==-1)){U=0;V=C;break}c[y>>2]=0;U=1;V=0}}while(0);do{if((K|0)==0){F=67}else{y=c[K+12>>2]|0;if((y|0)==(c[K+16>>2]|0)){X=Fc[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{X=c[y>>2]|0}if((X|0)==-1){c[f>>2]=0;F=67;break}if(!U){break}Y=d|0;c[Y>>2]=V;Z=160;_=0;Lj(o);Lj(n);$=104;aa=0;i=e;return}}while(0);do{if((F|0)==67){if(U){break}Y=d|0;c[Y>>2]=V;Z=160;_=0;Lj(o);Lj(n);$=104;aa=0;i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=d|0;c[Y>>2]=V;Z=160;_=0;Lj(o);Lj(n);$=104;aa=0;i=e;return}function _l(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];$l(a,0,j,k,f,g,h);i=b;return}function $l(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==8){t=16}else if((s|0)==64){t=8}else{t=10}s=k|0;pm(m,g,s,l);g=n;ys(g|0,0,12)|0;Nj(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Fc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}Nj(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Nj(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((lm(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){Fc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=hr(I,c[o>>2]|0,h,t)|0;Co(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=Fc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;Y=160;Z=0;Lj(n);Lj(m);_=104;$=0;i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;Y=160;Z=0;Lj(n);Lj(m);_=104;$=0;i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;Y=160;Z=0;Lj(n);Lj(m);_=104;$=0;i=d;return}function am(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];bm(a,0,j,k,f,g,h);i=b;return}function bm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;pm(m,g,s,l);g=n;ys(g|0,0,12)|0;Nj(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Fc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}Nj(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Nj(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((lm(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){Fc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=gr(I,c[o>>2]|0,h,t)|0;Co(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=Fc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;Y=160;Z=0;Lj(n);Lj(m);_=104;$=0;i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;Y=160;Z=0;Lj(n);Lj(m);_=104;$=0;i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;Y=160;Z=0;Lj(n);Lj(m);_=104;$=0;i=d;return}function cm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];dm(a,0,j,k,f,g,h);i=b;return}



function Go(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0;p=i;i=i+416|0;q=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[q>>2];q=p|0;r=p+8|0;s=p+408|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;c[q>>2]=o;o=r|0;c[s>>2]=0;C=v;ys(C|0,0,12)|0;D=w;ys(D|0,0,12)|0;E=x;ys(E|0,0,12)|0;F=y;ys(F|0,0,12)|0;G=z;ys(G|0,0,12)|0;Jo(f,g,s,t,u,v,w,x,y,A);g=m|0;c[n>>2]=c[g>>2];f=b|0;b=e|0;e=s;s=l;H=y+4|0;I=y+8|0;J=x+4|0;K=x+8|0;L=(h&512|0)!=0;h=w+4|0;M=w+8|0;N=z+4|0;O=z+8|0;P=e+3|0;Q=v+4|0;R=192;S=o;T=o;o=r+400|0;r=0;U=0;a:while(1){V=c[f>>2]|0;do{if((V|0)==0){W=1}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){Y=Fc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Y=c[X>>2]|0}if((Y|0)==-1){c[f>>2]=0;W=1;break}else{W=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=16}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){_=Fc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{_=c[X>>2]|0}if((_|0)==-1){c[b>>2]=0;Z=16;break}else{if(W){$=V;break}else{aa=R;ba=S;ca=T;da=U;Z=302;break a}}}}while(0);if((Z|0)==16){Z=0;if(W){aa=R;ba=S;ca=T;da=U;Z=302;break}else{$=0}}b:do{switch(a[e+r|0]|0){case 0:{Z=42;break};case 3:{V=a[E]|0;X=(V&1)==0;if(X){ea=(V&255)>>>1}else{ea=c[J>>2]|0}fa=a[F]|0;ga=(fa&1)==0;if(ga){ha=(fa&255)>>>1}else{ha=c[H>>2]|0}if((ea|0)==(-ha|0)){ia=U;ja=o;ka=T;la=S;ma=R;break b}if(X){na=(V&255)>>>1}else{na=c[J>>2]|0}do{if((na|0)!=0){if(ga){oa=(fa&255)>>>1}else{oa=c[H>>2]|0}if((oa|0)==0){break}pa=c[f>>2]|0;qa=c[pa+12>>2]|0;if((qa|0)==(c[pa+16>>2]|0)){ra=Fc[c[(c[pa>>2]|0)+36>>2]&255](pa)|0;sa=ra;ta=a[E]|0}else{sa=c[qa>>2]|0;ta=V}qa=c[f>>2]|0;ra=qa+12|0;pa=c[ra>>2]|0;ua=(pa|0)==(c[qa+16>>2]|0);if((sa|0)==(c[((ta&1)==0?J:c[K>>2]|0)>>2]|0)){if(ua){Fc[c[(c[qa>>2]|0)+40>>2]&255](qa)|0}else{c[ra>>2]=pa+4}ra=a[E]|0;if((ra&1)==0){va=(ra&255)>>>1}else{va=c[J>>2]|0}ia=va>>>0>1>>>0?x:U;ja=o;ka=T;la=S;ma=R;break b}if(ua){wa=Fc[c[(c[qa>>2]|0)+36>>2]&255](qa)|0}else{wa=c[pa>>2]|0}if((wa|0)!=(c[((a[F]&1)==0?H:c[I>>2]|0)>>2]|0)){Z=134;break a}pa=c[f>>2]|0;qa=pa+12|0;ua=c[qa>>2]|0;if((ua|0)==(c[pa+16>>2]|0)){Fc[c[(c[pa>>2]|0)+40>>2]&255](pa)|0}else{c[qa>>2]=ua+4}a[k]=1;ua=a[F]|0;if((ua&1)==0){xa=(ua&255)>>>1}else{xa=c[H>>2]|0}ia=xa>>>0>1>>>0?y:U;ja=o;ka=T;la=S;ma=R;break b}}while(0);if(X){ya=(V&255)>>>1}else{ya=c[J>>2]|0}ga=c[f>>2]|0;ua=c[ga+12>>2]|0;qa=(ua|0)==(c[ga+16>>2]|0);if((ya|0)==0){if(qa){pa=Fc[c[(c[ga>>2]|0)+36>>2]&255](ga)|0;za=pa;Aa=a[F]|0}else{za=c[ua>>2]|0;Aa=fa}if((za|0)!=(c[((Aa&1)==0?H:c[I>>2]|0)>>2]|0)){ia=U;ja=o;ka=T;la=S;ma=R;break b}pa=c[f>>2]|0;ra=pa+12|0;Ba=c[ra>>2]|0;if((Ba|0)==(c[pa+16>>2]|0)){Fc[c[(c[pa>>2]|0)+40>>2]&255](pa)|0}else{c[ra>>2]=Ba+4}a[k]=1;Ba=a[F]|0;if((Ba&1)==0){Ca=(Ba&255)>>>1}else{Ca=c[H>>2]|0}ia=Ca>>>0>1>>>0?y:U;ja=o;ka=T;la=S;ma=R;break b}if(qa){qa=Fc[c[(c[ga>>2]|0)+36>>2]&255](ga)|0;Da=qa;Ea=a[E]|0}else{Da=c[ua>>2]|0;Ea=V}if((Da|0)!=(c[((Ea&1)==0?J:c[K>>2]|0)>>2]|0)){a[k]=1;ia=U;ja=o;ka=T;la=S;ma=R;break b}ua=c[f>>2]|0;qa=ua+12|0;ga=c[qa>>2]|0;if((ga|0)==(c[ua+16>>2]|0)){Fc[c[(c[ua>>2]|0)+40>>2]&255](ua)|0}else{c[qa>>2]=ga+4}ga=a[E]|0;if((ga&1)==0){Fa=(ga&255)>>>1}else{Fa=c[J>>2]|0}ia=Fa>>>0>1>>>0?x:U;ja=o;ka=T;la=S;ma=R;break};case 1:{if((r|0)==3){aa=R;ba=S;ca=T;da=U;Z=302;break a}ga=c[f>>2]|0;qa=c[ga+12>>2]|0;if((qa|0)==(c[ga+16>>2]|0)){Ga=Fc[c[(c[ga>>2]|0)+36>>2]&255](ga)|0}else{Ga=c[qa>>2]|0}if(!(Gc[c[(c[s>>2]|0)+12>>2]&63](l,8192,Ga)|0)){Z=41;break a}qa=c[f>>2]|0;ga=qa+12|0;ua=c[ga>>2]|0;if((ua|0)==(c[qa+16>>2]|0)){Ha=Fc[c[(c[qa>>2]|0)+40>>2]&255](qa)|0}else{c[ga>>2]=ua+4;Ha=c[ua>>2]|0}_j(z,Ha);Z=42;break};case 2:{if(!((U|0)!=0|r>>>0<2>>>0)){if((r|0)==2){Ia=(a[P]|0)!=0}else{Ia=0}if(!(L|Ia)){ia=0;ja=o;ka=T;la=S;ma=R;break b}}ua=a[D]|0;ga=(ua&1)==0?h:c[M>>2]|0;c:do{if((r|0)==0){Ja=ga;Ka=ua;La=$;Ma=$}else{if((d[e+(r-1)|0]|0)>>>0<2>>>0){Na=ga;Oa=ua}else{Ja=ga;Ka=ua;La=$;Ma=$;break}while(1){if((Oa&1)==0){Pa=(Oa&255)>>>1;Qa=h}else{Pa=c[h>>2]|0;Qa=c[M>>2]|0}if((Na|0)==(Qa+(Pa<<2)|0)){Ra=Oa;break}if(!(Gc[c[(c[s>>2]|0)+12>>2]&63](l,8192,c[Na>>2]|0)|0)){Z=148;break}Na=Na+4|0;Oa=a[D]|0}if((Z|0)==148){Z=0;Ra=a[D]|0}qa=(Ra&1)==0;Ba=Na-(qa?h:c[M>>2]|0)>>2;ra=a[G]|0;pa=(ra&1)==0;if(pa){Sa=(ra&255)>>>1}else{Sa=c[N>>2]|0}d:do{if(!(Ba>>>0>Sa>>>0)){if(pa){Ta=(ra&255)>>>1;Ua=N;Va=N+(((ra&255)>>>1)-Ba<<2)|0}else{Wa=c[O>>2]|0;Xa=c[N>>2]|0;Ta=Xa;Ua=Wa;Va=Wa+(Xa-Ba<<2)|0}Xa=Ua+(Ta<<2)|0;if((Va|0)==(Xa|0)){Ja=Na;Ka=Ra;La=$;Ma=$;break c}else{Ya=Va;Za=qa?h:c[M>>2]|0}while(1){if((c[Ya>>2]|0)!=(c[Za>>2]|0)){break d}Wa=Ya+4|0;if((Wa|0)==(Xa|0)){Ja=Na;Ka=Ra;La=$;Ma=$;break c}Ya=Wa;Za=Za+4|0}}}while(0);Ja=qa?h:c[M>>2]|0;Ka=Ra;La=$;Ma=$}}while(0);e:while(1){if((Ka&1)==0){_a=(Ka&255)>>>1;$a=h}else{_a=c[h>>2]|0;$a=c[M>>2]|0}if((Ja|0)==($a+(_a<<2)|0)){break}ua=c[f>>2]|0;do{if((ua|0)==0){ab=1}else{ga=c[ua+12>>2]|0;if((ga|0)==(c[ua+16>>2]|0)){bb=Fc[c[(c[ua>>2]|0)+36>>2]&255](ua)|0}else{bb=c[ga>>2]|0}if((bb|0)==-1){c[f>>2]=0;ab=1;break}else{ab=(c[f>>2]|0)==0;break}}}while(0);do{if((La|0)==0){cb=Ma;Z=178}else{ua=c[La+12>>2]|0;if((ua|0)==(c[La+16>>2]|0)){db=Fc[c[(c[La>>2]|0)+36>>2]&255](La)|0}else{db=c[ua>>2]|0}if((db|0)==-1){c[b>>2]=0;cb=0;Z=178;break}else{if(ab^(Ma|0)==0){eb=Ma;fb=Ma;break}else{break e}}}}while(0);if((Z|0)==178){Z=0;if(ab){break}else{eb=0;fb=cb}}ua=c[f>>2]|0;qa=c[ua+12>>2]|0;if((qa|0)==(c[ua+16>>2]|0)){gb=Fc[c[(c[ua>>2]|0)+36>>2]&255](ua)|0}else{gb=c[qa>>2]|0}if((gb|0)!=(c[Ja>>2]|0)){break}qa=c[f>>2]|0;ua=qa+12|0;ga=c[ua>>2]|0;if((ga|0)==(c[qa+16>>2]|0)){Fc[c[(c[qa>>2]|0)+40>>2]&255](qa)|0}else{c[ua>>2]=ga+4}Ja=Ja+4|0;Ka=a[D]|0;La=eb;Ma=fb}if(!L){ia=U;ja=o;ka=T;la=S;ma=R;break b}ga=a[D]|0;if((ga&1)==0){hb=(ga&255)>>>1;ib=h}else{hb=c[h>>2]|0;ib=c[M>>2]|0}if((Ja|0)==(ib+(hb<<2)|0)){ia=U;ja=o;ka=T;la=S;ma=R}else{Z=193;break a}break};case 4:{ga=0;ua=o;qa=T;V=S;fa=R;f:while(1){X=c[f>>2]|0;do{if((X|0)==0){jb=1}else{Ba=c[X+12>>2]|0;if((Ba|0)==(c[X+16>>2]|0)){kb=Fc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{kb=c[Ba>>2]|0}if((kb|0)==-1){c[f>>2]=0;jb=1;break}else{jb=(c[f>>2]|0)==0;break}}}while(0);X=c[b>>2]|0;do{if((X|0)==0){Z=207}else{Ba=c[X+12>>2]|0;if((Ba|0)==(c[X+16>>2]|0)){lb=Fc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{lb=c[Ba>>2]|0}if((lb|0)==-1){c[b>>2]=0;Z=207;break}else{if(jb){break}else{break f}}}}while(0);if((Z|0)==207){Z=0;if(jb){break}}X=c[f>>2]|0;Ba=c[X+12>>2]|0;if((Ba|0)==(c[X+16>>2]|0)){mb=Fc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{mb=c[Ba>>2]|0}if(Gc[c[(c[s>>2]|0)+12>>2]&63](l,2048,mb)|0){Ba=c[n>>2]|0;if((Ba|0)==(c[q>>2]|0)){Ko(m,n,q);nb=c[n>>2]|0}else{nb=Ba}c[n>>2]=nb+4;c[nb>>2]=mb;ob=ga+1|0;pb=ua;qb=qa;rb=V;sb=fa}else{Ba=a[C]|0;if((Ba&1)==0){tb=(Ba&255)>>>1}else{tb=c[Q>>2]|0}if((tb|0)==0|(ga|0)==0){break}if((mb|0)!=(c[u>>2]|0)){break}if((qa|0)==(ua|0)){Ba=(fa|0)!=192;X=qa-V|0;ra=X>>>0<2147483647>>>0?X<<1:-1;if(Ba){ub=V}else{ub=0}Ba=bs(ub,ra)|0;pa=Ba;if((Ba|0)==0){ns()}vb=pa+(ra>>>2<<2)|0;wb=pa+(X>>2<<2)|0;xb=pa;yb=90}else{vb=ua;wb=qa;xb=V;yb=fa}c[wb>>2]=ga;ob=0;pb=vb;qb=wb+4|0;rb=xb;sb=yb}pa=c[f>>2]|0;X=pa+12|0;ra=c[X>>2]|0;if((ra|0)==(c[pa+16>>2]|0)){Fc[c[(c[pa>>2]|0)+40>>2]&255](pa)|0;ga=ob;ua=pb;qa=qb;V=rb;fa=sb;continue}else{c[X>>2]=ra+4;ga=ob;ua=pb;qa=qb;V=rb;fa=sb;continue}}if((V|0)==(qa|0)|(ga|0)==0){zb=ua;Ab=qa;Bb=V;Cb=fa}else{if((qa|0)==(ua|0)){ra=(fa|0)!=192;X=qa-V|0;pa=X>>>0<2147483647>>>0?X<<1:-1;if(ra){Db=V}else{Db=0}ra=bs(Db,pa)|0;Ba=ra;if((ra|0)==0){ns()}Eb=Ba+(pa>>>2<<2)|0;Fb=Ba+(X>>2<<2)|0;Gb=Ba;Hb=90}else{Eb=ua;Fb=qa;Gb=V;Hb=fa}c[Fb>>2]=ga;zb=Eb;Ab=Fb+4|0;Bb=Gb;Cb=Hb}Ba=c[A>>2]|0;if((Ba|0)>0){X=c[f>>2]|0;do{if((X|0)==0){Ib=1}else{pa=c[X+12>>2]|0;if((pa|0)==(c[X+16>>2]|0)){Jb=Fc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Jb=c[pa>>2]|0}if((Jb|0)==-1){c[f>>2]=0;Ib=1;break}else{Ib=(c[f>>2]|0)==0;break}}}while(0);X=c[b>>2]|0;do{if((X|0)==0){Z=259}else{ga=c[X+12>>2]|0;if((ga|0)==(c[X+16>>2]|0)){Kb=Fc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Kb=c[ga>>2]|0}if((Kb|0)==-1){c[b>>2]=0;Z=259;break}else{if(Ib){Lb=X;break}else{Z=265;break a}}}}while(0);if((Z|0)==259){Z=0;if(Ib){Z=265;break a}else{Lb=0}}X=c[f>>2]|0;ga=c[X+12>>2]|0;if((ga|0)==(c[X+16>>2]|0)){Mb=Fc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Mb=c[ga>>2]|0}if((Mb|0)!=(c[t>>2]|0)){Z=265;break a}ga=c[f>>2]|0;X=ga+12|0;fa=c[X>>2]|0;if((fa|0)==(c[ga+16>>2]|0)){Fc[c[(c[ga>>2]|0)+40>>2]&255](ga)|0;Nb=Lb;Ob=Ba;Pb=Lb}else{c[X>>2]=fa+4;Nb=Lb;Ob=Ba;Pb=Lb}while(1){fa=c[f>>2]|0;do{if((fa|0)==0){Qb=1}else{X=c[fa+12>>2]|0;if((X|0)==(c[fa+16>>2]|0)){Rb=Fc[c[(c[fa>>2]|0)+36>>2]&255](fa)|0}else{Rb=c[X>>2]|0}if((Rb|0)==-1){c[f>>2]=0;Qb=1;break}else{Qb=(c[f>>2]|0)==0;break}}}while(0);do{if((Nb|0)==0){Sb=Pb;Z=282}else{fa=c[Nb+12>>2]|0;if((fa|0)==(c[Nb+16>>2]|0)){Tb=Fc[c[(c[Nb>>2]|0)+36>>2]&255](Nb)|0}else{Tb=c[fa>>2]|0}if((Tb|0)==-1){c[b>>2]=0;Sb=0;Z=282;break}else{if(Qb^(Pb|0)==0){Ub=Pb;Vb=Pb;break}else{Z=289;break a}}}}while(0);if((Z|0)==282){Z=0;if(Qb){Z=289;break a}else{Ub=Sb;Vb=0}}fa=c[f>>2]|0;X=c[fa+12>>2]|0;if((X|0)==(c[fa+16>>2]|0)){Wb=Fc[c[(c[fa>>2]|0)+36>>2]&255](fa)|0}else{Wb=c[X>>2]|0}if(!(Gc[c[(c[s>>2]|0)+12>>2]&63](l,2048,Wb)|0)){Z=289;break a}if((c[n>>2]|0)==(c[q>>2]|0)){Ko(m,n,q)}X=c[f>>2]|0;fa=c[X+12>>2]|0;if((fa|0)==(c[X+16>>2]|0)){Xb=Fc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Xb=c[fa>>2]|0}fa=c[n>>2]|0;c[n>>2]=fa+4;c[fa>>2]=Xb;fa=Ob-1|0;c[A>>2]=fa;X=c[f>>2]|0;ga=X+12|0;V=c[ga>>2]|0;if((V|0)==(c[X+16>>2]|0)){Fc[c[(c[X>>2]|0)+40>>2]&255](X)|0}else{c[ga>>2]=V+4}if((fa|0)>0){Nb=Vb;Ob=fa;Pb=Ub}else{break}}}if((c[n>>2]|0)==(c[g>>2]|0)){Z=300;break a}else{ia=U;ja=zb;ka=Ab;la=Bb;ma=Cb}break};default:{ia=U;ja=o;ka=T;la=S;ma=R}}}while(0);g:do{if((Z|0)==42){Z=0;if((r|0)==3){aa=R;ba=S;ca=T;da=U;Z=302;break a}else{Yb=$;Zb=$}while(1){Ba=c[f>>2]|0;do{if((Ba|0)==0){_b=1}else{fa=c[Ba+12>>2]|0;if((fa|0)==(c[Ba+16>>2]|0)){$b=Fc[c[(c[Ba>>2]|0)+36>>2]&255](Ba)|0}else{$b=c[fa>>2]|0}if(($b|0)==-1){c[f>>2]=0;_b=1;break}else{_b=(c[f>>2]|0)==0;break}}}while(0);do{if((Yb|0)==0){ac=Zb;Z=56}else{Ba=c[Yb+12>>2]|0;if((Ba|0)==(c[Yb+16>>2]|0)){bc=Fc[c[(c[Yb>>2]|0)+36>>2]&255](Yb)|0}else{bc=c[Ba>>2]|0}if((bc|0)==-1){c[b>>2]=0;ac=0;Z=56;break}else{if(_b^(Zb|0)==0){cc=Zb;dc=Zb;break}else{ia=U;ja=o;ka=T;la=S;ma=R;break g}}}}while(0);if((Z|0)==56){Z=0;if(_b){ia=U;ja=o;ka=T;la=S;ma=R;break g}else{cc=0;dc=ac}}Ba=c[f>>2]|0;fa=c[Ba+12>>2]|0;if((fa|0)==(c[Ba+16>>2]|0)){ec=Fc[c[(c[Ba>>2]|0)+36>>2]&255](Ba)|0}else{ec=c[fa>>2]|0}if(!(Gc[c[(c[s>>2]|0)+12>>2]&63](l,8192,ec)|0)){ia=U;ja=o;ka=T;la=S;ma=R;break g}fa=c[f>>2]|0;Ba=fa+12|0;V=c[Ba>>2]|0;if((V|0)==(c[fa+16>>2]|0)){fc=Fc[c[(c[fa>>2]|0)+40>>2]&255](fa)|0}else{c[Ba>>2]=V+4;fc=c[V>>2]|0}_j(z,fc);Yb=cc;Zb=dc}}}while(0);V=r+1|0;if(V>>>0<4>>>0){R=ma;S=la;T=ka;o=ja;r=V;U=ia}else{aa=ma;ba=la;ca=ka;da=ia;Z=302;break}}h:do{if((Z|0)==41){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==134){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==193){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==265){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==289){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==300){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==302){i:do{if((da|0)!=0){ia=da;ka=da+4|0;la=da+8|0;ma=1;j:while(1){U=a[ia]|0;if((U&1)==0){jc=(U&255)>>>1}else{jc=c[ka>>2]|0}if(!(ma>>>0<jc>>>0)){break i}U=c[f>>2]|0;do{if((U|0)==0){kc=1}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){lc=Fc[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{lc=c[r>>2]|0}if((lc|0)==-1){c[f>>2]=0;kc=1;break}else{kc=(c[f>>2]|0)==0;break}}}while(0);U=c[b>>2]|0;do{if((U|0)==0){Z=321}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){mc=Fc[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{mc=c[r>>2]|0}if((mc|0)==-1){c[b>>2]=0;Z=321;break}else{if(kc){break}else{break j}}}}while(0);if((Z|0)==321){Z=0;if(kc){break}}U=c[f>>2]|0;r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){nc=Fc[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{nc=c[r>>2]|0}if((a[ia]&1)==0){oc=ka}else{oc=c[la>>2]|0}if((nc|0)!=(c[oc+(ma<<2)>>2]|0)){break}r=ma+1|0;U=c[f>>2]|0;ja=U+12|0;o=c[ja>>2]|0;if((o|0)==(c[U+16>>2]|0)){Fc[c[(c[U>>2]|0)+40>>2]&255](U)|0;ma=r;continue}else{c[ja>>2]=o+4;ma=r;continue}}c[j>>2]=c[j>>2]|4;gc=0;hc=ba;ic=aa;break h}}while(0);if((ba|0)==(ca|0)){gc=1;hc=ca;ic=aa;break}c[B>>2]=0;Co(v,ba,ca,B);if((c[B>>2]|0)==0){gc=1;hc=ba;ic=aa;break}c[j>>2]=c[j>>2]|4;gc=0;hc=ba;ic=aa}}while(0);Wj(z);Wj(y);Wj(x);Wj(w);Lj(v);if((hc|0)==0){pc=400;qc=0;i=p;return gc|0}Ac[ic&511](hc);pc=400;qc=0;i=p;return gc|0}function Ho(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;i=i+456|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=192;u=m+400|0;dk(p,h);m=p|0;v=c[m>>2]|0;if(!((c[7382]|0)==-1)){c[l>>2]=29528;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29528,l,116)}l=(c[7383]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(Go(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){c[k+4>>2]=0;a[B]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}B=x;if((a[q]|0)!=0){_j(k,Oc[c[(c[B>>2]|0)+44>>2]&31](y,45)|0)}x=Oc[c[(c[B>>2]|0)+44>>2]&31](y,48)|0;y=c[s>>2]|0;B=c[o>>2]|0;C=B-4|0;a:do{if(y>>>0<C>>>0){D=y;while(1){E=D+4|0;if((c[D>>2]|0)!=(x|0)){F=D;break a}if(E>>>0<C>>>0){D=E}else{F=E;break}}}else{F=y}}while(0);Io(k,F,B)|0}y=e|0;C=c[y>>2]|0;do{if((C|0)==0){G=1}else{x=c[C+12>>2]|0;if((x|0)==(c[C+16>>2]|0)){H=Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[x>>2]|0}if((H|0)==-1){c[y>>2]=0;G=1;break}else{G=(c[y>>2]|0)==0;break}}}while(0);do{if((A|0)==0){I=35}else{C=c[A+12>>2]|0;if((C|0)==(c[A+16>>2]|0)){J=Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{J=c[C>>2]|0}if((J|0)==-1){c[z>>2]=0;I=35;break}else{if(G){break}else{I=37;break}}}}while(0);if((I|0)==35){if(G){I=37}}if((I|0)==37){c[j>>2]=c[j>>2]|2}c[b>>2]=c[y>>2];mj(c[m>>2]|0)|0;z=c[s>>2]|0;c[s>>2]=0;if((z|0)==0){K=400;L=0;i=d;return}Ac[c[t>>2]&511](z);K=400;L=0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function Io(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b;g=d;h=a[f]|0;if((h&1)==0){i=1;j=h;k=(h&255)>>>1}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255;k=c[b+4>>2]|0}h=e-g>>2;if((h|0)==0){return b|0}if((i-k|0)>>>0<h>>>0){ak(b,i,k+h-i|0,k,k,0,0);l=a[f]|0}else{l=j}if((l&1)==0){m=b+4|0}else{m=c[b+8>>2]|0}l=m+(k<<2)|0;if((d|0)==(e|0)){n=l}else{j=k+((e-4+(-g|0)|0)>>>2)+1|0;g=d;d=l;while(1){c[d>>2]=c[g>>2];l=g+4|0;if((l|0)==(e|0)){break}else{g=l;d=d+4|0}}n=m+(j<<2)|0}c[n>>2]=0;n=k+h|0;if((a[f]&1)==0){a[f]=n<<1;return b|0}else{c[b+4>>2]=n;return b|0}return 0}function Jo(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;t=n+72|0;u=n+88|0;v=n+104|0;w=n+112|0;x=n+128|0;y=n+144|0;z=n+160|0;if(b){b=c[d>>2]|0;if(!((c[7498]|0)==-1)){c[p>>2]=29992;c[p+4>>2]=16;c[p+8>>2]=0;Gj(29992,p,116)}p=(c[7499]|0)-1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>p>>>0)){B=mc(4)|0;D=B;Gr(D);Db(B|0,20328,156)}b=c[A+(p<<2)>>2]|0;if((b|0)==0){B=mc(4)|0;D=B;Gr(D);Db(B|0,20328,156)}B=b;Bc[c[(c[b>>2]|0)+44>>2]&127](q,B);D=e;C=c[q>>2]|0;a[D]=C;C=C>>8;a[D+1|0]=C;C=C>>8;a[D+2|0]=C;C=C>>8;a[D+3|0]=C;D=b;Bc[c[(c[D>>2]|0)+32>>2]&127](r,B);q=l;if((a[q]&1)==0){c[l+4>>2]=0;a[q]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Zj(l,0);p=r;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];ys(p|0,0,12)|0;Wj(r);Bc[c[(c[D>>2]|0)+28>>2]&127](s,B);r=k;if((a[r]&1)==0){c[k+4>>2]=0;a[r]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Zj(k,0);p=s;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];ys(p|0,0,12)|0;Wj(s);s=b;c[f>>2]=Fc[c[(c[s>>2]|0)+12>>2]&255](B)|0;c[g>>2]=Fc[c[(c[s>>2]|0)+16>>2]&255](B)|0;Bc[c[(c[b>>2]|0)+20>>2]&127](t,B);b=h;if((a[b]&1)==0){a[h+1|0]=0;a[b]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Pj(h,0);p=t;c[b>>2]=c[p>>2];c[b+4>>2]=c[p+4>>2];c[b+8>>2]=c[p+8>>2];ys(p|0,0,12)|0;Lj(t);Bc[c[(c[D>>2]|0)+24>>2]&127](u,B);D=j;if((a[D]&1)==0){c[j+4>>2]=0;a[D]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}Zj(j,0);t=u;c[D>>2]=c[t>>2];c[D+4>>2]=c[t+4>>2];c[D+8>>2]=c[t+8>>2];ys(t|0,0,12)|0;Wj(u);E=Fc[c[(c[s>>2]|0)+36>>2]&255](B)|0;c[m>>2]=E;i=n;return}else{B=c[d>>2]|0;if(!((c[7500]|0)==-1)){c[o>>2]=3e4;c[o+4>>2]=16;c[o+8>>2]=0;Gj(3e4,o,116)}o=(c[7501]|0)-1|0;d=c[B+8>>2]|0;if(!((c[B+12>>2]|0)-d>>2>>>0>o>>>0)){F=mc(4)|0;G=F;Gr(G);Db(F|0,20328,156)}B=c[d+(o<<2)>>2]|0;if((B|0)==0){F=mc(4)|0;G=F;Gr(G);Db(F|0,20328,156)}F=B;Bc[c[(c[B>>2]|0)+44>>2]&127](v,F);G=e;C=c[v>>2]|0;a[G]=C;C=C>>8;a[G+1|0]=C;C=C>>8;a[G+2|0]=C;C=C>>8;a[G+3|0]=C;G=B;Bc[c[(c[G>>2]|0)+32>>2]&127](w,F);v=l;if((a[v]&1)==0){c[l+4>>2]=0;a[v]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Zj(l,0);l=w;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];ys(l|0,0,12)|0;Wj(w);Bc[c[(c[G>>2]|0)+28>>2]&127](x,F);w=k;if((a[w]&1)==0){c[k+4>>2]=0;a[w]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Zj(k,0);k=x;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];ys(k|0,0,12)|0;Wj(x);x=B;c[f>>2]=Fc[c[(c[x>>2]|0)+12>>2]&255](F)|0;c[g>>2]=Fc[c[(c[x>>2]|0)+16>>2]&255](F)|0;Bc[c[(c[B>>2]|0)+20>>2]&127](y,F);B=h;if((a[B]&1)==0){a[h+1|0]=0;a[B]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Pj(h,0);h=y;c[B>>2]=c[h>>2];c[B+4>>2]=c[h+4>>2];c[B+8>>2]=c[h+8>>2];ys(h|0,0,12)|0;Lj(y);Bc[c[(c[G>>2]|0)+24>>2]&127](z,F);G=j;if((a[G]&1)==0){c[j+4>>2]=0;a[G]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}Zj(j,0);j=z;c[G>>2]=c[j>>2];c[G+4>>2]=c[j+4>>2];c[G+8>>2]=c[j+8>>2];ys(j|0,0,12)|0;Wj(z);E=Fc[c[(c[x>>2]|0)+36>>2]&255](F)|0;c[m>>2]=E;i=n;return}}function Ko(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+4|0;f=(c[e>>2]|0)!=192;g=a|0;a=c[g>>2]|0;h=a;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647>>>0?i<<1:-1;i=(c[b>>2]|0)-h>>2;if(f){k=a}else{k=0}a=bs(k,j)|0;k=a;if((a|0)==0){ns()}do{if(f){c[g>>2]=k;l=k}else{a=c[g>>2]|0;c[g>>2]=k;if((a|0)==0){l=k;break}Ac[c[e>>2]&511](a);l=c[g>>2]|0}}while(0);c[e>>2]=90;c[b>>2]=l+(i<<2);c[d>>2]=(c[g>>2]|0)+(j>>>2<<2);return}function Lo(a){a=a|0;kj(a|0);is(a);return}function Mo(a){a=a|0;kj(a|0);return}function No(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+248|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=d|0;m=d+120|0;n=d+232|0;o=d+240|0;p=o;q=i;i=i+1|0;i=i+7&-8;r=i;i=i+1|0;i=i+7&-8;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+12|0;i=i+7&-8;u=i;i=i+12|0;i=i+7&-8;v=i;i=i+4|0;i=i+7&-8;w=i;i=i+100|0;i=i+7&-8;x=i;i=i+4|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=d+16|0;c[m>>2]=A;B=d+128|0;C=bb(A|0,100,10544,(A=i,i=i+8|0,h[A>>3]=k,A)|0)|0;i=A;do{if(C>>>0>99>>>0){do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);D=Dm(m,c[6998]|0,10544,(A=i,i=i+8|0,h[A>>3]=k,A)|0)|0;i=A;E=c[m>>2]|0;if((E|0)==0){ns();F=c[m>>2]|0}else{F=E}E=$r(D)|0;if((E|0)!=0){G=E;H=D;I=E;J=F;break}ns();G=0;H=D;I=0;J=F}else{G=B;H=C;I=0;J=0}}while(0);dk(n,g);C=n|0;B=c[C>>2]|0;if(!((c[7384]|0)==-1)){c[l>>2]=29536;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29536,l,116)}l=(c[7385]|0)-1|0;F=c[B+8>>2]|0;do{if((c[B+12>>2]|0)-F>>2>>>0>l>>>0){A=c[F+(l<<2)>>2]|0;if((A|0)==0){break}D=A;E=c[m>>2]|0;Dc[c[(c[A>>2]|0)+32>>2]&15](D,E,E+H|0,G)|0;if((H|0)==0){K=0}else{K=(a[c[m>>2]|0]|0)==45}c[o>>2]=0;ys(s|0,0,12)|0;E=t;ys(E|0,0,12)|0;A=u;ys(A|0,0,12)|0;Oo(f,K,n,p,q,r,s,t,u,v);L=w|0;M=c[v>>2]|0;if((H|0)>(M|0)){N=a[A]|0;if((N&1)==0){O=(N&255)>>>1}else{O=c[u+4>>2]|0}N=a[E]|0;if((N&1)==0){P=(N&255)>>>1}else{P=c[t+4>>2]|0}Q=O+(H-M<<1|1)+P|0}else{N=a[A]|0;if((N&1)==0){R=(N&255)>>>1}else{R=c[u+4>>2]|0}N=a[E]|0;if((N&1)==0){S=(N&255)>>>1}else{S=c[t+4>>2]|0}Q=R+2+S|0}N=Q+M|0;do{if(N>>>0>100>>>0){E=$r(N)|0;if((E|0)!=0){T=E;U=E;break}ns();T=0;U=0}else{T=L;U=0}}while(0);Po(T,x,y,c[g+4>>2]|0,G,G+H|0,D,K,p,a[q]|0,a[r]|0,s,t,u,M);c[z>>2]=c[e>>2];ym(b,z,T,c[x>>2]|0,c[y>>2]|0,g,j);if((U|0)!=0){as(U)}Lj(u);Lj(t);Lj(s);mj(c[C>>2]|0)|0;if((I|0)!=0){as(I)}if((J|0)==0){V=100;W=0;X=100;Y=0;i=d;return}as(J);V=100;W=0;X=100;Y=0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function Oo(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;D=B;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=c[e>>2]|0;if(b){if(!((c[7502]|0)==-1)){c[p>>2]=30008;c[p+4>>2]=16;c[p+8>>2]=0;Gj(30008,p,116)}p=(c[7503]|0)-1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=mc(4)|0;J=I;Gr(J);Db(I|0,20328,156)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=mc(4)|0;J=I;Gr(J);Db(I|0,20328,156)}I=e;J=c[e>>2]|0;if(d){Bc[c[J+44>>2]&127](r,I);r=f;C=c[q>>2]|0;a[r]=C;C=C>>8;a[r+1|0]=C;C=C>>8;a[r+2|0]=C;C=C>>8;a[r+3|0]=C;Bc[c[(c[e>>2]|0)+32>>2]&127](s,I);r=l;if((a[r]&1)==0){a[l+1|0]=0;a[r]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Pj(l,0);q=s;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];ys(q|0,0,12)|0;Lj(s)}else{Bc[c[J+40>>2]&127](u,I);u=f;C=c[t>>2]|0;a[u]=C;C=C>>8;a[u+1|0]=C;C=C>>8;a[u+2|0]=C;C=C>>8;a[u+3|0]=C;Bc[c[(c[e>>2]|0)+28>>2]&127](v,I);u=l;if((a[u]&1)==0){a[l+1|0]=0;a[u]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Pj(l,0);t=v;c[u>>2]=c[t>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];ys(t|0,0,12)|0;Lj(v)}v=e;a[g]=Fc[c[(c[v>>2]|0)+12>>2]&255](I)|0;a[h]=Fc[c[(c[v>>2]|0)+16>>2]&255](I)|0;v=e;Bc[c[(c[v>>2]|0)+20>>2]&127](w,I);t=j;if((a[t]&1)==0){a[j+1|0]=0;a[t]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Pj(j,0);u=w;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];ys(u|0,0,12)|0;Lj(w);Bc[c[(c[v>>2]|0)+24>>2]&127](x,I);v=k;if((a[v]&1)==0){a[k+1|0]=0;a[v]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Pj(k,0);w=x;c[v>>2]=c[w>>2];c[v+4>>2]=c[w+4>>2];c[v+8>>2]=c[w+8>>2];ys(w|0,0,12)|0;Lj(x);K=Fc[c[(c[e>>2]|0)+36>>2]&255](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[7504]|0)==-1)){c[o>>2]=30016;c[o+4>>2]=16;c[o+8>>2]=0;Gj(30016,o,116)}o=(c[7505]|0)-1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=mc(4)|0;M=L;Gr(M);Db(L|0,20328,156)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=mc(4)|0;M=L;Gr(M);Db(L|0,20328,156)}L=H;M=c[H>>2]|0;if(d){Bc[c[M+44>>2]&127](z,L);z=f;C=c[y>>2]|0;a[z]=C;C=C>>8;a[z+1|0]=C;C=C>>8;a[z+2|0]=C;C=C>>8;a[z+3|0]=C;Bc[c[(c[H>>2]|0)+32>>2]&127](A,L);z=l;if((a[z]&1)==0){a[l+1|0]=0;a[z]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Pj(l,0);y=A;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];ys(y|0,0,12)|0;Lj(A)}else{Bc[c[M+40>>2]&127](D,L);D=f;C=c[B>>2]|0;a[D]=C;C=C>>8;a[D+1|0]=C;C=C>>8;a[D+2|0]=C;C=C>>8;a[D+3|0]=C;Bc[c[(c[H>>2]|0)+28>>2]&127](E,L);D=l;if((a[D]&1)==0){a[l+1|0]=0;a[D]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Pj(l,0);l=E;c[D>>2]=c[l>>2];c[D+4>>2]=c[l+4>>2];c[D+8>>2]=c[l+8>>2];ys(l|0,0,12)|0;Lj(E)}E=H;a[g]=Fc[c[(c[E>>2]|0)+12>>2]&255](L)|0;a[h]=Fc[c[(c[E>>2]|0)+16>>2]&255](L)|0;E=H;Bc[c[(c[E>>2]|0)+20>>2]&127](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Pj(j,0);j=F;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];ys(j|0,0,12)|0;Lj(F);Bc[c[(c[E>>2]|0)+24>>2]&127](G,L);E=k;if((a[E]&1)==0){a[k+1|0]=0;a[E]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Pj(k,0);k=G;c[E>>2]=c[k>>2];c[E+4>>2]=c[k+4>>2];c[E+8>>2]=c[k+8>>2];ys(k|0,0,12)|0;Lj(G);K=Fc[c[(c[H>>2]|0)+36>>2]&255](L)|0;c[m>>2]=K;i=n;return}}function Po(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0;c[f>>2]=d;s=j;t=q;u=q+1|0;v=q+8|0;w=q+4|0;q=p;x=(g&512|0)==0;y=p+1|0;z=p+8|0;A=p+4|0;p=(r|0)>0;B=o;C=o+1|0;D=o+8|0;E=o+4|0;o=j+8|0;F=-r|0;G=0;H=h;while(1){a:do{switch(a[l+G|0]|0){case 2:{h=a[q]|0;I=(h&1)==0;if(I){J=(h&255)>>>1}else{J=c[A>>2]|0}if((J|0)==0|x){K=H;break a}if(I){L=(h&255)>>>1;M=y;N=y}else{h=c[z>>2]|0;L=c[A>>2]|0;M=h;N=h}h=M+L|0;I=c[f>>2]|0;if((N|0)==(h|0)){O=I}else{P=I;I=N;while(1){a[P]=a[I]|0;Q=I+1|0;R=P+1|0;if((Q|0)==(h|0)){O=R;break}else{P=R;I=Q}}}c[f>>2]=O;K=H;break};case 1:{c[e>>2]=c[f>>2];I=Oc[c[(c[s>>2]|0)+28>>2]&31](j,32)|0;P=c[f>>2]|0;c[f>>2]=P+1;a[P]=I;K=H;break};case 3:{I=a[t]|0;P=(I&1)==0;if(P){S=(I&255)>>>1}else{S=c[w>>2]|0}if((S|0)==0){K=H;break a}if(P){T=u}else{T=c[v>>2]|0}P=a[T]|0;I=c[f>>2]|0;c[f>>2]=I+1;a[I]=P;K=H;break};case 4:{P=c[f>>2]|0;I=k?H+1|0:H;b:do{if(I>>>0<i>>>0){h=I;while(1){Q=a[h]|0;if(!(Q<<24>>24>-1)){U=h;break b}R=h+1|0;if((b[(c[o>>2]|0)+(Q<<24>>24<<1)>>1]&2048)==0){U=h;break b}if(R>>>0<i>>>0){h=R}else{U=R;break}}}else{U=I}}while(0);h=U;if(p){if(U>>>0>I>>>0){R=I+(-h|0)|0;h=R>>>0<F>>>0?F:R;R=h+r|0;Q=U;V=r;W=P;while(1){X=Q-1|0;Y=a[X]|0;c[f>>2]=W+1;a[W]=Y;Y=V-1|0;Z=(Y|0)>0;if(!(X>>>0>I>>>0&Z)){break}Q=X;V=Y;W=c[f>>2]|0}W=U+h|0;if(Z){_=R;$=W;aa=32}else{ba=0;ca=R;da=W}}else{_=r;$=U;aa=32}if((aa|0)==32){aa=0;ba=Oc[c[(c[s>>2]|0)+28>>2]&31](j,48)|0;ca=_;da=$}W=c[f>>2]|0;c[f>>2]=W+1;if((ca|0)>0){V=ca;Q=W;while(1){a[Q]=ba;Y=V-1|0;X=c[f>>2]|0;c[f>>2]=X+1;if((Y|0)>0){V=Y;Q=X}else{ea=X;break}}}else{ea=W}a[ea]=m;fa=da}else{fa=U}if((fa|0)==(I|0)){Q=Oc[c[(c[s>>2]|0)+28>>2]&31](j,48)|0;V=c[f>>2]|0;c[f>>2]=V+1;a[V]=Q}else{Q=a[B]|0;V=(Q&1)==0;if(V){ga=(Q&255)>>>1}else{ga=c[E>>2]|0}if((ga|0)==0){ha=fa;ia=0;ja=0;ka=-1}else{if(V){la=C}else{la=c[D>>2]|0}ha=fa;ia=0;ja=0;ka=a[la]|0}while(1){do{if((ia|0)==(ka|0)){V=c[f>>2]|0;c[f>>2]=V+1;a[V]=n;V=ja+1|0;Q=a[B]|0;R=(Q&1)==0;if(R){ma=(Q&255)>>>1}else{ma=c[E>>2]|0}if(!(V>>>0<ma>>>0)){na=ka;oa=V;pa=0;break}if(R){qa=C}else{qa=c[D>>2]|0}if((a[qa+V|0]|0)==127){na=-1;oa=V;pa=0;break}if(R){ra=C}else{ra=c[D>>2]|0}na=a[ra+V|0]|0;oa=V;pa=0}else{na=ka;oa=ja;pa=ia}}while(0);V=ha-1|0;R=a[V]|0;Q=c[f>>2]|0;c[f>>2]=Q+1;a[Q]=R;if((V|0)==(I|0)){break}else{ha=V;ia=pa+1|0;ja=oa;ka=na}}}W=c[f>>2]|0;if((P|0)==(W|0)){K=I;break a}V=W-1|0;if(V>>>0>P>>>0){sa=P;ta=V}else{K=I;break a}while(1){V=a[sa]|0;a[sa]=a[ta]|0;a[ta]=V;V=sa+1|0;W=ta-1|0;if(V>>>0<W>>>0){sa=V;ta=W}else{K=I;break}}break};case 0:{c[e>>2]=c[f>>2];K=H;break};default:{K=H}}}while(0);I=G+1|0;if(I>>>0<4>>>0){G=I;H=K}else{break}}K=a[t]|0;t=(K&1)==0;if(t){ua=(K&255)>>>1}else{ua=c[w>>2]|0}if(ua>>>0>1>>>0){if(t){va=(K&255)>>>1;wa=u;xa=u}else{u=c[v>>2]|0;va=c[w>>2]|0;wa=u;xa=u}u=xa+1|0;xa=wa+va|0;va=c[f>>2]|0;if((u|0)==(xa|0)){ya=va}else{wa=va;va=u;while(1){a[wa]=a[va]|0;u=va+1|0;w=wa+1|0;if((u|0)==(xa|0)){ya=w;break}else{wa=w;va=u}}}c[f>>2]=ya}ya=g&176;if((ya|0)==16){return}else if((ya|0)==32){c[e>>2]=c[f>>2];return}else{c[e>>2]=d;return}}function Qo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;d=i;i=i+32|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+24|0;n=m;o=i;i=i+1|0;i=i+7&-8;p=i;i=i+1|0;i=i+7&-8;q=i;i=i+12|0;i=i+7&-8;r=i;i=i+12|0;i=i+7&-8;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+100|0;i=i+7&-8;v=i;i=i+4|0;i=i+7&-8;w=i;i=i+4|0;i=i+7&-8;x=i;i=i+4|0;i=i+7&-8;dk(l,g);y=l|0;z=c[y>>2]|0;if(!((c[7384]|0)==-1)){c[k>>2]=29536;c[k+4>>2]=16;c[k+8>>2]=0;Gj(29536,k,116)}k=(c[7385]|0)-1|0;A=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-A>>2>>>0>k>>>0){B=c[A+(k<<2)>>2]|0;if((B|0)==0){break}C=B;D=j;E=a[D]|0;F=(E&1)==0;if(F){G=(E&255)>>>1}else{G=c[j+4>>2]|0}if((G|0)==0){H=0}else{if(F){I=j+1|0}else{I=c[j+8>>2]|0}F=a[I]|0;H=F<<24>>24==(Oc[c[(c[B>>2]|0)+28>>2]&31](C,45)|0)<<24>>24}c[m>>2]=0;ys(q|0,0,12)|0;B=r;ys(B|0,0,12)|0;F=s;ys(F|0,0,12)|0;Oo(f,H,l,n,o,p,q,r,s,t);E=u|0;J=a[D]|0;K=(J&1)==0;if(K){L=(J&255)>>>1}else{L=c[j+4>>2]|0}M=c[t>>2]|0;if((L|0)>(M|0)){if(K){N=(J&255)>>>1}else{N=c[j+4>>2]|0}K=a[F]|0;if((K&1)==0){O=(K&255)>>>1}else{O=c[s+4>>2]|0}K=a[B]|0;if((K&1)==0){P=(K&255)>>>1}else{P=c[r+4>>2]|0}Q=O+(N-M<<1|1)+P|0}else{K=a[F]|0;if((K&1)==0){R=(K&255)>>>1}else{R=c[s+4>>2]|0}K=a[B]|0;if((K&1)==0){S=(K&255)>>>1}else{S=c[r+4>>2]|0}Q=R+2+S|0}K=Q+M|0;do{if(K>>>0>100>>>0){B=$r(K)|0;if((B|0)!=0){T=B;U=B;V=J;break}ns();T=0;U=0;V=a[D]|0}else{T=E;U=0;V=J}}while(0);if((V&1)==0){W=(V&255)>>>1;X=j+1|0}else{W=c[j+4>>2]|0;X=c[j+8>>2]|0}Po(T,v,w,c[g+4>>2]|0,X,X+W|0,C,H,n,a[o]|0,a[p]|0,q,r,s,M);c[x>>2]=c[e>>2];ym(b,x,T,c[v>>2]|0,c[w>>2]|0,g,h);if((U|0)==0){Y=100;Z=0;Lj(s);Lj(r);Lj(q);_=c[y>>2]|0;$=_|0;aa=mj($)|0;i=d;return}as(U);Y=100;Z=0;Lj(s);Lj(r);Lj(q);_=c[y>>2]|0;$=_|0;aa=mj($)|0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function Ro(a){a=a|0;kj(a|0);is(a);return}function So(a){a=a|0;kj(a|0);return}function To(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+544|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=d|0;m=d+120|0;n=d+528|0;o=d+536|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+12|0;i=i+7&-8;u=i;i=i+12|0;i=i+7&-8;v=i;i=i+4|0;i=i+7&-8;w=i;i=i+400|0;x=i;i=i+4|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=d+16|0;c[m>>2]=A;B=d+128|0;C=bb(A|0,100,10544,(A=i,i=i+8|0,h[A>>3]=k,A)|0)|0;i=A;do{if(C>>>0>99>>>0){do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);D=Dm(m,c[6998]|0,10544,(A=i,i=i+8|0,h[A>>3]=k,A)|0)|0;i=A;E=c[m>>2]|0;if((E|0)==0){ns();F=c[m>>2]|0}else{F=E}E=$r(D<<2)|0;G=E;if((E|0)!=0){H=G;I=D;J=G;K=F;break}ns();H=0;I=D;J=0;K=F}else{H=B;I=C;J=0;K=0}}while(0);dk(n,g);C=n|0;B=c[C>>2]|0;if(!((c[7382]|0)==-1)){c[l>>2]=29528;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29528,l,116)}l=(c[7383]|0)-1|0;F=c[B+8>>2]|0;do{if((c[B+12>>2]|0)-F>>2>>>0>l>>>0){A=c[F+(l<<2)>>2]|0;if((A|0)==0){break}D=A;G=c[m>>2]|0;Dc[c[(c[A>>2]|0)+48>>2]&15](D,G,G+I|0,H)|0;if((I|0)==0){L=0}else{L=(a[c[m>>2]|0]|0)==45}c[o>>2]=0;ys(s|0,0,12)|0;G=t;ys(G|0,0,12)|0;A=u;ys(A|0,0,12)|0;Uo(f,L,n,p,q,r,s,t,u,v);E=w|0;M=c[v>>2]|0;if((I|0)>(M|0)){N=a[A]|0;if((N&1)==0){O=(N&255)>>>1}else{O=c[u+4>>2]|0}N=a[G]|0;if((N&1)==0){P=(N&255)>>>1}else{P=c[t+4>>2]|0}Q=O+(I-M<<1|1)+P|0}else{N=a[A]|0;if((N&1)==0){R=(N&255)>>>1}else{R=c[u+4>>2]|0}N=a[G]|0;if((N&1)==0){S=(N&255)>>>1}else{S=c[t+4>>2]|0}Q=R+2+S|0}N=Q+M|0;do{if(N>>>0>100>>>0){G=$r(N<<2)|0;A=G;if((G|0)!=0){T=A;U=A;break}ns();T=0;U=0}else{T=E;U=0}}while(0);Vo(T,x,y,c[g+4>>2]|0,H,H+(I<<2)|0,D,L,p,c[q>>2]|0,c[r>>2]|0,s,t,u,M);c[z>>2]=c[e>>2];Mm(b,z,T,c[x>>2]|0,c[y>>2]|0,g,j);if((U|0)!=0){as(U)}Wj(u);Wj(t);Lj(s);mj(c[C>>2]|0)|0;if((J|0)!=0){as(J)}if((K|0)==0){V=400;W=0;X=100;Y=0;i=d;return}as(K);V=400;W=0;X=100;Y=0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function Uo(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;D=B;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=c[e>>2]|0;if(b){if(!((c[7498]|0)==-1)){c[p>>2]=29992;c[p+4>>2]=16;c[p+8>>2]=0;Gj(29992,p,116)}p=(c[7499]|0)-1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=mc(4)|0;J=I;Gr(J);Db(I|0,20328,156)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=mc(4)|0;J=I;Gr(J);Db(I|0,20328,156)}I=e;J=c[e>>2]|0;if(d){Bc[c[J+44>>2]&127](r,I);r=f;C=c[q>>2]|0;a[r]=C;C=C>>8;a[r+1|0]=C;C=C>>8;a[r+2|0]=C;C=C>>8;a[r+3|0]=C;Bc[c[(c[e>>2]|0)+32>>2]&127](s,I);r=l;if((a[r]&1)==0){c[l+4>>2]=0;a[r]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Zj(l,0);q=s;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];ys(q|0,0,12)|0;Wj(s)}else{Bc[c[J+40>>2]&127](u,I);u=f;C=c[t>>2]|0;a[u]=C;C=C>>8;a[u+1|0]=C;C=C>>8;a[u+2|0]=C;C=C>>8;a[u+3|0]=C;Bc[c[(c[e>>2]|0)+28>>2]&127](v,I);u=l;if((a[u]&1)==0){c[l+4>>2]=0;a[u]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Zj(l,0);t=v;c[u>>2]=c[t>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];ys(t|0,0,12)|0;Wj(v)}v=e;c[g>>2]=Fc[c[(c[v>>2]|0)+12>>2]&255](I)|0;c[h>>2]=Fc[c[(c[v>>2]|0)+16>>2]&255](I)|0;Bc[c[(c[e>>2]|0)+20>>2]&127](w,I);t=j;if((a[t]&1)==0){a[j+1|0]=0;a[t]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Pj(j,0);u=w;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];ys(u|0,0,12)|0;Lj(w);Bc[c[(c[e>>2]|0)+24>>2]&127](x,I);e=k;if((a[e]&1)==0){c[k+4>>2]=0;a[e]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Zj(k,0);w=x;c[e>>2]=c[w>>2];c[e+4>>2]=c[w+4>>2];c[e+8>>2]=c[w+8>>2];ys(w|0,0,12)|0;Wj(x);K=Fc[c[(c[v>>2]|0)+36>>2]&255](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[7500]|0)==-1)){c[o>>2]=3e4;c[o+4>>2]=16;c[o+8>>2]=0;Gj(3e4,o,116)}o=(c[7501]|0)-1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=mc(4)|0;M=L;Gr(M);Db(L|0,20328,156)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=mc(4)|0;M=L;Gr(M);Db(L|0,20328,156)}L=H;M=c[H>>2]|0;if(d){Bc[c[M+44>>2]&127](z,L);z=f;C=c[y>>2]|0;a[z]=C;C=C>>8;a[z+1|0]=C;C=C>>8;a[z+2|0]=C;C=C>>8;a[z+3|0]=C;Bc[c[(c[H>>2]|0)+32>>2]&127](A,L);z=l;if((a[z]&1)==0){c[l+4>>2]=0;a[z]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Zj(l,0);y=A;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];ys(y|0,0,12)|0;Wj(A)}else{Bc[c[M+40>>2]&127](D,L);D=f;C=c[B>>2]|0;a[D]=C;C=C>>8;a[D+1|0]=C;C=C>>8;a[D+2|0]=C;C=C>>8;a[D+3|0]=C;Bc[c[(c[H>>2]|0)+28>>2]&127](E,L);D=l;if((a[D]&1)==0){c[l+4>>2]=0;a[D]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Zj(l,0);l=E;c[D>>2]=c[l>>2];c[D+4>>2]=c[l+4>>2];c[D+8>>2]=c[l+8>>2];ys(l|0,0,12)|0;Wj(E)}E=H;c[g>>2]=Fc[c[(c[E>>2]|0)+12>>2]&255](L)|0;c[h>>2]=Fc[c[(c[E>>2]|0)+16>>2]&255](L)|0;Bc[c[(c[H>>2]|0)+20>>2]&127](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Pj(j,0);j=F;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];ys(j|0,0,12)|0;Lj(F);Bc[c[(c[H>>2]|0)+24>>2]&127](G,L);H=k;if((a[H]&1)==0){c[k+4>>2]=0;a[H]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Zj(k,0);k=G;c[H>>2]=c[k>>2];c[H+4>>2]=c[k+4>>2];c[H+8>>2]=c[k+8>>2];ys(k|0,0,12)|0;Wj(G);K=Fc[c[(c[E>>2]|0)+36>>2]&255](L)|0;c[m>>2]=K;i=n;return}}function Vo(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;c[e>>2]=b;r=i;s=p;t=p+4|0;u=p+8|0;p=o;v=(f&512|0)==0;w=o+4|0;x=o+8|0;o=(q|0)>0;y=n;z=n+1|0;A=n+8|0;B=n+4|0;n=i;C=0;D=g;while(1){a:do{switch(a[k+C|0]|0){case 0:{c[d>>2]=c[e>>2];E=D;break};case 1:{c[d>>2]=c[e>>2];g=Oc[c[(c[r>>2]|0)+44>>2]&31](i,32)|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=g;E=D;break};case 3:{g=a[s]|0;F=(g&1)==0;if(F){G=(g&255)>>>1}else{G=c[t>>2]|0}if((G|0)==0){E=D;break a}if(F){H=t}else{H=c[u>>2]|0}F=c[H>>2]|0;g=c[e>>2]|0;c[e>>2]=g+4;c[g>>2]=F;E=D;break};case 2:{F=a[p]|0;g=(F&1)==0;if(g){I=(F&255)>>>1}else{I=c[w>>2]|0}if((I|0)==0|v){E=D;break a}if(g){J=(F&255)>>>1;K=w;L=w}else{F=c[x>>2]|0;J=c[w>>2]|0;K=F;L=F}F=K+(J<<2)|0;g=c[e>>2]|0;if((L|0)==(F|0)){M=g}else{N=(K+(J-1<<2)+(-L|0)|0)>>>2;O=g;P=L;while(1){c[O>>2]=c[P>>2];Q=P+4|0;if((Q|0)==(F|0)){break}O=O+4|0;P=Q}M=g+(N+1<<2)|0}c[e>>2]=M;E=D;break};case 4:{P=c[e>>2]|0;O=j?D+4|0:D;b:do{if(O>>>0<h>>>0){F=O;while(1){Q=F+4|0;if(!(Gc[c[(c[n>>2]|0)+12>>2]&63](i,2048,c[F>>2]|0)|0)){R=F;break b}if(Q>>>0<h>>>0){F=Q}else{R=Q;break}}}else{R=O}}while(0);if(o){do{if(R>>>0>O>>>0){N=R;g=q;F=c[e>>2]|0;while(1){S=N-4|0;T=F+4|0;c[F>>2]=c[S>>2];U=g-1|0;V=(U|0)>0;if(S>>>0>O>>>0&V){N=S;g=U;F=T}else{break}}c[e>>2]=T;if(V){W=U;X=S;Y=34;break}F=c[e>>2]|0;c[e>>2]=F+4;Z=F;_=S}else{W=q;X=R;Y=34}}while(0);do{if((Y|0)==34){Y=0;F=Oc[c[(c[r>>2]|0)+44>>2]&31](i,48)|0;g=c[e>>2]|0;N=g+4|0;c[e>>2]=N;if((W|0)>0){$=W;aa=g;ba=N}else{Z=g;_=X;break}while(1){c[aa>>2]=F;N=$-1|0;if((N|0)>0){$=N;aa=ba;ba=ba+4|0}else{break}}c[e>>2]=g+(W+1<<2);Z=g+(W<<2)|0;_=X}}while(0);c[Z>>2]=l;ca=_}else{ca=R}if((ca|0)==(O|0)){F=Oc[c[(c[r>>2]|0)+44>>2]&31](i,48)|0;N=c[e>>2]|0;Q=N+4|0;c[e>>2]=Q;c[N>>2]=F;da=Q}else{Q=a[y]|0;F=(Q&1)==0;if(F){ea=(Q&255)>>>1}else{ea=c[B>>2]|0}if((ea|0)==0){fa=ca;ga=0;ha=0;ia=-1}else{if(F){ja=z}else{ja=c[A>>2]|0}fa=ca;ga=0;ha=0;ia=a[ja]|0}while(1){F=c[e>>2]|0;do{if((ga|0)==(ia|0)){Q=F+4|0;c[e>>2]=Q;c[F>>2]=m;N=ha+1|0;ka=a[y]|0;la=(ka&1)==0;if(la){ma=(ka&255)>>>1}else{ma=c[B>>2]|0}if(!(N>>>0<ma>>>0)){na=ia;oa=N;pa=0;qa=Q;break}if(la){ra=z}else{ra=c[A>>2]|0}if((a[ra+N|0]|0)==127){na=-1;oa=N;pa=0;qa=Q;break}if(la){sa=z}else{sa=c[A>>2]|0}na=a[sa+N|0]|0;oa=N;pa=0;qa=Q}else{na=ia;oa=ha;pa=ga;qa=F}}while(0);F=fa-4|0;g=c[F>>2]|0;Q=qa+4|0;c[e>>2]=Q;c[qa>>2]=g;if((F|0)==(O|0)){da=Q;break}else{fa=F;ga=pa+1|0;ha=oa;ia=na}}}if((P|0)==(da|0)){E=O;break a}F=da-4|0;if(F>>>0>P>>>0){ta=P;ua=F}else{E=O;break a}while(1){F=c[ta>>2]|0;c[ta>>2]=c[ua>>2];c[ua>>2]=F;F=ta+4|0;Q=ua-4|0;if(F>>>0<Q>>>0){ta=F;ua=Q}else{E=O;break}}break};default:{E=D}}}while(0);O=C+1|0;if(O>>>0<4>>>0){C=O;D=E}else{break}}E=a[s]|0;s=(E&1)==0;if(s){va=(E&255)>>>1}else{va=c[t>>2]|0}if(va>>>0>1>>>0){if(s){wa=(E&255)>>>1;xa=t;ya=t}else{E=c[u>>2]|0;wa=c[t>>2]|0;xa=E;ya=E}E=ya+4|0;ya=xa+(wa<<2)|0;t=c[e>>2]|0;if((E|0)==(ya|0)){za=t}else{u=(xa+(wa-1<<2)+(-E|0)|0)>>>2;wa=t;xa=E;while(1){c[wa>>2]=c[xa>>2];E=xa+4|0;if((E|0)==(ya|0)){break}else{wa=wa+4|0;xa=E}}za=t+(u+1<<2)|0}c[e>>2]=za}za=f&176;if((za|0)==32){c[d>>2]=c[e>>2];return}else if((za|0)==16){return}else{c[d>>2]=b;return}}function Wo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;d=i;i=i+32|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+24|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+4|0;i=i+7&-8;q=i;i=i+12|0;i=i+7&-8;r=i;i=i+12|0;i=i+7&-8;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+400|0;v=i;i=i+4|0;i=i+7&-8;w=i;i=i+4|0;i=i+7&-8;x=i;i=i+4|0;i=i+7&-8;dk(l,g);y=l|0;z=c[y>>2]|0;if(!((c[7382]|0)==-1)){c[k>>2]=29528;c[k+4>>2]=16;c[k+8>>2]=0;Gj(29528,k,116)}k=(c[7383]|0)-1|0;A=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-A>>2>>>0>k>>>0){B=c[A+(k<<2)>>2]|0;if((B|0)==0){break}C=B;D=j;E=a[D]|0;F=(E&1)==0;if(F){G=(E&255)>>>1}else{G=c[j+4>>2]|0}if((G|0)==0){H=0}else{if(F){I=j+4|0}else{I=c[j+8>>2]|0}F=c[I>>2]|0;H=(F|0)==(Oc[c[(c[B>>2]|0)+44>>2]&31](C,45)|0)}c[m>>2]=0;ys(q|0,0,12)|0;B=r;ys(B|0,0,12)|0;F=s;ys(F|0,0,12)|0;Uo(f,H,l,n,o,p,q,r,s,t);E=u|0;J=a[D]|0;K=(J&1)==0;if(K){L=(J&255)>>>1}else{L=c[j+4>>2]|0}M=c[t>>2]|0;if((L|0)>(M|0)){if(K){N=(J&255)>>>1}else{N=c[j+4>>2]|0}K=a[F]|0;if((K&1)==0){O=(K&255)>>>1}else{O=c[s+4>>2]|0}K=a[B]|0;if((K&1)==0){P=(K&255)>>>1}else{P=c[r+4>>2]|0}Q=O+(N-M<<1|1)+P|0}else{K=a[F]|0;if((K&1)==0){R=(K&255)>>>1}else{R=c[s+4>>2]|0}K=a[B]|0;if((K&1)==0){S=(K&255)>>>1}else{S=c[r+4>>2]|0}Q=R+2+S|0}K=Q+M|0;do{if(K>>>0>100>>>0){B=$r(K<<2)|0;F=B;if((B|0)!=0){T=F;U=F;V=J;break}ns();T=0;U=0;V=a[D]|0}else{T=E;U=0;V=J}}while(0);if((V&1)==0){W=(V&255)>>>1;X=j+4|0}else{W=c[j+4>>2]|0;X=c[j+8>>2]|0}Vo(T,v,w,c[g+4>>2]|0,X,X+(W<<2)|0,C,H,n,c[o>>2]|0,c[p>>2]|0,q,r,s,M);c[x>>2]=c[e>>2];Mm(b,x,T,c[v>>2]|0,c[w>>2]|0,g,h);if((U|0)==0){Y=400;Z=0;Wj(s);Wj(r);Lj(q);_=c[y>>2]|0;$=_|0;aa=mj($)|0;i=d;return}as(U);Y=400;Z=0;Wj(s);Wj(r);Lj(q);_=c[y>>2]|0;$=_|0;aa=mj($)|0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function Xo(a){a=a|0;kj(a|0);is(a);return}function Yo(a){a=a|0;kj(a|0);return}function Zo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=oc(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function _o(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+16|0;j=d|0;k=j;ys(k|0,0,12)|0;l=a[h]|0;if((l&1)==0){m=(l&255)>>>1;n=h+1|0;o=h+1|0}else{l=c[h+8>>2]|0;m=c[h+4>>2]|0;n=l;o=l}l=o+m|0;do{if(n>>>0<l>>>0){m=n;do{Qj(j,a[m]|0);m=m+1|0;}while(m>>>0<l>>>0);m=(e|0)==-1?-1:e<<1;if((a[k]&1)==0){p=m;q=10;break}r=c[j+8>>2]|0;s=m}else{p=(e|0)==-1?-1:e<<1;q=10}}while(0);if((q|0)==10){r=j+1|0;s=p}p=ob(s|0,f|0,g|0,r|0)|0;ys(b|0,0,12)|0;r=As(p|0)|0;g=p+r|0;if((r|0)>0){t=p}else{Lj(j);i=d;return}do{Qj(b,a[t]|0);t=t+1|0;}while(t>>>0<g>>>0);Lj(j);i=d;return}function $o(a,b){a=a|0;b=b|0;Vb(((b|0)==-1?-1:b<<1)|0)|0;return}function ap(a){a=a|0;kj(a|0);is(a);return}function bp(a){a=a|0;kj(a|0);return}function cp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=oc(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function dp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;d=i;i=i+240|0;j=d|0;k=d+8|0;l=d+40|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+192|0;q=d+200|0;r=d+208|0;s=d+224|0;t=d+232|0;u=r;ys(u|0,0,12)|0;c[s+4>>2]=0;c[s>>2]=16072;v=a[h]|0;if((v&1)==0){w=(v&255)>>>1;x=h+4|0;y=h+4|0}else{v=c[h+8>>2]|0;w=c[h+4>>2]|0;x=v;y=v}v=y+(w<<2)|0;w=k|0;y=j;c[j>>2]=0;c[j+4>>2]=0;a:do{if(x>>>0<v>>>0){j=s|0;h=s;z=k+32|0;A=x;B=16072;while(1){c[m>>2]=A;C=(Kc[c[B+12>>2]&31](j,y,A,v,m,w,z,l)|0)==2;D=c[m>>2]|0;if(C|(D|0)==(A|0)){break}if(w>>>0<(c[l>>2]|0)>>>0){C=w;do{Qj(r,a[C]|0);C=C+1|0;}while(C>>>0<(c[l>>2]|0)>>>0);E=c[m>>2]|0}else{E=D}if(!(E>>>0<v>>>0)){break a}A=E;B=c[h>>2]|0}yo(5080)}}while(0);kj(s|0);if((a[u]&1)==0){F=r+1|0}else{F=c[r+8>>2]|0}u=ob(((e|0)==-1?-1:e<<1)|0,f|0,g|0,F|0)|0;ys(b|0,0,12)|0;c[t+4>>2]=0;c[t>>2]=16016;F=As(u|0)|0;g=u+F|0;f=n;c[n>>2]=0;c[n+4>>2]=0;if((F|0)<=0){G=8;H=0;I=4;J=0;K=4;L=0;M=t|0;kj(M);Lj(r);i=d;return}F=t|0;n=t;e=g;s=o|0;E=o+128|0;o=u;u=16016;while(1){c[q>>2]=o;v=(Kc[c[u+16>>2]&31](F,f,o,(e-o|0)>32?o+32|0:g,q,s,E,p)|0)==2;m=c[q>>2]|0;if(v|(m|0)==(o|0)){break}if(s>>>0<(c[p>>2]|0)>>>0){v=s;do{_j(b,c[v>>2]|0);v=v+4|0;}while(v>>>0<(c[p>>2]|0)>>>0);N=c[q>>2]|0}else{N=m}if(!(N>>>0<g>>>0)){O=37;break}o=N;u=c[n>>2]|0}if((O|0)==37){G=8;H=0;I=4;J=0;K=4;L=0;M=t|0;kj(M);Lj(r);i=d;return}yo(5080)}function ep(a,b){a=a|0;b=b|0;Vb(((b|0)==-1?-1:b<<1)|0)|0;return}function fp(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=15536;d=b+8|0;e=c[d>>2]|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);if((e|0)==(c[6998]|0)){f=b|0;kj(f);return}nb(c[d>>2]|0);f=b|0;kj(f);return}function gp(a){a=a|0;a=mc(8)|0;nj(a,10304);c[a>>2]=14472;Db(a|0,20360,42)}function hp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+448|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=e+192|0;t=e+208|0;u=e+224|0;v=e+240|0;w=e+256|0;x=e+272|0;y=e+288|0;z=e+304|0;A=e+320|0;B=e+336|0;C=e+352|0;D=e+368|0;E=e+384|0;F=e+400|0;G=e+416|0;H=e+432|0;c[b+4>>2]=d-1;c[b>>2]=15792;d=b+8|0;I=b+12|0;J=b+136|0;a[J]=1;K=b+24|0;c[I>>2]=K;c[d>>2]=K;c[b+16>>2]=J;J=28;L=K;do{if((L|0)==0){M=0}else{c[L>>2]=0;M=c[I>>2]|0}L=M+4|0;c[I>>2]=L;J=J-1|0;}while((J|0)!=0);Jj(b+144|0,10088,1);J=c[d>>2]|0;d=c[I>>2]|0;if((d|0)!=(J|0)){c[I>>2]=d+(~((d-4+(-J|0)|0)>>>2)<<2)}c[7055]=0;c[7054]=15496;if(!((c[7304]|0)==-1)){c[G>>2]=29216;c[G+4>>2]=16;c[G+8>>2]=0;Gj(29216,G,116)}ip(b,28216,(c[7305]|0)-1|0);c[7053]=0;c[7052]=15456;if(!((c[7302]|0)==-1)){c[F>>2]=29208;c[F+4>>2]=16;c[F+8>>2]=0;Gj(29208,F,116)}ip(b,28208,(c[7303]|0)-1|0);c[7109]=0;c[7108]=15904;c[7110]=0;a[28444]=0;c[7110]=c[(mb()|0)>>2];if(!((c[7384]|0)==-1)){c[E>>2]=29536;c[E+4>>2]=16;c[E+8>>2]=0;Gj(29536,E,116)}ip(b,28432,(c[7385]|0)-1|0);c[7107]=0;c[7106]=15824;if(!((c[7382]|0)==-1)){c[D>>2]=29528;c[D+4>>2]=16;c[D+8>>2]=0;Gj(29528,D,116)}ip(b,28424,(c[7383]|0)-1|0);c[7061]=0;c[7060]=15592;if(!((c[7308]|0)==-1)){c[C>>2]=29232;c[C+4>>2]=16;c[C+8>>2]=0;Gj(29232,C,116)}ip(b,28240,(c[7309]|0)-1|0);c[7057]=0;c[7056]=15536;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);c[7058]=c[6998];if(!((c[7306]|0)==-1)){c[B>>2]=29224;c[B+4>>2]=16;c[B+8>>2]=0;Gj(29224,B,116)}ip(b,28224,(c[7307]|0)-1|0);c[7063]=0;c[7062]=15648;if(!((c[7310]|0)==-1)){c[A>>2]=29240;c[A+4>>2]=16;c[A+8>>2]=0;Gj(29240,A,116)}ip(b,28248,(c[7311]|0)-1|0);c[7065]=0;c[7064]=15704;if(!((c[7312]|0)==-1)){c[z>>2]=29248;c[z+4>>2]=16;c[z+8>>2]=0;Gj(29248,z,116)}ip(b,28256,(c[7313]|0)-1|0);c[7035]=0;c[7034]=15e3;a[28144]=46;a[28145]=44;ys(28148,0,12)|0;if(!((c[7288]|0)==-1)){c[y>>2]=29152;c[y+4>>2]=16;c[y+8>>2]=0;Gj(29152,y,116)}ip(b,28136,(c[7289]|0)-1|0);c[7027]=0;c[7026]=14952;c[7028]=46;c[7029]=44;ys(28120,0,12)|0;if(!((c[7286]|0)==-1)){c[x>>2]=29144;c[x+4>>2]=16;c[x+8>>2]=0;Gj(29144,x,116)}ip(b,28104,(c[7287]|0)-1|0);c[7051]=0;c[7050]=15384;if(!((c[7300]|0)==-1)){c[w>>2]=29200;c[w+4>>2]=16;c[w+8>>2]=0;Gj(29200,w,116)}ip(b,28200,(c[7301]|0)-1|0);c[7049]=0;c[7048]=15312;if(!((c[7298]|0)==-1)){c[v>>2]=29192;c[v+4>>2]=16;c[v+8>>2]=0;Gj(29192,v,116)}ip(b,28192,(c[7299]|0)-1|0);c[7047]=0;c[7046]=15248;if(!((c[7296]|0)==-1)){c[u>>2]=29184;c[u+4>>2]=16;c[u+8>>2]=0;Gj(29184,u,116)}ip(b,28184,(c[7297]|0)-1|0);c[7045]=0;c[7044]=15184;if(!((c[7294]|0)==-1)){c[t>>2]=29176;c[t+4>>2]=16;c[t+8>>2]=0;Gj(29176,t,116)}ip(b,28176,(c[7295]|0)-1|0);c[7119]=0;c[7118]=16832;if(!((c[7504]|0)==-1)){c[s>>2]=30016;c[s+4>>2]=16;c[s+8>>2]=0;Gj(30016,s,116)}ip(b,28472,(c[7505]|0)-1|0);c[7117]=0;c[7116]=16768;if(!((c[7502]|0)==-1)){c[r>>2]=30008;c[r+4>>2]=16;c[r+8>>2]=0;Gj(30008,r,116)}ip(b,28464,(c[7503]|0)-1|0);c[7115]=0;c[7114]=16704;if(!((c[7500]|0)==-1)){c[q>>2]=3e4;c[q+4>>2]=16;c[q+8>>2]=0;Gj(3e4,q,116)}ip(b,28456,(c[7501]|0)-1|0);c[7113]=0;c[7112]=16640;if(!((c[7498]|0)==-1)){c[p>>2]=29992;c[p+4>>2]=16;c[p+8>>2]=0;Gj(29992,p,116)}ip(b,28448,(c[7499]|0)-1|0);c[7009]=0;c[7008]=14656;if(!((c[7276]|0)==-1)){c[o>>2]=29104;c[o+4>>2]=16;c[o+8>>2]=0;Gj(29104,o,116)}ip(b,28032,(c[7277]|0)-1|0);c[7007]=0;c[7006]=14616;if(!((c[7274]|0)==-1)){c[n>>2]=29096;c[n+4>>2]=16;c[n+8>>2]=0;Gj(29096,n,116)}ip(b,28024,(c[7275]|0)-1|0);c[7005]=0;c[7004]=14576;if(!((c[7272]|0)==-1)){c[m>>2]=29088;c[m+4>>2]=16;c[m+8>>2]=0;Gj(29088,m,116)}ip(b,28016,(c[7273]|0)-1|0);c[7003]=0;c[7002]=14536;if(!((c[7270]|0)==-1)){c[l>>2]=29080;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29080,l,116)}ip(b,28008,(c[7271]|0)-1|0);c[7023]=0;c[7022]=14856;c[7024]=14904;if(!((c[7284]|0)==-1)){c[k>>2]=29136;c[k+4>>2]=16;c[k+8>>2]=0;Gj(29136,k,116)}ip(b,28088,(c[7285]|0)-1|0);c[7019]=0;c[7018]=14760;c[7020]=14808;if(!((c[7282]|0)==-1)){c[j>>2]=29128;c[j+4>>2]=16;c[j+8>>2]=0;Gj(29128,j,116)}ip(b,28072,(c[7283]|0)-1|0);c[7015]=0;c[7014]=15760;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);c[7016]=c[6998];c[7014]=14728;if(!((c[7280]|0)==-1)){c[h>>2]=29120;c[h+4>>2]=16;c[h+8>>2]=0;Gj(29120,h,116)}ip(b,28056,(c[7281]|0)-1|0);c[7011]=0;c[7010]=15760;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);c[7012]=c[6998];c[7010]=14696;if(!((c[7278]|0)==-1)){c[g>>2]=29112;c[g+4>>2]=16;c[g+8>>2]=0;Gj(29112,g,116)}ip(b,28040,(c[7279]|0)-1|0);c[7043]=0;c[7042]=15088;if(!((c[7292]|0)==-1)){c[f>>2]=29168;c[f+4>>2]=16;c[f+8>>2]=0;Gj(29168,f,116)}ip(b,28168,(c[7293]|0)-1|0);c[7041]=0;c[7040]=15048;if(!((c[7290]|0)==-1)){c[H>>2]=29160;c[H+4>>2]=16;c[H+8>>2]=0;Gj(29160,H,116)}ip(b,28160,(c[7291]|0)-1|0);i=e;return}function ip(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;lj(b|0);e=a+8|0;f=a+12|0;a=c[f>>2]|0;g=e|0;h=c[g>>2]|0;i=a-h>>2;do{if(i>>>0>d>>>0){j=h}else{k=d+1|0;if(i>>>0<k>>>0){mr(e,k-i|0);j=c[g>>2]|0;break}if(!(i>>>0>k>>>0)){j=h;break}l=h+(k<<2)|0;if((a|0)==(l|0)){j=h;break}c[f>>2]=a+(~((a-4+(-l|0)|0)>>>2)<<2);j=h}}while(0);h=c[j+(d<<2)>>2]|0;if((h|0)==0){m=j;n=m+(d<<2)|0;c[n>>2]=b;return}mj(h|0)|0;m=c[g>>2]|0;n=m+(d<<2)|0;c[n>>2]=b;return}function jp(a){a=a|0;kp(a);is(a);return}function kp(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c[b>>2]=15792;d=b+12|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=0;i=g;g=e;while(1){e=c[i+(h<<2)>>2]|0;if((e|0)==0){j=g;k=i}else{mj(e|0)|0;j=c[d>>2]|0;k=c[f>>2]|0}e=h+1|0;if(e>>>0<j-k>>2>>>0){h=e;i=k;g=j}else{break}}}Lj(b+144|0);j=c[f>>2]|0;if((j|0)==0){l=b|0;kj(l);return}f=c[d>>2]|0;if((f|0)!=(j|0)){c[d>>2]=f+(~((f-4+(-j|0)|0)>>>2)<<2)}if((b+24|0)==(j|0)){a[b+136|0]=0;l=b|0;kj(l);return}else{is(j);l=b|0;kj(l);return}}function lp(){var b=0,d=0;if((a[46448]|0)!=0){b=c[6990]|0;return b|0}if((sb(46448)|0)==0){b=c[6990]|0;return b|0}do{if((a[46456]|0)==0){if((sb(46456)|0)==0){break}hp(28264,1);c[6994]=28264;c[6992]=27976}}while(0);d=c[c[6992]>>2]|0;c[6996]=d;lj(d|0);c[6990]=27984;b=c[6990]|0;return b|0}function mp(a){a=a|0;var b=0;b=c[(lp()|0)>>2]|0;c[a>>2]=b;lj(b|0);return}function np(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;lj(d|0);return}function op(a){a=a|0;mj(c[a>>2]|0)|0;return}function pp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if(!((c[a>>2]|0)==-1)){c[e>>2]=b;c[e+4>>2]=16;c[e+8>>2]=0;Gj(a,e,116)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-b>>2>>>0>e>>>0)){g=mc(4)|0;h=g;Gr(h);Db(g|0,20328,156);return 0}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=mc(4)|0;h=g;Gr(h);Db(g|0,20328,156);return 0}else{i=d;return f|0}return 0}function qp(a){a=a|0;kj(a|0);is(a);return}function rp(a){a=a|0;if((a|0)==0){return}Ac[c[(c[a>>2]|0)+4>>2]&511](a);return}function sp(a){a=a|0;c[a+4>>2]=(I=c[7314]|0,c[7314]=I+1,I)+1;return}function tp(a){a=a|0;kj(a|0);is(a);return}function up(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if(!(e>>>0<128>>>0)){f=0;return f|0}f=(b[(c[(mb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;return f|0}function vp(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){f=c[h>>2]|0;if(f>>>0<128>>>0){j=b[(c[(mb()|0)>>2]|0)+(f<<1)>>1]|0}else{j=0}b[i>>1]=j;f=h+4|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+2|0}}return g|0}function wp(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((e|0)==(f|0)){g=e;return g|0}else{h=e}while(1){e=c[h>>2]|0;if(e>>>0<128>>>0){if(!((b[(c[(mb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0)){g=h;i=7;break}}e=h+4|0;if((e|0)==(f|0)){g=f;i=7;break}else{h=e}}if((i|0)==7){return g|0}return 0}function xp(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;a:do{if((e|0)==(f|0)){g=e}else{a=e;while(1){h=c[a>>2]|0;if(!(h>>>0<128>>>0)){g=a;break a}i=a+4|0;if((b[(c[(mb()|0)>>2]|0)+(h<<1)>>1]&d)<<16>>16==0){g=a;break a}if((i|0)==(f|0)){g=f;break}else{a=i}}}}while(0);return g|0}function yp(a,b){a=a|0;b=b|0;var d=0;if(!(b>>>0<128>>>0)){d=b;return d|0}d=c[(c[(pc()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function zp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(pc()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function Ap(a,b){a=a|0;b=b|0;var d=0;if(!(b>>>0<128>>>0)){d=b;return d|0}d=c[(c[(qc()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function Bp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(qc()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function Cp(a,b){a=a|0;b=b|0;return b<<24>>24|0}function Dp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){c[i>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+4|0}}return g|0}function Ep(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128>>>0?b&255:c)|0}function Fp(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==(e|0)){h=d;return h|0}b=((e-4+(-d|0)|0)>>>2)+1|0;i=d;j=g;while(1){g=c[i>>2]|0;a[j]=g>>>0<128>>>0?g&255:f;g=i+4|0;if((g|0)==(e|0)){break}else{i=g;j=j+1|0}}h=d+(b<<2)|0;return h|0}function Gp(b){b=b|0;var d=0;c[b>>2]=15904;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]|0)==0){break}js(d)}}while(0);kj(b|0);is(b);return}function Hp(b){b=b|0;var d=0;c[b>>2]=15904;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]|0)==0){break}js(d)}}while(0);kj(b|0);return}function Ip(a,b){a=a|0;b=b|0;var d=0;if(!(b<<24>>24>-1)){d=b;return d|0}d=c[(c[(pc()|0)>>2]|0)+((b&255)<<2)>>2]&255;return d|0}function Jp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24>-1){h=c[(c[(pc()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}else{h=d}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function Kp(a,b){a=a|0;b=b|0;var d=0;if(!(b<<24>>24>-1)){d=b;return d|0}d=c[(c[(qc()|0)>>2]|0)+(b<<24>>24<<2)>>2]&255;return d|0}function Lp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24>-1){h=c[(c[(qc()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}else{h=d}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function Mp(a,b){a=a|0;b=b|0;return b|0}function Np(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((c|0)==(d|0)){f=c;return f|0}else{g=c;h=e}while(1){a[h]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{g=e;h=h+1|0}}return f|0}function Op(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24>-1?b:c)|0}function Pp(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((c|0)==(d|0)){g=c;return g|0}else{h=c;i=f}while(1){f=a[h]|0;a[i]=f<<24>>24>-1?f:e;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{h=f;i=i+1|0}}return g|0}function Qp(a){a=a|0;kj(a|0);is(a);return}function Rp(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function Sp(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function Tp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Up(a){a=a|0;return 1}function Vp(a){a=a|0;return 1}function Wp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function Xp(a){a=a|0;return 1}function Yp(a){a=a|0;fp(a);is(a);return}function Zp(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;l=i;i=i+8|0;m=l|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=(e|0)==(f|0);a:do{if(p){c[k>>2]=h;c[g>>2]=e;q=e}else{r=e;while(1){s=r+4|0;if((c[r>>2]|0)==0){t=r;break}if((s|0)==(f|0)){t=f;break}else{r=s}}c[k>>2]=h;c[g>>2]=e;if(p|(h|0)==(j|0)){q=e;break}r=d;s=j;u=b+8|0;v=o|0;w=h;x=e;y=t;while(1){z=c[r+4>>2]|0;c[m>>2]=c[r>>2];c[m+4>>2]=z;z=_b(c[u>>2]|0)|0;A=zr(w,g,y-x>>2,s-w|0,d)|0;if((z|0)!=0){_b(z|0)|0}if((A|0)==(-1|0)){B=16;break}else if((A|0)==0){C=1;B=51;break}z=(c[k>>2]|0)+A|0;c[k>>2]=z;if((z|0)==(j|0)){B=49;break}if((y|0)==(f|0)){D=f;E=z;F=c[g>>2]|0}else{z=_b(c[u>>2]|0)|0;A=yr(v,0,d)|0;if((z|0)!=0){_b(z|0)|0}if((A|0)==-1){C=2;B=51;break}z=c[k>>2]|0;if(A>>>0>(s-z|0)>>>0){C=1;B=51;break}b:do{if((A|0)!=0){G=A;H=v;I=z;while(1){J=a[H]|0;c[k>>2]=I+1;a[I]=J;J=G-1|0;if((J|0)==0){break b}G=J;H=H+1|0;I=c[k>>2]|0}}}while(0);z=(c[g>>2]|0)+4|0;c[g>>2]=z;c:do{if((z|0)==(f|0)){K=f}else{A=z;while(1){I=A+4|0;if((c[A>>2]|0)==0){K=A;break c}if((I|0)==(f|0)){K=f;break}else{A=I}}}}while(0);D=K;E=c[k>>2]|0;F=z}if((F|0)==(f|0)|(E|0)==(j|0)){q=F;break a}else{w=E;x=F;y=D}}if((B|0)==16){c[k>>2]=w;d:do{if((x|0)==(c[g>>2]|0)){L=x}else{y=x;v=w;while(1){s=c[y>>2]|0;r=_b(c[u>>2]|0)|0;A=yr(v,s,n)|0;if((r|0)!=0){_b(r|0)|0}if((A|0)==-1){L=y;break d}r=(c[k>>2]|0)+A|0;c[k>>2]=r;A=y+4|0;if((A|0)==(c[g>>2]|0)){L=A;break}else{y=A;v=r}}}}while(0);c[g>>2]=L;C=2;i=l;return C|0}else if((B|0)==49){q=c[g>>2]|0;break}else if((B|0)==51){i=l;return C|0}}}while(0);C=(q|0)!=(f|0)|0;i=l;return C|0}function _p(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;l=i;i=i+8|0;m=l|0;n=m;o=(e|0)==(f|0);a:do{if(o){c[k>>2]=h;c[g>>2]=e;p=e}else{q=e;while(1){r=q+1|0;if((a[q]|0)==0){s=q;break}if((r|0)==(f|0)){s=f;break}else{q=r}}c[k>>2]=h;c[g>>2]=e;if(o|(h|0)==(j|0)){p=e;break}q=d;r=j;t=b+8|0;u=h;v=e;w=s;while(1){x=c[q+4>>2]|0;c[m>>2]=c[q>>2];c[m+4>>2]=x;y=w;x=_b(c[t>>2]|0)|0;z=vr(u,g,y-v|0,r-u>>2,d)|0;if((x|0)!=0){_b(x|0)|0}if((z|0)==(-1|0)){A=16;break}else if((z|0)==0){B=2;A=50;break}x=(c[k>>2]|0)+(z<<2)|0;c[k>>2]=x;if((x|0)==(j|0)){A=48;break}z=c[g>>2]|0;if((w|0)==(f|0)){C=f;D=x;E=z}else{F=_b(c[t>>2]|0)|0;G=ur(x,z,1,d)|0;if((F|0)!=0){_b(F|0)|0}if((G|0)!=0){B=2;A=50;break}c[k>>2]=(c[k>>2]|0)+4;G=(c[g>>2]|0)+1|0;c[g>>2]=G;b:do{if((G|0)==(f|0)){H=f}else{F=G;while(1){z=F+1|0;if((a[F]|0)==0){H=F;break b}if((z|0)==(f|0)){H=f;break}else{F=z}}}}while(0);C=H;D=c[k>>2]|0;E=G}if((E|0)==(f|0)|(D|0)==(j|0)){p=E;break a}else{u=D;v=E;w=C}}if((A|0)==16){c[k>>2]=u;c:do{if((v|0)==(c[g>>2]|0)){I=v}else{w=u;r=v;while(1){q=_b(c[t>>2]|0)|0;F=ur(w,r,y-r|0,n)|0;if((q|0)!=0){_b(q|0)|0}if((F|0)==0){J=r+1|0}else if((F|0)==(-1|0)){A=27;break}else if((F|0)==(-2|0)){A=28;break}else{J=r+F|0}F=(c[k>>2]|0)+4|0;c[k>>2]=F;if((J|0)==(c[g>>2]|0)){I=J;break c}else{w=F;r=J}}if((A|0)==27){c[g>>2]=r;B=2;i=l;return B|0}else if((A|0)==28){c[g>>2]=r;B=1;i=l;return B|0}}}while(0);c[g>>2]=I;B=(I|0)!=(f|0)|0;i=l;return B|0}else if((A|0)==48){p=c[g>>2]|0;break}else if((A|0)==50){i=l;return B|0}}}while(0);B=(p|0)!=(f|0)|0;i=l;return B|0}function $p(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+8|0;c[g>>2]=e;e=h|0;j=_b(c[b+8>>2]|0)|0;b=yr(e,0,d)|0;if((j|0)!=0){_b(j|0)|0}if((b|0)==(-1|0)|(b|0)==0){k=2;i=h;return k|0}j=b-1|0;b=c[g>>2]|0;if(j>>>0>(f-b|0)>>>0){k=1;i=h;return k|0}if((j|0)==0){k=0;i=h;return k|0}else{l=j;m=e;n=b}while(1){b=a[m]|0;c[g>>2]=n+1;a[n]=b;b=l-1|0;if((b|0)==0){k=0;break}l=b;m=m+1|0;n=c[g>>2]|0}i=h;return k|0}function aq(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;a=_b(c[b>>2]|0)|0;d=xr(0,0,4)|0;if((a|0)!=0){_b(a|0)|0}if((d|0)!=0){e=-1;return e|0}d=c[b>>2]|0;if((d|0)==0){e=1;return e|0}b=_b(d|0)|0;if((b|0)==0){e=0;return e|0}_b(b|0)|0;e=0;return e|0}function bq(a){a=a|0;return 0}function cq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((f|0)==0|(d|0)==(e|0)){g=0;return g|0}h=e;i=a+8|0;a=d;d=0;j=0;while(1){k=_b(c[i>>2]|0)|0;l=tr(a,h-a|0,b)|0;if((k|0)!=0){_b(k|0)|0}if((l|0)==0){m=1;n=a+1|0}else if((l|0)==(-1|0)|(l|0)==(-2|0)){g=d;o=15;break}else{m=l;n=a+l|0}l=m+d|0;k=j+1|0;if(k>>>0>=f>>>0|(n|0)==(e|0)){g=l;o=15;break}else{a=n;d=l;j=k}}if((o|0)==15){return g|0}return 0}function dq(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;do{if((b|0)==0){d=1}else{a=_b(b|0)|0;if((a|0)==0){d=4;break}_b(a|0)|0;d=4}}while(0);return d|0}function eq(a){a=a|0;kj(a|0);is(a);return}function fq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=gq(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function gq(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;do{if((l&2|0)!=0){if((i-h|0)<3){m=1;return m|0}else{c[j>>2]=h+1;a[h]=-17;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-69;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-65;break}}}while(0);h=f;l=c[g>>2]|0;if(!(l>>>0<f>>>0)){m=0;return m|0}d=i;i=l;a:while(1){l=b[i>>1]|0;n=l&65535;if(n>>>0>k>>>0){m=2;o=26;break}do{if((l&65535)>>>0<128>>>0){p=c[j>>2]|0;if((d-p|0)<1){m=1;o=26;break a}c[j>>2]=p+1;a[p]=l}else{if((l&65535)>>>0<2048>>>0){p=c[j>>2]|0;if((d-p|0)<2){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>6|192;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((l&65535)>>>0<55296>>>0){p=c[j>>2]|0;if((d-p|0)<3){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if(!((l&65535)>>>0<56320>>>0)){if((l&65535)>>>0<57344>>>0){m=2;o=26;break a}p=c[j>>2]|0;if((d-p|0)<3){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((h-i|0)<4){m=1;o=26;break a}p=i+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;o=26;break a}if((d-(c[j>>2]|0)|0)<4){m=1;o=26;break a}r=n&960;if(((r<<10)+65536|n<<10&64512|q&1023)>>>0>k>>>0){m=2;o=26;break a}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=p>>>2|240;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=n>>>2&15|p<<4&48|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n<<4&48|q>>>6&15|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=q&63|128}}while(0);n=(c[g>>2]|0)+2|0;c[g>>2]=n;if(n>>>0<f>>>0){i=n}else{m=0;o=26;break}}if((o|0)==26){return m|0}return 0}function hq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=iq(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function iq(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;c[g>>2]=e;c[j>>2]=h;h=c[g>>2]|0;do{if((l&4|0)==0){m=h}else{if((f-h|0)<=2){m=h;break}if(!((a[h]|0)==-17)){m=h;break}if(!((a[h+1|0]|0)==-69)){m=h;break}if(!((a[h+2|0]|0)==-65)){m=h;break}e=h+3|0;c[g>>2]=e;m=e}}while(0);a:do{if(m>>>0<f>>>0){h=f;l=i;e=c[j>>2]|0;n=m;b:while(1){if(!(e>>>0<i>>>0)){o=n;break a}p=a[n]|0;q=p&255;if(q>>>0>k>>>0){r=2;s=41;break}do{if(p<<24>>24>-1){b[e>>1]=p&255;c[g>>2]=n+1}else{if((p&255)>>>0<194>>>0){r=2;s=41;break b}if((p&255)>>>0<224>>>0){if((h-n|0)<2){r=1;s=41;break b}t=d[n+1|0]|0;if((t&192|0)!=128){r=2;s=41;break b}u=t&63|q<<6&1984;if(u>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=u;c[g>>2]=n+2;break}if((p&255)>>>0<240>>>0){if((h-n|0)<3){r=1;s=41;break b}u=a[n+1|0]|0;t=a[n+2|0]|0;if((q|0)==224){if(!((u&-32)<<24>>24==-96)){r=2;s=41;break b}}else if((q|0)==237){if(!((u&-32)<<24>>24==-128)){r=2;s=41;break b}}else{if(!((u&-64)<<24>>24==-128)){r=2;s=41;break b}}v=t&255;if((v&192|0)!=128){r=2;s=41;break b}t=(u&255)<<6&4032|q<<12|v&63;if((t&65535)>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=t;c[g>>2]=n+3;break}if(!((p&255)>>>0<245>>>0)){r=2;s=41;break b}if((h-n|0)<4){r=1;s=41;break b}t=a[n+1|0]|0;v=a[n+2|0]|0;u=a[n+3|0]|0;if((q|0)==240){if(!((t+112&255)>>>0<48>>>0)){r=2;s=41;break b}}else if((q|0)==244){if(!((t&-16)<<24>>24==-128)){r=2;s=41;break b}}else{if(!((t&-64)<<24>>24==-128)){r=2;s=41;break b}}w=v&255;if((w&192|0)!=128){r=2;s=41;break b}v=u&255;if((v&192|0)!=128){r=2;s=41;break b}if((l-e|0)<4){r=1;s=41;break b}u=q&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296;u=e+2|0;c[j>>2]=u;b[u>>1]=y|t&960|56320;c[g>>2]=(c[g>>2]|0)+4}}while(0);q=(c[j>>2]|0)+2|0;c[j>>2]=q;p=c[g>>2]|0;if(p>>>0<f>>>0){e=q;n=p}else{o=p;break a}}if((s|0)==41){return r|0}}else{o=m}}while(0);r=o>>>0<f>>>0|0;return r|0}function jq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function kq(a){a=a|0;return 0}function lq(a){a=a|0;return 0}function mq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return nq(c,d,e,1114111,0)|0}function nq(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if(!((a[b]|0)==-17)){h=b;break}if(!((a[b+1|0]|0)==-69)){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);a:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=0;j=h;b:while(1){k=a[j]|0;l=k&255;if(l>>>0>f>>>0){m=j;break a}do{if(k<<24>>24>-1){n=j+1|0;o=i}else{if((k&255)>>>0<194>>>0){m=j;break a}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break a}p=d[j+1|0]|0;if((p&192|0)!=128){m=j;break a}if((p&63|l<<6&1984)>>>0>f>>>0){m=j;break a}n=j+2|0;o=i;break}if((k&255)>>>0<240>>>0){q=j;if((g-q|0)<3){m=j;break a}p=a[j+1|0]|0;r=a[j+2|0]|0;if((l|0)==224){if(!((p&-32)<<24>>24==-96)){s=21;break b}}else if((l|0)==237){if(!((p&-32)<<24>>24==-128)){s=23;break b}}else{if(!((p&-64)<<24>>24==-128)){s=25;break b}}t=r&255;if((t&192|0)!=128){m=j;break a}if(((p&255)<<6&4032|l<<12&61440|t&63)>>>0>f>>>0){m=j;break a}n=j+3|0;o=i;break}if(!((k&255)>>>0<245>>>0)){m=j;break a}u=j;if((g-u|0)<4){m=j;break a}if((e-i|0)>>>0<2>>>0){m=j;break a}t=a[j+1|0]|0;p=a[j+2|0]|0;r=a[j+3|0]|0;if((l|0)==240){if(!((t+112&255)>>>0<48>>>0)){s=34;break b}}else if((l|0)==244){if(!((t&-16)<<24>>24==-128)){s=36;break b}}else{if(!((t&-64)<<24>>24==-128)){s=38;break b}}v=p&255;if((v&192|0)!=128){m=j;break a}p=r&255;if((p&192|0)!=128){m=j;break a}if(((t&255)<<12&258048|l<<18&1835008|v<<6&4032|p&63)>>>0>f>>>0){m=j;break a}n=j+4|0;o=i+1|0}}while(0);l=o+1|0;if(n>>>0<c>>>0&l>>>0<e>>>0){i=l;j=n}else{m=n;break a}}if((s|0)==21){w=q-b|0;return w|0}else if((s|0)==23){w=q-b|0;return w|0}else if((s|0)==25){w=q-b|0;return w|0}else if((s|0)==34){w=u-b|0;return w|0}else if((s|0)==36){w=u-b|0;return w|0}else if((s|0)==38){w=u-b|0;return w|0}}else{m=h}}while(0);w=m-b|0;return w|0}function oq(a){a=a|0;return 4}function pq(a){a=a|0;kj(a|0);is(a);return}function qq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=rq(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function rq(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;do{if((j&2|0)!=0){if((g-f|0)<3){k=1;return k|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(!(f>>>0<d>>>0)){k=0;return k|0}j=g;g=f;a:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>i>>>0){k=2;l=19;break}do{if(f>>>0<128>>>0){b=c[h>>2]|0;if((j-b|0)<1){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f}else{if(f>>>0<2048>>>0){b=c[h>>2]|0;if((j-b|0)<2){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>6|192;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}b=c[h>>2]|0;m=j-b|0;if(f>>>0<65536>>>0){if((m|0)<3){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>12|224;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f>>>6&63|128;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f&63|128;break}else{if((m|0)<4){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>18|240;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>12&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>6&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{k=0;l=19;break}}if((l|0)==19){return k|0}return 0}function sq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=tq(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function tq(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[f>>2]=b;c[i>>2]=g;g=c[f>>2]|0;do{if((k&4|0)==0){l=g}else{if((e-g|0)<=2){l=g;break}if(!((a[g]|0)==-17)){l=g;break}if(!((a[g+1|0]|0)==-69)){l=g;break}if(!((a[g+2|0]|0)==-65)){l=g;break}b=g+3|0;c[f>>2]=b;l=b}}while(0);a:do{if(l>>>0<e>>>0){g=e;k=c[i>>2]|0;b=l;b:while(1){if(!(k>>>0<h>>>0)){m=b;break a}n=a[b]|0;o=n&255;do{if(n<<24>>24>-1){if(o>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=o;c[f>>2]=b+1}else{if((n&255)>>>0<194>>>0){p=2;q=40;break b}if((n&255)>>>0<224>>>0){if((g-b|0)<2){p=1;q=40;break b}r=d[b+1|0]|0;if((r&192|0)!=128){p=2;q=40;break b}s=r&63|o<<6&1984;if(s>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=s;c[f>>2]=b+2;break}if((n&255)>>>0<240>>>0){if((g-b|0)<3){p=1;q=40;break b}s=a[b+1|0]|0;r=a[b+2|0]|0;if((o|0)==237){if(!((s&-32)<<24>>24==-128)){p=2;q=40;break b}}else if((o|0)==224){if(!((s&-32)<<24>>24==-96)){p=2;q=40;break b}}else{if(!((s&-64)<<24>>24==-128)){p=2;q=40;break b}}t=r&255;if((t&192|0)!=128){p=2;q=40;break b}r=(s&255)<<6&4032|o<<12&61440|t&63;if(r>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=r;c[f>>2]=b+3;break}if(!((n&255)>>>0<245>>>0)){p=2;q=40;break b}if((g-b|0)<4){p=1;q=40;break b}r=a[b+1|0]|0;t=a[b+2|0]|0;s=a[b+3|0]|0;if((o|0)==240){if(!((r+112&255)>>>0<48>>>0)){p=2;q=40;break b}}else if((o|0)==244){if(!((r&-16)<<24>>24==-128)){p=2;q=40;break b}}else{if(!((r&-64)<<24>>24==-128)){p=2;q=40;break b}}u=t&255;if((u&192|0)!=128){p=2;q=40;break b}t=s&255;if((t&192|0)!=128){p=2;q=40;break b}s=(r&255)<<12&258048|o<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=s;c[f>>2]=b+4}}while(0);o=(c[i>>2]|0)+4|0;c[i>>2]=o;n=c[f>>2]|0;if(n>>>0<e>>>0){k=o;b=n}else{m=n;break a}}if((q|0)==40){return p|0}}else{m=l}}while(0);p=m>>>0<e>>>0|0;return p|0}function uq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function vq(a){a=a|0;return 0}function wq(a){a=a|0;return 0}function xq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return yq(c,d,e,1114111,0)|0}function yq(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if(!((a[b]|0)==-17)){h=b;break}if(!((a[b+1|0]|0)==-69)){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);a:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=1;j=h;b:while(1){k=a[j]|0;l=k&255;do{if(k<<24>>24>-1){if(l>>>0>f>>>0){m=j;break a}n=j+1|0}else{if((k&255)>>>0<194>>>0){m=j;break a}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break a}o=d[j+1|0]|0;if((o&192|0)!=128){m=j;break a}if((o&63|l<<6&1984)>>>0>f>>>0){m=j;break a}n=j+2|0;break}if((k&255)>>>0<240>>>0){p=j;if((g-p|0)<3){m=j;break a}o=a[j+1|0]|0;q=a[j+2|0]|0;if((l|0)==224){if(!((o&-32)<<24>>24==-96)){r=21;break b}}else if((l|0)==237){if(!((o&-32)<<24>>24==-128)){r=23;break b}}else{if(!((o&-64)<<24>>24==-128)){r=25;break b}}s=q&255;if((s&192|0)!=128){m=j;break a}if(((o&255)<<6&4032|l<<12&61440|s&63)>>>0>f>>>0){m=j;break a}n=j+3|0;break}if(!((k&255)>>>0<245>>>0)){m=j;break a}t=j;if((g-t|0)<4){m=j;break a}s=a[j+1|0]|0;o=a[j+2|0]|0;q=a[j+3|0]|0;if((l|0)==240){if(!((s+112&255)>>>0<48>>>0)){r=33;break b}}else if((l|0)==244){if(!((s&-16)<<24>>24==-128)){r=35;break b}}else{if(!((s&-64)<<24>>24==-128)){r=37;break b}}u=o&255;if((u&192|0)!=128){m=j;break a}o=q&255;if((o&192|0)!=128){m=j;break a}if(((s&255)<<12&258048|l<<18&1835008|u<<6&4032|o&63)>>>0>f>>>0){m=j;break a}n=j+4|0}}while(0);if(!(n>>>0<c>>>0&i>>>0<e>>>0)){m=n;break a}i=i+1|0;j=n}if((r|0)==21){v=p-b|0;return v|0}else if((r|0)==23){v=p-b|0;return v|0}else if((r|0)==25){v=p-b|0;return v|0}else if((r|0)==33){v=t-b|0;return v|0}else if((r|0)==35){v=t-b|0;return v|0}else if((r|0)==37){v=t-b|0;return v|0}}else{m=h}}while(0);v=m-b|0;return v|0}function zq(a){a=a|0;return 4}function Aq(a){a=a|0;kj(a|0);is(a);return}function Bq(a){a=a|0;kj(a|0);is(a);return}function Cq(a){a=a|0;c[a>>2]=15e3;Lj(a+12|0);kj(a|0);is(a);return}function Dq(a){a=a|0;c[a>>2]=15e3;Lj(a+12|0);kj(a|0);return}function Eq(a){a=a|0;c[a>>2]=14952;Lj(a+16|0);kj(a|0);is(a);return}function Fq(a){a=a|0;c[a>>2]=14952;Lj(a+16|0);kj(a|0);return}function Gq(b){b=b|0;return a[b+8|0]|0}function Hq(a){a=a|0;return c[a+8>>2]|0}function Iq(b){b=b|0;return a[b+9|0]|0}function Jq(a){a=a|0;return c[a+12>>2]|0}function Kq(a,b){a=a|0;b=b|0;Ij(a,b+12|0);return}function Lq(a,b){a=a|0;b=b|0;Ij(a,b+16|0);return}function Mq(a,b){a=a|0;b=b|0;Jj(a,8432,4);return}function Nq(a,b){a=a|0;b=b|0;Uj(a,8208,Br(8208)|0);return}function Oq(a,b){a=a|0;b=b|0;Jj(a,7984,5);return}function Pq(a,b){a=a|0;b=b|0;Uj(a,7736,Br(7736)|0);return}function Qq(b){b=b|0;var d=0;if((a[46544]|0)!=0){d=c[7144]|0;return d|0}if((sb(46544)|0)==0){d=c[7144]|0;return d|0}do{if((a[46432]|0)==0){if((sb(46432)|0)==0){break}ys(27504,0,168)|0;Rb(310,0,u|0)|0}}while(0);Mj(27504,11584)|0;Mj(27516,11576)|0;Mj(27528,11528)|0;Mj(27540,11464)|0;Mj(27552,11400)|0;Mj(27564,11344)|0;Mj(27576,11328)|0;Mj(27588,11320)|0;Mj(27600,11312)|0;Mj(27612,11240)|0;Mj(27624,11200)|0;Mj(27636,11192)|0;Mj(27648,11136)|0;Mj(27660,11080)|0;c[7144]=27504;d=c[7144]|0;return d|0}function Rq(b){b=b|0;var d=0;if((a[46488]|0)!=0){d=c[7122]|0;return d|0}if((sb(46488)|0)==0){d=c[7122]|0;return d|0}do{if((a[46408]|0)==0){if((sb(46408)|0)==0){break}ys(26760,0,168)|0;Rb(174,0,u|0)|0}}while(0);Xj(26760,12264)|0;Xj(26772,12232)|0;Xj(26784,12200)|0;Xj(26796,12160)|0;Xj(26808,12080)|0;Xj(26820,12048)|0;Xj(26832,12e3)|0;Xj(26844,11944)|0;Xj(26856,11808)|0;Xj(26868,11784)|0;Xj(26880,11704)|0;Xj(26892,11688)|0;Xj(26904,11672)|0;Xj(26916,11640)|0;c[7122]=26760;d=c[7122]|0;return d|0}function Sq(b){b=b|0;var d=0;if((a[46536]|0)!=0){d=c[7142]|0;return d|0}if((sb(46536)|0)==0){d=c[7142]|0;return d|0}do{if((a[46424]|0)==0){if((sb(46424)|0)==0){break}ys(27216,0,288)|0;Rb(196,0,u|0)|0}}while(0);Mj(27216,888)|0;Mj(27228,808)|0;Mj(27240,752)|0;Mj(27252,736)|0;Mj(27264,648)|0;Mj(27276,640)|0;Mj(27288,632)|0;Mj(27300,624)|0;Mj(27312,584)|0;Mj(27324,544)|0;Mj(27336,528)|0;Mj(27348,472)|0;Mj(27360,408)|0;Mj(27372,392)|0;Mj(27384,312)|0;Mj(27396,304)|0;Mj(27408,648)|0;Mj(27420,256)|0;Mj(27432,248)|0;Mj(27444,12472)|0;Mj(27456,12464)|0;Mj(27468,12456)|0;Mj(27480,12408)|0;Mj(27492,12352)|0;c[7142]=27216;d=c[7142]|0;return d|0}function Tq(b){b=b|0;var d=0;if((a[46480]|0)!=0){d=c[7120]|0;return d|0}if((sb(46480)|0)==0){d=c[7120]|0;return d|0}do{if((a[46400]|0)==0){if((sb(46400)|0)==0){break}ys(26472,0,288)|0;Rb(146,0,u|0)|0}}while(0);Xj(26472,2224)|0;Xj(26484,2136)|0;Xj(26496,2064)|0;Xj(26508,1968)|0;Xj(26520,1224)|0;Xj(26532,1864)|0;Xj(26544,1752)|0;Xj(26556,1648)|0;Xj(26568,1560)|0;Xj(26580,1456)|0;Xj(26592,1416)|0;Xj(26604,1376)|0;Xj(26616,1360)|0;Xj(26628,1328)|0;Xj(26640,1312)|0;Xj(26652,1280)|0;Xj(26664,1224)|0;Xj(26676,1160)|0;Xj(26688,1104)|0;Xj(26700,1e3)|0;Xj(26712,984)|0;Xj(26724,968)|0;Xj(26736,952)|0;Xj(26748,904)|0;c[7120]=26472;d=c[7120]|0;return d|0}function Uq(b){b=b|0;var d=0;if((a[46552]|0)!=0){d=c[7146]|0;return d|0}if((sb(46552)|0)==0){d=c[7146]|0;return d|0}do{if((a[46440]|0)==0){if((sb(46440)|0)==0){break}ys(27672,0,288)|0;Rb(144,0,u|0)|0}}while(0);Mj(27672,2608)|0;Mj(27684,2456)|0;c[7146]=27672;d=c[7146]|0;return d|0}function Vq(b){b=b|0;var d=0;if((a[46496]|0)!=0){d=c[7124]|0;return d|0}if((sb(46496)|0)==0){d=c[7124]|0;return d|0}do{if((a[46416]|0)==0){if((sb(46416)|0)==0){break}ys(26928,0,288)|0;Rb(280,0,u|0)|0}}while(0);Xj(26928,3016)|0;Xj(26940,2888)|0;c[7124]=26928;d=c[7124]|0;return d|0}function Wq(b){b=b|0;if((a[46560]|0)!=0){return 28592}if((sb(46560)|0)==0){return 28592}Jj(28592,7392,8);Rb(304,28592,u|0)|0;return 28592}function Xq(b){b=b|0;if((a[46504]|0)!=0){return 28504}if((sb(46504)|0)==0){return 28504}Uj(28504,7144,Br(7144)|0);Rb(224,28504,u|0)|0;return 28504}function Yq(b){b=b|0;if((a[46584]|0)!=0){return 28640}if((sb(46584)|0)==0){return 28640}Jj(28640,6928,8);Rb(304,28640,u|0)|0;return 28640}function Zq(b){b=b|0;if((a[46528]|0)!=0){return 28552}if((sb(46528)|0)==0){return 28552}Uj(28552,6672,Br(6672)|0);Rb(224,28552,u|0)|0;return 28552}function _q(b){b=b|0;if((a[46576]|0)!=0){return 28624}if((sb(46576)|0)==0){return 28624}Jj(28624,6424,20);Rb(304,28624,u|0)|0;return 28624}function $q(b){b=b|0;if((a[46520]|0)!=0){return 28536}if((sb(46520)|0)==0){return 28536}Uj(28536,6080,Br(6080)|0);Rb(224,28536,u|0)|0;return 28536}function ar(b){b=b|0;if((a[46568]|0)!=0){return 28608}if((sb(46568)|0)==0){return 28608}Jj(28608,5776,11);Rb(304,28608,u|0)|0;return 28608}function br(b){b=b|0;if((a[46512]|0)!=0){return 28520}if((sb(46512)|0)==0){return 28520}Uj(28520,5480,Br(5480)|0);Rb(224,28520,u|0)|0;return 28520}function cr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Sb()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=+ws(b,g,c[6998]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function dr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Sb()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=+ws(b,g,c[6998]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function er(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Sb()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=+ws(b,g,c[6998]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=l;i=f;return+h}function fr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g|0;do{if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0}else{if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;break}l=Sb()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);n=Fb(b|0,h|0,f|0,c[6998]|0)|0;o=c[l>>2]|0;if((o|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)!=34){j=K;k=n;break}c[e>>2]=4;j=-1;k=-1}}while(0);i=g;return(K=j,k)|0}function gr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Sb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);m=Fb(b|0,h|0,f|0,c[6998]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function hr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Sb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);m=Fb(b|0,h|0,f|0,c[6998]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function ir(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Sb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);m=Fb(b|0,h|0,f|0,c[6998]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>65535>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function jr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(K=j,k)|0}l=Sb()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);n=Ib(b|0,h|0,f|0,c[6998]|0)|0;f=K;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(K=j,k)|0}if((b|0)==34){c[e>>2]=4;e=0;b=(f|0)>(e|0)|(f|0)==(e|0)&n>>>0>0>>>0;i=g;return(K=b?2147483647:-2147483648,b?-1:0)|0}else{j=f;k=n;i=g;return(K=j,k)|0}return 0}function kr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=Sb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);m=Ib(b|0,h|0,f|0,c[6998]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}do{if((b|0)==34){c[e>>2]=4;d=0;if((f|0)>(d|0)|(f|0)==(d|0)&m>>>0>0>>>0){j=2147483647}else{break}i=g;return j|0}else{d=-1;if((f|0)<(d|0)|(f|0)==(d|0)&m>>>0<-2147483648>>>0){c[e>>2]=4;break}d=0;if((f|0)>(d|0)|(f|0)==(d|0)&m>>>0>2147483647>>>0){c[e>>2]=4;j=2147483647;i=g;return j|0}else{j=m;i=g;return j|0}}}while(0);j=-2147483648;i=g;return j|0}function lr(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;d=(c[a>>2]|0)+(c[b+4>>2]|0)|0;a=d;e=c[b>>2]|0;if((e&1|0)==0){f=e;Ac[f&511](a);return}else{f=c[(c[d>>2]|0)+(e-1)>>2]|0;Ac[f&511](a);return}}function mr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=b+4|0;g=c[f>>2]|0;h=c[e>>2]|0;i=g;if(!(h-i>>2>>>0<d>>>0)){j=d;k=g;do{if((k|0)==0){l=0}else{c[k>>2]=0;l=c[f>>2]|0}k=l+4|0;c[f>>2]=k;j=j-1|0;}while((j|0)!=0);return}j=b+16|0;k=b|0;l=c[k>>2]|0;g=i-l>>2;i=g+d|0;if(i>>>0>1073741823>>>0){gp(0)}m=h-l|0;do{if(m>>2>>>0<536870911>>>0){l=m>>1;h=l>>>0<i>>>0?i:l;if((h|0)==0){n=0;o=0;break}l=b+128|0;if(!((a[l]|0)==0&h>>>0<29>>>0)){p=h;q=11;break}a[l]=1;n=j;o=h}else{p=1073741823;q=11}}while(0);if((q|0)==11){n=gs(p<<2)|0;o=p}p=d;d=n+(g<<2)|0;do{if((d|0)==0){r=0}else{c[d>>2]=0;r=d}d=r+4|0;p=p-1|0;}while((p|0)!=0);p=c[k>>2]|0;r=(c[f>>2]|0)-p|0;q=n+(g-(r>>2)<<2)|0;g=p;xs(q|0,g|0,r)|0;c[k>>2]=q;c[f>>2]=d;c[e>>2]=n+(o<<2);if((p|0)==0){return}if((j|0)==(p|0)){a[b+128|0]=0;return}else{is(g);return}}function nr(a){a=a|0;Wj(27204);Wj(27192);Wj(27180);Wj(27168);Wj(27156);Wj(27144);Wj(27132);Wj(27120);Wj(27108);Wj(27096);Wj(27084);Wj(27072);Wj(27060);Wj(27048);Wj(27036);Wj(27024);Wj(27012);Wj(27e3);Wj(26988);Wj(26976);Wj(26964);Wj(26952);Wj(26940);Wj(26928);return}function or(a){a=a|0;Lj(27948);Lj(27936);Lj(27924);Lj(27912);Lj(27900);Lj(27888);Lj(27876);Lj(27864);Lj(27852);Lj(27840);Lj(27828);Lj(27816);Lj(27804);Lj(27792);Lj(27780);Lj(27768);Lj(27756);Lj(27744);Lj(27732);Lj(27720);Lj(27708);Lj(27696);Lj(27684);Lj(27672);return}function pr(a){a=a|0;Wj(26748);Wj(26736);Wj(26724);Wj(26712);Wj(26700);Wj(26688);Wj(26676);Wj(26664);Wj(26652);Wj(26640);Wj(26628);Wj(26616);Wj(26604);Wj(26592);Wj(26580);Wj(26568);Wj(26556);Wj(26544);Wj(26532);Wj(26520);Wj(26508);Wj(26496);Wj(26484);Wj(26472);return}function qr(a){a=a|0;Lj(27492);Lj(27480);Lj(27468);Lj(27456);Lj(27444);Lj(27432);Lj(27420);Lj(27408);Lj(27396);Lj(27384);Lj(27372);Lj(27360);Lj(27348);Lj(27336);Lj(27324);Lj(27312);Lj(27300);Lj(27288);Lj(27276);Lj(27264);Lj(27252);Lj(27240);Lj(27228);Lj(27216);return}function rr(a){a=a|0;Wj(26916);Wj(26904);Wj(26892);Wj(26880);Wj(26868);Wj(26856);Wj(26844);Wj(26832);Wj(26820);Wj(26808);Wj(26796);Wj(26784);Wj(26772);Wj(26760);return}function sr(a){a=a|0;Lj(27660);Lj(27648);Lj(27636);Lj(27624);Lj(27612);Lj(27600);Lj(27588);Lj(27576);Lj(27564);Lj(27552);Lj(27540);Lj(27528);Lj(27516);Lj(27504);return}function tr(a,b,c){a=a|0;b=b|0;c=c|0;return ur(0,a,b,(c|0)!=0?c:25728)|0}function ur(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;j=((f|0)==0?25720:f)|0;f=c[j>>2]|0;a:do{if((d|0)==0){if((f|0)==0){k=0}else{break}i=g;return k|0}else{if((b|0)==0){l=h;c[h>>2]=l;m=l}else{m=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){l=a[d]|0;n=l&255;if(l<<24>>24>-1){c[m>>2]=n;k=l<<24>>24!=0|0;i=g;return k|0}else{l=n-194|0;if(l>>>0>50>>>0){break a}o=d+1|0;p=c[13840+(l<<2)>>2]|0;q=e-1|0;break}}else{o=d;p=f;q=e}}while(0);b:do{if((q|0)==0){r=p}else{l=a[o]|0;n=(l&255)>>>3;if((n-16|n+(p>>26))>>>0>7>>>0){break a}else{s=o;t=p;u=q;v=l}while(1){s=s+1|0;t=(v&255)-128|t<<6;u=u-1|0;if((t|0)>=0){break}if((u|0)==0){r=t;break b}v=a[s]|0;if(((v&255)-128|0)>>>0>63>>>0){break a}}c[j>>2]=0;c[m>>2]=t;k=e-u|0;i=g;return k|0}}while(0);c[j>>2]=r;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;c[(Sb()|0)>>2]=84;k=-1;i=g;return k|0}function vr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;g=i;i=i+1032|0;h=g+1024|0;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=g|0;m=k?e:256;e=k?a:l;a:do{if((j|0)==0|(m|0)==0){n=d;o=0;p=m;q=e;r=j}else{a=m;s=0;t=e;u=d;v=j;while(1){w=u>>>2;x=w>>>0>=a>>>0;if(!(x|u>>>0>131>>>0)){n=u;o=s;p=a;q=t;r=v;break a}y=x?a:w;z=u-y|0;w=wr(t,h,y,f)|0;if((w|0)==-1){break}if((t|0)==(l|0)){A=l;B=a}else{A=t+(w<<2)|0;B=a-w|0}y=w+s|0;w=c[h>>2]|0;if((w|0)==0|(B|0)==0){n=z;o=y;p=B;q=A;r=w;break a}else{a=B;s=y;t=A;u=z;v=w}}n=z;o=-1;p=0;q=t;r=c[h>>2]|0}}while(0);b:do{if((r|0)==0){C=o}else{if((p|0)==0|(n|0)==0){C=o;break}else{D=p;E=o;F=q;G=n;H=r}while(1){I=ur(F,H,G,f)|0;if((I+2|0)>>>0<3>>>0){break}z=(c[h>>2]|0)+I|0;c[h>>2]=z;A=D-1|0;B=E+1|0;if((A|0)==0|(G|0)==(I|0)){C=B;break b}else{D=A;E=B;F=F+4|0;G=G-I|0;H=z}}if((I|0)==(-1|0)){C=-1;break}else if((I|0)==0){c[h>>2]=0;C=E;break}else{c[f>>2]=0;C=E;break}}}while(0);if(!k){J=1024;K=0;i=g;return C|0}c[b>>2]=c[h>>2];J=1024;K=0;i=g;return C|0}function wr(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;h=c[e>>2]|0;do{if((g|0)==0){i=5}else{j=g|0;k=c[j>>2]|0;if((k|0)==0){i=5;break}if((b|0)==0){l=k;m=h;n=f;i=16;break}c[j>>2]=0;o=k;p=h;q=b;r=f;i=36}}while(0);if((i|0)==5){if((b|0)==0){s=h;t=f;i=7}else{u=h;v=b;w=f;i=6}}a:while(1){if((i|0)==6){i=0;if((w|0)==0){x=f;i=53;break}else{y=w;z=v;A=u}while(1){h=a[A]|0;do{if(((h&255)-1|0)>>>0<127>>>0){if((A&3|0)==0&y>>>0>3>>>0){B=y;C=z;D=A}else{E=A;F=z;G=y;H=h;break}while(1){I=c[D>>2]|0;if(((I-16843009|I)&-2139062144|0)!=0){i=30;break}c[C>>2]=I&255;c[C+4>>2]=d[D+1|0]|0;c[C+8>>2]=d[D+2|0]|0;J=D+4|0;K=C+16|0;c[C+12>>2]=d[D+3|0]|0;L=B-4|0;if(L>>>0>3>>>0){B=L;C=K;D=J}else{i=31;break}}if((i|0)==30){i=0;E=D;F=C;G=B;H=I&255;break}else if((i|0)==31){i=0;E=J;F=K;G=L;H=a[J]|0;break}}else{E=A;F=z;G=y;H=h}}while(0);M=H&255;if(!((M-1|0)>>>0<127>>>0)){break}c[F>>2]=M;h=G-1|0;if((h|0)==0){x=f;i=53;break a}else{y=h;z=F+4|0;A=E+1|0}}h=M-194|0;if(h>>>0>50>>>0){N=G;O=F;P=E;i=47;break}o=c[13840+(h<<2)>>2]|0;p=E+1|0;q=F;r=G;i=36;continue}else if((i|0)==7){i=0;h=a[s]|0;do{if(((h&255)-1|0)>>>0<127>>>0){if((s&3|0)!=0){Q=s;R=t;S=h;break}g=c[s>>2]|0;if(((g-16843009|g)&-2139062144|0)==0){T=t;U=s}else{Q=s;R=t;S=g&255;break}do{U=U+4|0;T=T-4|0;V=c[U>>2]|0;}while(((V-16843009|V)&-2139062144|0)==0);Q=U;R=T;S=V&255}else{Q=s;R=t;S=h}}while(0);h=S&255;if((h-1|0)>>>0<127>>>0){s=Q+1|0;t=R-1|0;i=7;continue}g=h-194|0;if(g>>>0>50>>>0){N=R;O=b;P=Q;i=47;break}l=c[13840+(g<<2)>>2]|0;m=Q+1|0;n=R;i=16;continue}else if((i|0)==16){i=0;g=(d[m]|0)>>>3;if((g-16|g+(l>>26))>>>0>7>>>0){i=17;break}g=m+1|0;do{if((l&33554432|0)==0){W=g}else{if(((d[g]|0)-128|0)>>>0>63>>>0){i=20;break a}h=m+2|0;if((l&524288|0)==0){W=h;break}if(((d[h]|0)-128|0)>>>0>63>>>0){i=23;break a}W=m+3|0}}while(0);s=W;t=n-1|0;i=7;continue}else if((i|0)==36){i=0;g=d[p]|0;h=g>>>3;if((h-16|h+(o>>26))>>>0>7>>>0){i=37;break}h=p+1|0;X=g-128|o<<6;do{if((X|0)<0){g=(d[h]|0)-128|0;if(g>>>0>63>>>0){i=40;break a}k=p+2|0;Y=g|X<<6;if((Y|0)>=0){Z=Y;_=k;break}g=(d[k]|0)-128|0;if(g>>>0>63>>>0){i=43;break a}Z=g|Y<<6;_=p+3|0}else{Z=X;_=h}}while(0);c[q>>2]=Z;u=_;v=q+4|0;w=r-1|0;i=6;continue}}if((i|0)==17){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==20){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==23){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==37){$=o;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==40){$=X;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==43){$=Y;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==53){return x|0}if((i|0)==46){if(($|0)==0){N=ca;O=ba;P=aa;i=47}else{da=ba;ea=aa}}do{if((i|0)==47){if((a[P]|0)!=0){da=O;ea=P;break}if((O|0)!=0){c[O>>2]=0;c[e>>2]=0}x=f-N|0;return x|0}}while(0);c[(Sb()|0)>>2]=84;if((da|0)==0){x=-1;return x|0}c[e>>2]=ea;x=-1;return x|0}function xr(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){k=h;c[h>>2]=k;l=k}else{l=b}k=a[e]|0;m=k&255;if(k<<24>>24>-1){c[l>>2]=m;j=k<<24>>24!=0|0;i=g;return j|0}k=m-194|0;if(k>>>0>50>>>0){break}m=e+1|0;n=c[13840+(k<<2)>>2]|0;if(f>>>0<4>>>0){if((n&-2147483648>>>(((f*6|0)-6|0)>>>0)|0)!=0){break}}k=d[m]|0;m=k>>>3;if((m-16|m+(n>>26))>>>0>7>>>0){break}m=k-128|n<<6;if((m|0)>=0){c[l>>2]=m;j=2;i=g;return j|0}n=(d[e+2|0]|0)-128|0;if(n>>>0>63>>>0){break}k=n|m<<6;if((k|0)>=0){c[l>>2]=k;j=3;i=g;return j|0}m=(d[e+3|0]|0)-128|0;if(m>>>0>63>>>0){break}c[l>>2]=m|k<<6;j=4;i=g;return j|0}}while(0);c[(Sb()|0)>>2]=84;j=-1;i=g;return j|0}function yr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((b|0)==0){f=1;return f|0}if(d>>>0<128>>>0){a[b]=d;f=1;return f|0}if(d>>>0<2048>>>0){a[b]=d>>>6|192;a[b+1|0]=d&63|128;f=2;return f|0}if(d>>>0<55296>>>0|(d-57344|0)>>>0<8192>>>0){a[b]=d>>>12|224;a[b+1|0]=d>>>6&63|128;a[b+2|0]=d&63|128;f=3;return f|0}if((d-65536|0)>>>0<1048576>>>0){a[b]=d>>>18|240;a[b+1|0]=d>>>12&63|128;a[b+2|0]=d>>>6&63|128;a[b+3|0]=d&63|128;f=4;return f|0}else{c[(Sb()|0)>>2]=84;f=-1;return f|0}return 0}function zr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=i;i=i+264|0;g=f+256|0;h=f|0;j=c[b>>2]|0;c[g>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:h;a:do{if((j|0)==0|(l|0)==0){m=d;n=0;o=l;p=e;q=j}else{a=l;r=0;s=e;t=d;u=j;while(1){v=t>>>0>=a>>>0;if(!(v|t>>>0>32>>>0)){m=t;n=r;o=a;p=s;q=u;break a}w=v?a:t;x=t-w|0;v=Ar(s,g,w,0)|0;if((v|0)==-1){break}if((s|0)==(h|0)){y=h;z=a}else{y=s+v|0;z=a-v|0}w=v+r|0;v=c[g>>2]|0;if((v|0)==0|(z|0)==0){m=x;n=w;o=z;p=y;q=v;break a}else{a=z;r=w;s=y;t=x;u=v}}m=x;n=-1;o=0;p=s;q=c[g>>2]|0}}while(0);b:do{if((q|0)==0){A=n}else{if((o|0)==0|(m|0)==0){A=n;break}else{B=o;C=n;D=p;E=m;F=q}while(1){G=yr(D,c[F>>2]|0,0)|0;if((G+1|0)>>>0<2>>>0){break}x=(c[g>>2]|0)+4|0;c[g>>2]=x;y=E-1|0;z=C+1|0;if((B|0)==(G|0)|(y|0)==0){A=z;break b}else{B=B-G|0;C=z;D=D+G|0;E=y;F=x}}if((G|0)!=0){A=-1;break}c[g>>2]=0;A=C}}while(0);if(!k){H=256;I=0;i=f;return A|0}c[b>>2]=c[g>>2];H=256;I=0;i=f;return A|0}function Ar(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+8|0;g=f|0;if((b|0)==0){h=c[d>>2]|0;j=g|0;k=c[h>>2]|0;if((k|0)==0){l=0;i=f;return l|0}else{m=0;n=h;o=k}while(1){if(o>>>0>127>>>0){k=yr(j,o,0)|0;if((k|0)==-1){l=-1;p=26;break}else{q=k}}else{q=1}k=q+m|0;h=n+4|0;r=c[h>>2]|0;if((r|0)==0){l=k;p=26;break}else{m=k;n=h;o=r}}if((p|0)==26){i=f;return l|0}}a:do{if(e>>>0>3>>>0){o=e;n=b;m=c[d>>2]|0;while(1){q=c[m>>2]|0;if((q|0)==0){s=o;t=n;break a}if(q>>>0>127>>>0){j=yr(n,q,0)|0;if((j|0)==-1){l=-1;break}u=n+j|0;v=o-j|0;w=m}else{a[n]=q;u=n+1|0;v=o-1|0;w=c[d>>2]|0}q=w+4|0;c[d>>2]=q;if(v>>>0>3>>>0){o=v;n=u;m=q}else{s=v;t=u;break a}}i=f;return l|0}else{s=e;t=b}}while(0);b:do{if((s|0)==0){x=0}else{b=g|0;u=s;v=t;w=c[d>>2]|0;while(1){m=c[w>>2]|0;if((m|0)==0){p=24;break}if(m>>>0>127>>>0){n=yr(b,m,0)|0;if((n|0)==-1){l=-1;p=26;break}if(n>>>0>u>>>0){p=20;break}yr(v,c[w>>2]|0,0)|0;y=v+n|0;z=u-n|0;A=w}else{a[v]=m;y=v+1|0;z=u-1|0;A=c[d>>2]|0}m=A+4|0;c[d>>2]=m;if((z|0)==0){x=0;break b}else{u=z;v=y;w=m}}if((p|0)==20){l=e-u|0;i=f;return l|0}else if((p|0)==24){a[v]=0;x=u;break}else if((p|0)==26){i=f;return l|0}}}while(0);c[d>>2]=0;l=e-x|0;i=f;return l|0}function Br(a){a=a|0;var b=0;b=a;while(1){if((c[b>>2]|0)==0){break}else{b=b+4|0}}return b-a>>2|0}function Cr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0){return a|0}else{e=b;f=d;g=a}while(1){d=f-1|0;c[g>>2]=c[e>>2];if((d|0)==0){break}else{e=e+4|0;f=d;g=g+4|0}}return a|0}function Dr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e){return a|0}else{f=d}do{f=f-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2];}while((f|0)!=0);return a|0}else{if(e){return a|0}else{g=b;h=d;i=a}while(1){d=h-1|0;c[i>>2]=c[g>>2];if((d|0)==0){break}else{g=g+4|0;h=d;i=i+4|0}}return a|0}return 0}function Er(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)==0){return a|0}else{e=d;f=a}while(1){d=e-1|0;c[f>>2]=b;if((d|0)==0){break}else{e=d;f=f+4|0}}return a|0}function Fr(a){a=a|0;return}function Gr(a){a=a|0;c[a>>2]=14408;return}function Hr(a){a=a|0;is(a);return}function Ir(a){a=a|0;return}function Jr(a){a=a|0;return 8088}function Kr(a){a=a|0;Fr(a|0);return}function Lr(a){a=a|0;return}function Mr(a){a=a|0;return}function Nr(a){a=a|0;Fr(a|0);is(a);return}function Or(a){a=a|0;Fr(a|0);is(a);return}function Pr(a){a=a|0;Fr(a|0);is(a);return}function Qr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+56|0;f=e|0;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=Ur(b,21856,21840,0)|0;b=h;if((h|0)==0){g=0;i=e;return g|0}ys(f|0,0,56)|0;c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;Qc[c[(c[h>>2]|0)+28>>2]&31](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function Rr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((c[d+8>>2]|0)!=(b|0)){return}b=d+16|0;g=c[b>>2]|0;if((g|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((g|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function Sr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((b|0)!=(c[d+8>>2]|0)){g=c[b+8>>2]|0;Qc[c[(c[g>>2]|0)+28>>2]&31](g,d,e,f);return}g=d+16|0;b=c[g>>2]|0;if((b|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function Tr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==(c[d+8>>2]|0)){g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}h=d+24|0;if((c[h>>2]|0)!=2){return}c[h>>2]=f;return}h=c[b+12>>2]|0;g=b+16+(h<<3)|0;i=c[b+20>>2]|0;j=i>>8;if((i&1|0)==0){k=j}else{k=c[(c[e>>2]|0)+j>>2]|0}j=c[b+16>>2]|0;Qc[c[(c[j>>2]|0)+28>>2]&31](j,d,e+k|0,(i&2|0)!=0?f:2);if((h|0)<=1){return}h=d+54|0;i=e;k=b+24|0;while(1){b=c[k+4>>2]|0;j=b>>8;if((b&1|0)==0){l=j}else{l=c[(c[i>>2]|0)+j>>2]|0}j=c[k>>2]|0;Qc[c[(c[j>>2]|0)+28>>2]&31](j,d,e+l|0,(b&2|0)!=0?f:2);if((a[h]|0)!=0){m=16;break}b=k+8|0;if(b>>>0<g>>>0){k=b}else{m=16;break}}if((m|0)==16){return}}function Ur(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+56|0;g=f|0;h=c[a>>2]|0;j=a+(c[h-8>>2]|0)|0;k=c[h-4>>2]|0;h=k;c[g>>2]=d;c[g+4>>2]=a;c[g+8>>2]=b;c[g+12>>2]=e;e=g+16|0;b=g+20|0;a=g+24|0;l=g+28|0;m=g+32|0;n=g+40|0;ys(e|0,0,39)|0;do{if((k|0)==(d|0)){c[g+48>>2]=1;Nc[c[(c[k>>2]|0)+20>>2]&63](h,g,j,j,1,0);o=(c[a>>2]|0)==1?j:0}else{yc[c[(c[k>>2]|0)+24>>2]&7](h,g,j,1,0);p=c[g+36>>2]|0;if((p|0)==0){if((c[n>>2]|0)!=1){o=0;break}if((c[l>>2]|0)!=1){o=0;break}o=(c[m>>2]|0)==1?c[b>>2]|0:0;break}else if((p|0)!=1){o=0;break}if((c[a>>2]|0)!=1){if((c[n>>2]|0)!=0){o=0;break}if((c[l>>2]|0)!=1){o=0;break}if((c[m>>2]|0)!=1){o=0;break}}o=c[e>>2]|0}}while(0);i=f;return o|0}function Vr(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)==(c[d>>2]|0)){do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=c[b+12>>2]|0;k=b+16+(j<<3)|0;a:do{if((j|0)>0){l=d+52|0;m=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;q=e;r=0;s=b+16|0;t=0;b:while(1){a[l]=0;a[m]=0;u=c[s+4>>2]|0;v=u>>8;if((u&1|0)==0){w=v}else{w=c[(c[q>>2]|0)+v>>2]|0}v=c[s>>2]|0;Nc[c[(c[v>>2]|0)+20>>2]&63](v,d,e,e+w|0,2-(u>>>1&1)|0,g);if((a[n]|0)!=0){x=t;y=r;break}do{if((a[m]|0)==0){z=t;A=r}else{if((a[l]|0)==0){if((c[o>>2]&1|0)==0){x=1;y=r;break b}else{z=1;A=r;break}}if((c[p>>2]|0)==1){B=27;break a}if((c[o>>2]&2|0)==0){B=27;break a}else{z=1;A=1}}}while(0);u=s+8|0;if(u>>>0<k>>>0){r=A;s=u;t=z}else{x=z;y=A;break}}if(y){C=x;B=26}else{D=x;B=23}}else{D=0;B=23}}while(0);do{if((B|0)==23){c[h>>2]=e;k=d+40|0;c[k>>2]=(c[k>>2]|0)+1;if((c[d+36>>2]|0)!=1){C=D;B=26;break}if((c[d+24>>2]|0)!=2){C=D;B=26;break}a[d+54|0]=1;if(D){B=27}else{B=28}}}while(0);if((B|0)==26){if(C){B=27}else{B=28}}if((B|0)==27){c[i>>2]=3;return}else if((B|0)==28){c[i>>2]=4;return}}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}C=c[b+12>>2]|0;D=b+16+(C<<3)|0;x=c[b+20>>2]|0;y=x>>8;if((x&1|0)==0){E=y}else{E=c[(c[e>>2]|0)+y>>2]|0}y=c[b+16>>2]|0;yc[c[(c[y>>2]|0)+24>>2]&7](y,d,e+E|0,(x&2|0)!=0?f:2,g);x=b+24|0;if((C|0)<=1){return}C=c[b+8>>2]|0;do{if((C&2|0)==0){b=d+36|0;if((c[b>>2]|0)==1){break}if((C&1|0)==0){E=d+54|0;y=e;A=x;while(1){if((a[E]|0)!=0){B=53;break}if((c[b>>2]|0)==1){B=53;break}z=c[A+4>>2]|0;w=z>>8;if((z&1|0)==0){F=w}else{F=c[(c[y>>2]|0)+w>>2]|0}w=c[A>>2]|0;yc[c[(c[w>>2]|0)+24>>2]&7](w,d,e+F|0,(z&2|0)!=0?f:2,g);z=A+8|0;if(z>>>0<D>>>0){A=z}else{B=53;break}}if((B|0)==53){return}}A=d+24|0;y=d+54|0;E=e;i=x;while(1){if((a[y]|0)!=0){B=53;break}if((c[b>>2]|0)==1){if((c[A>>2]|0)==1){B=53;break}}z=c[i+4>>2]|0;w=z>>8;if((z&1|0)==0){G=w}else{G=c[(c[E>>2]|0)+w>>2]|0}w=c[i>>2]|0;yc[c[(c[w>>2]|0)+24>>2]&7](w,d,e+G|0,(z&2|0)!=0?f:2,g);z=i+8|0;if(z>>>0<D>>>0){i=z}else{B=53;break}}if((B|0)==53){return}}}while(0);G=d+54|0;F=e;C=x;while(1){if((a[G]|0)!=0){B=53;break}x=c[C+4>>2]|0;i=x>>8;if((x&1|0)==0){H=i}else{H=c[(c[F>>2]|0)+i>>2]|0}i=c[C>>2]|0;yc[c[(c[i>>2]|0)+24>>2]&7](i,d,e+H|0,(x&2|0)!=0?f:2,g);x=C+8|0;if(x>>>0<D>>>0){C=x}else{B=53;break}}if((B|0)==53){return}}function Wr(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;yc[c[(c[h>>2]|0)+24>>2]&7](h,d,e,f,g);return}do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=d+52|0;a[j]=0;k=d+53|0;a[k]=0;l=c[b+8>>2]|0;Nc[c[(c[l>>2]|0)+20>>2]&63](l,d,e,e,1,g);if((a[k]|0)==0){m=0;n=13}else{if((a[j]|0)==0){m=1;n=13}}a:do{if((n|0)==13){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){n=16;break}a[d+54|0]=1;if(m){break a}}else{n=16}}while(0);if((n|0)==16){if(m){break}}c[i>>2]=4;return}}while(0);c[i>>2]=3;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function Xr(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){return}g=d+28|0;if((c[g>>2]|0)==1){return}c[g>>2]=f;return}if((c[d>>2]|0)!=(b|0)){return}do{if((c[d+16>>2]|0)!=(e|0)){b=d+20|0;if((c[b>>2]|0)==(e|0)){break}c[d+32>>2]=f;c[b>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){break}a[d+54|0]=1}}while(0);c[d+44>>2]=4;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function Yr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)!=(c[d+8>>2]|0)){i=d+52|0;j=a[i]|0;k=d+53|0;l=a[k]|0;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i]=0;a[k]=0;o=c[b+20>>2]|0;p=o>>8;if((o&1|0)==0){q=p}else{q=c[(c[f>>2]|0)+p>>2]|0}p=c[b+16>>2]|0;Nc[c[(c[p>>2]|0)+20>>2]&63](p,d,e,f+q|0,(o&2|0)!=0?g:2,h);a:do{if((m|0)>1){o=d+24|0;q=b+8|0;p=d+54|0;r=f;s=b+24|0;do{if((a[p]|0)!=0){break a}do{if((a[i]|0)==0){if((a[k]|0)==0){break}if((c[q>>2]&1|0)==0){break a}}else{if((c[o>>2]|0)==1){break a}if((c[q>>2]&2|0)==0){break a}}}while(0);a[i]=0;a[k]=0;t=c[s+4>>2]|0;u=t>>8;if((t&1|0)==0){v=u}else{v=c[(c[r>>2]|0)+u>>2]|0}u=c[s>>2]|0;Nc[c[(c[u>>2]|0)+20>>2]&63](u,d,e,f+v|0,(t&2|0)!=0?g:2,h);s=s+8|0;}while(s>>>0<n>>>0)}}while(0);a[i]=j;a[k]=l;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;l=c[f>>2]|0;if((l|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((l|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;l=c[e>>2]|0;if((l|0)==2){c[e>>2]=g;w=g}else{w=l}if(!((c[d+48>>2]|0)==1&(w|0)==1)){return}a[d+54|0]=1;return}function Zr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if((b|0)!=(c[d+8>>2]|0)){i=c[b+8>>2]|0;Nc[c[(c[i>>2]|0)+20>>2]&63](i,d,e,f,g,h);return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;j=g}else{j=h}if(!((c[d+48>>2]|0)==1&(j|0)==1)){return}a[d+54|0]=1;return}function _r(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if((c[d+8>>2]|0)!=(b|0)){return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;i=g}else{i=b}if(!((c[d+48>>2]|0)==1&(i|0)==1)){return}a[d+54|0]=1;return}function $r(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0;do{if(a>>>0<245>>>0){if(a>>>0<11>>>0){b=16}else{b=a+11&-8}d=b>>>3;e=c[6500]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=26040+(h<<2)|0;j=26040+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[6500]=e&~(1<<g)}else{if(l>>>0<(c[6504]|0)>>>0){ec();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{ec();return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(!(b>>>0>(c[6502]|0)>>>0)){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=26040+(p<<2)|0;m=26040+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[6500]=e&~(1<<r)}else{if(l>>>0<(c[6504]|0)>>>0){ec();return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{ec();return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[6502]|0;if((l|0)!=0){q=c[6505]|0;d=l>>>3;l=d<<1;f=26040+(l<<2)|0;k=c[6500]|0;h=1<<d;do{if((k&h|0)==0){c[6500]=k|h;s=f;t=26040+(l+2<<2)|0}else{d=26040+(l+2<<2)|0;g=c[d>>2]|0;if(!(g>>>0<(c[6504]|0)>>>0)){s=g;t=d;break}ec();return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[6502]=m;c[6505]=e;n=i;return n|0}l=c[6501]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[26304+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[6504]|0;if(r>>>0<i>>>0){ec();return 0}e=r+b|0;m=e;if(!(r>>>0<e>>>0)){ec();return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){ec();return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){ec();return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){ec();return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{ec();return 0}}}while(0);a:do{if((e|0)!=0){f=c[d+28>>2]|0;i=26304+(f<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[6501]=c[6501]&~(1<<f);break a}else{if(e>>>0<(c[6504]|0)>>>0){ec();return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break a}}}while(0);if(v>>>0<(c[6504]|0)>>>0){ec();return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16>>>0){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[6502]|0;if((f|0)!=0){e=c[6505]|0;i=f>>>3;f=i<<1;q=26040+(f<<2)|0;k=c[6500]|0;g=1<<i;do{if((k&g|0)==0){c[6500]=k|g;y=q;z=26040+(f+2<<2)|0}else{i=26040+(f+2<<2)|0;l=c[i>>2]|0;if(!(l>>>0<(c[6504]|0)>>>0)){y=l;z=i;break}ec();return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[6502]=p;c[6505]=m}n=d+8|0;return n|0}else{if(a>>>0>4294967231>>>0){o=-1;break}f=a+11|0;g=f&-8;k=c[6501]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215>>>0){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[26304+(A<<2)>>2]|0;b:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break b}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[26304+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(!(J>>>0<((c[6502]|0)-g|0)>>>0)){o=g;break}q=K;m=c[6504]|0;if(q>>>0<m>>>0){ec();return 0}p=q+g|0;k=p;if(!(q>>>0<p>>>0)){ec();return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){ec();return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){ec();return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){ec();return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{ec();return 0}}}while(0);c:do{if((e|0)!=0){i=c[K+28>>2]|0;m=26304+(i<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[6501]=c[6501]&~(1<<i);break c}else{if(e>>>0<(c[6504]|0)>>>0){ec();return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break c}}}while(0);if(L>>>0<(c[6504]|0)>>>0){ec();return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);d:do{if(J>>>0<16>>>0){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256>>>0){e=i<<1;m=26040+(e<<2)|0;r=c[6500]|0;j=1<<i;do{if((r&j|0)==0){c[6500]=r|j;O=m;P=26040+(e+2<<2)|0}else{i=26040+(e+2<<2)|0;d=c[i>>2]|0;if(!(d>>>0<(c[6504]|0)>>>0)){O=d;P=i;break}ec();return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215>>>0){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=26304+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[6501]|0;l=1<<Q;if((m&l|0)==0){c[6501]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}l=c[j>>2]|0;if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}e:do{if((c[l+4>>2]&-8|0)==(J|0)){S=l}else{j=l;m=J<<R;while(1){T=j+16+(m>>>31<<2)|0;i=c[T>>2]|0;if((i|0)==0){break}if((c[i+4>>2]&-8|0)==(J|0)){S=i;break e}else{j=i;m=m<<1}}if(T>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[T>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break d}}}while(0);l=S+8|0;m=c[l>>2]|0;i=c[6504]|0;if(S>>>0<i>>>0){ec();return 0}if(m>>>0<i>>>0){ec();return 0}else{c[m+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=m;c[q+(g+12)>>2]=S;c[q+(g+24)>>2]=0;break}}}while(0);n=K+8|0;return n|0}}while(0);K=c[6502]|0;if(!(o>>>0>K>>>0)){S=K-o|0;T=c[6505]|0;if(S>>>0>15>>>0){J=T;c[6505]=J+o;c[6502]=S;c[J+(o+4)>>2]=S|1;c[J+K>>2]=S;c[T+4>>2]=o|3}else{c[6502]=0;c[6505]=0;c[T+4>>2]=K|3;S=T+(K+4)|0;c[S>>2]=c[S>>2]|1}n=T+8|0;return n|0}T=c[6503]|0;if(o>>>0<T>>>0){S=T-o|0;c[6503]=S;T=c[6506]|0;K=T;c[6506]=K+o;c[K+(o+4)>>2]=S|1;c[T+4>>2]=o|3;n=T+8|0;return n|0}do{if((c[6424]|0)==0){T=Hb(30)|0;if((T-1&T|0)==0){c[6426]=T;c[6425]=T;c[6427]=-1;c[6428]=-1;c[6429]=0;c[6611]=0;c[6424]=(wc(0)|0)&-16^1431655768;break}else{ec();return 0}}}while(0);T=o+48|0;S=c[6426]|0;K=o+47|0;J=S+K|0;R=-S|0;S=J&R;if(!(S>>>0>o>>>0)){n=0;return n|0}Q=c[6610]|0;do{if((Q|0)!=0){O=c[6608]|0;P=O+S|0;if(P>>>0<=O>>>0|P>>>0>Q>>>0){n=0}else{break}return n|0}}while(0);f:do{if((c[6611]&4|0)==0){Q=c[6506]|0;g:do{if((Q|0)==0){U=182}else{P=Q;O=26448;while(1){V=O|0;L=c[V>>2]|0;if(!(L>>>0>P>>>0)){W=O+4|0;if((L+(c[W>>2]|0)|0)>>>0>P>>>0){break}}L=c[O+8>>2]|0;if((L|0)==0){U=182;break g}else{O=L}}if((O|0)==0){U=182;break}P=J-(c[6503]|0)&R;if(!(P>>>0<2147483647>>>0)){X=0;break}e=Qb(P|0)|0;L=(e|0)==((c[V>>2]|0)+(c[W>>2]|0)|0);Y=L?e:-1;Z=L?P:0;_=e;$=P;U=191}}while(0);do{if((U|0)==182){Q=Qb(0)|0;if((Q|0)==-1){X=0;break}P=Q;e=c[6425]|0;L=e-1|0;if((L&P|0)==0){aa=S}else{aa=S-P+(L+P&-e)|0}e=c[6608]|0;P=e+aa|0;if(!(aa>>>0>o>>>0&aa>>>0<2147483647>>>0)){X=0;break}L=c[6610]|0;if((L|0)!=0){if(P>>>0<=e>>>0|P>>>0>L>>>0){X=0;break}}L=Qb(aa|0)|0;P=(L|0)==(Q|0);Y=P?Q:-1;Z=P?aa:0;_=L;$=aa;U=191}}while(0);h:do{if((U|0)==191){L=-$|0;if(!((Y|0)==-1)){ba=Z;ca=Y;U=202;break f}do{if((_|0)!=-1&$>>>0<2147483647>>>0&$>>>0<T>>>0){P=c[6426]|0;Q=K-$+P&-P;if(!(Q>>>0<2147483647>>>0)){da=$;break}if((Qb(Q|0)|0)==-1){Qb(L|0)|0;X=Z;break h}else{da=Q+$|0;break}}else{da=$}}while(0);if((_|0)==-1){X=Z}else{ba=da;ca=_;U=202;break f}}}while(0);c[6611]=c[6611]|4;ea=X;U=199}else{ea=0;U=199}}while(0);do{if((U|0)==199){if(!(S>>>0<2147483647>>>0)){break}X=Qb(S|0)|0;_=Qb(0)|0;if(!((_|0)!=-1&(X|0)!=-1&X>>>0<_>>>0)){break}da=_-X|0;_=da>>>0>(o+40|0)>>>0;if(_){ba=_?da:ea;ca=X;U=202}}}while(0);do{if((U|0)==202){ea=(c[6608]|0)+ba|0;c[6608]=ea;if(ea>>>0>(c[6609]|0)>>>0){c[6609]=ea}ea=c[6506]|0;i:do{if((ea|0)==0){S=c[6504]|0;if((S|0)==0|ca>>>0<S>>>0){c[6504]=ca}c[6612]=ca;c[6613]=ba;c[6615]=0;c[6509]=c[6424];c[6508]=-1;S=0;do{X=S<<1;da=26040+(X<<2)|0;c[26040+(X+3<<2)>>2]=da;c[26040+(X+2<<2)>>2]=da;S=S+1|0;}while(S>>>0<32>>>0);S=ca+8|0;if((S&7|0)==0){fa=0}else{fa=-S&7}S=ba-40-fa|0;c[6506]=ca+fa;c[6503]=S;c[ca+(fa+4)>>2]=S|1;c[ca+(ba-36)>>2]=40;c[6507]=c[6428]}else{S=26448;while(1){ga=c[S>>2]|0;ha=S+4|0;ia=c[ha>>2]|0;if((ca|0)==(ga+ia|0)){U=214;break}da=c[S+8>>2]|0;if((da|0)==0){break}else{S=da}}do{if((U|0)==214){if((c[S+12>>2]&8|0)!=0){break}da=ea;if(!(da>>>0>=ga>>>0&da>>>0<ca>>>0)){break}c[ha>>2]=ia+ba;X=(c[6503]|0)+ba|0;_=ea+8|0;if((_&7|0)==0){ja=0}else{ja=-_&7}_=X-ja|0;c[6506]=da+ja;c[6503]=_;c[da+(ja+4)>>2]=_|1;c[da+(X+4)>>2]=40;c[6507]=c[6428];break i}}while(0);if(ca>>>0<(c[6504]|0)>>>0){c[6504]=ca}S=ca+ba|0;X=26448;while(1){ka=X|0;if((c[ka>>2]|0)==(S|0)){U=224;break}da=c[X+8>>2]|0;if((da|0)==0){break}else{X=da}}do{if((U|0)==224){if((c[X+12>>2]&8|0)!=0){break}c[ka>>2]=ca;S=X+4|0;c[S>>2]=(c[S>>2]|0)+ba;S=ca+8|0;if((S&7|0)==0){la=0}else{la=-S&7}S=ca+(ba+8)|0;if((S&7|0)==0){ma=0}else{ma=-S&7}S=ca+(ma+ba)|0;da=S;_=la+o|0;Z=ca+_|0;$=Z;K=S-(ca+la)-o|0;c[ca+(la+4)>>2]=o|3;j:do{if((da|0)==(c[6506]|0)){T=(c[6503]|0)+K|0;c[6503]=T;c[6506]=$;c[ca+(_+4)>>2]=T|1}else{if((da|0)==(c[6505]|0)){T=(c[6502]|0)+K|0;c[6502]=T;c[6505]=$;c[ca+(_+4)>>2]=T|1;c[ca+(T+_)>>2]=T;break}T=ba+4|0;Y=c[ca+(T+ma)>>2]|0;if((Y&3|0)==1){aa=Y&-8;W=Y>>>3;k:do{if(Y>>>0<256>>>0){V=c[ca+((ma|8)+ba)>>2]|0;R=c[ca+(ba+12+ma)>>2]|0;J=26040+(W<<1<<2)|0;do{if((V|0)!=(J|0)){if(V>>>0<(c[6504]|0)>>>0){ec();return 0}if((c[V+12>>2]|0)==(da|0)){break}ec();return 0}}while(0);if((R|0)==(V|0)){c[6500]=c[6500]&~(1<<W);break}do{if((R|0)==(J|0)){na=R+8|0}else{if(R>>>0<(c[6504]|0)>>>0){ec();return 0}L=R+8|0;if((c[L>>2]|0)==(da|0)){na=L;break}ec();return 0}}while(0);c[V+12>>2]=R;c[na>>2]=V}else{J=S;L=c[ca+((ma|24)+ba)>>2]|0;O=c[ca+(ba+12+ma)>>2]|0;do{if((O|0)==(J|0)){Q=ma|16;P=ca+(T+Q)|0;e=c[P>>2]|0;if((e|0)==0){M=ca+(Q+ba)|0;Q=c[M>>2]|0;if((Q|0)==0){oa=0;break}else{pa=Q;qa=M}}else{pa=e;qa=P}while(1){P=pa+20|0;e=c[P>>2]|0;if((e|0)!=0){pa=e;qa=P;continue}P=pa+16|0;e=c[P>>2]|0;if((e|0)==0){break}else{pa=e;qa=P}}if(qa>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[qa>>2]=0;oa=pa;break}}else{P=c[ca+((ma|8)+ba)>>2]|0;if(P>>>0<(c[6504]|0)>>>0){ec();return 0}e=P+12|0;if((c[e>>2]|0)!=(J|0)){ec();return 0}M=O+8|0;if((c[M>>2]|0)==(J|0)){c[e>>2]=O;c[M>>2]=P;oa=O;break}else{ec();return 0}}}while(0);if((L|0)==0){break}O=c[ca+(ba+28+ma)>>2]|0;V=26304+(O<<2)|0;do{if((J|0)==(c[V>>2]|0)){c[V>>2]=oa;if((oa|0)!=0){break}c[6501]=c[6501]&~(1<<O);break k}else{if(L>>>0<(c[6504]|0)>>>0){ec();return 0}R=L+16|0;if((c[R>>2]|0)==(J|0)){c[R>>2]=oa}else{c[L+20>>2]=oa}if((oa|0)==0){break k}}}while(0);if(oa>>>0<(c[6504]|0)>>>0){ec();return 0}c[oa+24>>2]=L;J=ma|16;O=c[ca+(J+ba)>>2]|0;do{if((O|0)!=0){if(O>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[oa+16>>2]=O;c[O+24>>2]=oa;break}}}while(0);O=c[ca+(T+J)>>2]|0;if((O|0)==0){break}if(O>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[oa+20>>2]=O;c[O+24>>2]=oa;break}}}while(0);ra=ca+((aa|ma)+ba)|0;sa=aa+K|0}else{ra=da;sa=K}T=ra+4|0;c[T>>2]=c[T>>2]&-2;c[ca+(_+4)>>2]=sa|1;c[ca+(sa+_)>>2]=sa;T=sa>>>3;if(sa>>>0<256>>>0){W=T<<1;Y=26040+(W<<2)|0;O=c[6500]|0;L=1<<T;do{if((O&L|0)==0){c[6500]=O|L;ta=Y;ua=26040+(W+2<<2)|0}else{T=26040+(W+2<<2)|0;V=c[T>>2]|0;if(!(V>>>0<(c[6504]|0)>>>0)){ta=V;ua=T;break}ec();return 0}}while(0);c[ua>>2]=$;c[ta+12>>2]=$;c[ca+(_+8)>>2]=ta;c[ca+(_+12)>>2]=Y;break}W=Z;L=sa>>>8;do{if((L|0)==0){va=0}else{if(sa>>>0>16777215>>>0){va=31;break}O=(L+1048320|0)>>>16&8;aa=L<<O;T=(aa+520192|0)>>>16&4;V=aa<<T;aa=(V+245760|0)>>>16&2;R=14-(T|O|aa)+(V<<aa>>>15)|0;va=sa>>>((R+7|0)>>>0)&1|R<<1}}while(0);L=26304+(va<<2)|0;c[ca+(_+28)>>2]=va;c[ca+(_+20)>>2]=0;c[ca+(_+16)>>2]=0;Y=c[6501]|0;R=1<<va;if((Y&R|0)==0){c[6501]=Y|R;c[L>>2]=W;c[ca+(_+24)>>2]=L;c[ca+(_+12)>>2]=W;c[ca+(_+8)>>2]=W;break}R=c[L>>2]|0;if((va|0)==31){wa=0}else{wa=25-(va>>>1)|0}l:do{if((c[R+4>>2]&-8|0)==(sa|0)){xa=R}else{L=R;Y=sa<<wa;while(1){ya=L+16+(Y>>>31<<2)|0;aa=c[ya>>2]|0;if((aa|0)==0){break}if((c[aa+4>>2]&-8|0)==(sa|0)){xa=aa;break l}else{L=aa;Y=Y<<1}}if(ya>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[ya>>2]=W;c[ca+(_+24)>>2]=L;c[ca+(_+12)>>2]=W;c[ca+(_+8)>>2]=W;break j}}}while(0);R=xa+8|0;Y=c[R>>2]|0;J=c[6504]|0;if(xa>>>0<J>>>0){ec();return 0}if(Y>>>0<J>>>0){ec();return 0}else{c[Y+12>>2]=W;c[R>>2]=W;c[ca+(_+8)>>2]=Y;c[ca+(_+12)>>2]=xa;c[ca+(_+24)>>2]=0;break}}}while(0);n=ca+(la|8)|0;return n|0}}while(0);X=ea;_=26448;while(1){za=c[_>>2]|0;if(!(za>>>0>X>>>0)){Aa=c[_+4>>2]|0;Ba=za+Aa|0;if(Ba>>>0>X>>>0){break}}_=c[_+8>>2]|0}_=za+(Aa-39)|0;if((_&7|0)==0){Ca=0}else{Ca=-_&7}_=za+(Aa-47+Ca)|0;Z=_>>>0<(ea+16|0)>>>0?X:_;_=Z+8|0;$=ca+8|0;if(($&7|0)==0){Da=0}else{Da=-$&7}$=ba-40-Da|0;c[6506]=ca+Da;c[6503]=$;c[ca+(Da+4)>>2]=$|1;c[ca+(ba-36)>>2]=40;c[6507]=c[6428];c[Z+4>>2]=27;c[_>>2]=c[6612];c[_+4>>2]=c[6613];c[_+8>>2]=c[6614];c[_+12>>2]=c[6615];c[6612]=ca;c[6613]=ba;c[6615]=0;c[6614]=_;_=Z+28|0;c[_>>2]=7;if((Z+32|0)>>>0<Ba>>>0){$=_;while(1){_=$+4|0;c[_>>2]=7;if(($+8|0)>>>0<Ba>>>0){$=_}else{break}}}if((Z|0)==(X|0)){break}$=Z-ea|0;_=X+($+4)|0;c[_>>2]=c[_>>2]&-2;c[ea+4>>2]=$|1;c[X+$>>2]=$;_=$>>>3;if($>>>0<256>>>0){K=_<<1;da=26040+(K<<2)|0;S=c[6500]|0;j=1<<_;do{if((S&j|0)==0){c[6500]=S|j;Ea=da;Fa=26040+(K+2<<2)|0}else{_=26040+(K+2<<2)|0;Y=c[_>>2]|0;if(!(Y>>>0<(c[6504]|0)>>>0)){Ea=Y;Fa=_;break}ec();return 0}}while(0);c[Fa>>2]=ea;c[Ea+12>>2]=ea;c[ea+8>>2]=Ea;c[ea+12>>2]=da;break}K=ea;j=$>>>8;do{if((j|0)==0){Ga=0}else{if($>>>0>16777215>>>0){Ga=31;break}S=(j+1048320|0)>>>16&8;X=j<<S;Z=(X+520192|0)>>>16&4;_=X<<Z;X=(_+245760|0)>>>16&2;Y=14-(Z|S|X)+(_<<X>>>15)|0;Ga=$>>>((Y+7|0)>>>0)&1|Y<<1}}while(0);j=26304+(Ga<<2)|0;c[ea+28>>2]=Ga;c[ea+20>>2]=0;c[ea+16>>2]=0;da=c[6501]|0;Y=1<<Ga;if((da&Y|0)==0){c[6501]=da|Y;c[j>>2]=K;c[ea+24>>2]=j;c[ea+12>>2]=ea;c[ea+8>>2]=ea;break}Y=c[j>>2]|0;if((Ga|0)==31){Ha=0}else{Ha=25-(Ga>>>1)|0}m:do{if((c[Y+4>>2]&-8|0)==($|0)){Ia=Y}else{j=Y;da=$<<Ha;while(1){Ja=j+16+(da>>>31<<2)|0;X=c[Ja>>2]|0;if((X|0)==0){break}if((c[X+4>>2]&-8|0)==($|0)){Ia=X;break m}else{j=X;da=da<<1}}if(Ja>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[Ja>>2]=K;c[ea+24>>2]=j;c[ea+12>>2]=ea;c[ea+8>>2]=ea;break i}}}while(0);$=Ia+8|0;Y=c[$>>2]|0;da=c[6504]|0;if(Ia>>>0<da>>>0){ec();return 0}if(Y>>>0<da>>>0){ec();return 0}else{c[Y+12>>2]=K;c[$>>2]=K;c[ea+8>>2]=Y;c[ea+12>>2]=Ia;c[ea+24>>2]=0;break}}}while(0);ea=c[6503]|0;if(!(ea>>>0>o>>>0)){break}Y=ea-o|0;c[6503]=Y;ea=c[6506]|0;$=ea;c[6506]=$+o;c[$+(o+4)>>2]=Y|1;c[ea+4>>2]=o|3;n=ea+8|0;return n|0}}while(0);c[(Sb()|0)>>2]=12;n=0;return n|0}function as(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[6504]|0;if(b>>>0<e>>>0){ec()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){ec()}h=f&-8;i=a+(h-8)|0;j=i;a:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){ec()}if((n|0)==(c[6505]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[6502]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256>>>0){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=26040+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){ec()}if((c[k+12>>2]|0)==(n|0)){break}ec()}}while(0);if((s|0)==(k|0)){c[6500]=c[6500]&~(1<<p);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){ec()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}ec()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){ec()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){ec()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){ec()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{ec()}}}while(0);if((p|0)==0){q=n;r=o;break}v=c[a+(l+28)>>2]|0;m=26304+(v<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[6501]=c[6501]&~(1<<v);q=n;r=o;break a}else{if(p>>>0<(c[6504]|0)>>>0){ec()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break a}}}while(0);if(A>>>0<(c[6504]|0)>>>0){ec()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[6504]|0)>>>0){ec()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[6504]|0)>>>0){ec()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(!(d>>>0<i>>>0)){ec()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){ec()}do{if((e&2|0)==0){if((j|0)==(c[6506]|0)){B=(c[6503]|0)+r|0;c[6503]=B;c[6506]=q;c[q+4>>2]=B|1;if((q|0)!=(c[6505]|0)){return}c[6505]=0;c[6502]=0;return}if((j|0)==(c[6505]|0)){B=(c[6502]|0)+r|0;c[6502]=B;c[6505]=q;c[q+4>>2]=B|1;c[d+B>>2]=B;return}B=(e&-8)+r|0;C=e>>>3;b:do{if(e>>>0<256>>>0){u=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;b=26040+(C<<1<<2)|0;do{if((u|0)!=(b|0)){if(u>>>0<(c[6504]|0)>>>0){ec()}if((c[u+12>>2]|0)==(j|0)){break}ec()}}while(0);if((g|0)==(u|0)){c[6500]=c[6500]&~(1<<C);break}do{if((g|0)==(b|0)){D=g+8|0}else{if(g>>>0<(c[6504]|0)>>>0){ec()}f=g+8|0;if((c[f>>2]|0)==(j|0)){D=f;break}ec()}}while(0);c[u+12>>2]=g;c[D>>2]=u}else{b=i;f=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(b|0)){p=a+(h+12)|0;v=c[p>>2]|0;if((v|0)==0){m=a+(h+8)|0;k=c[m>>2]|0;if((k|0)==0){E=0;break}else{F=k;G=m}}else{F=v;G=p}while(1){p=F+20|0;v=c[p>>2]|0;if((v|0)!=0){F=v;G=p;continue}p=F+16|0;v=c[p>>2]|0;if((v|0)==0){break}else{F=v;G=p}}if(G>>>0<(c[6504]|0)>>>0){ec()}else{c[G>>2]=0;E=F;break}}else{p=c[a+h>>2]|0;if(p>>>0<(c[6504]|0)>>>0){ec()}v=p+12|0;if((c[v>>2]|0)!=(b|0)){ec()}m=t+8|0;if((c[m>>2]|0)==(b|0)){c[v>>2]=t;c[m>>2]=p;E=t;break}else{ec()}}}while(0);if((f|0)==0){break}t=c[a+(h+20)>>2]|0;u=26304+(t<<2)|0;do{if((b|0)==(c[u>>2]|0)){c[u>>2]=E;if((E|0)!=0){break}c[6501]=c[6501]&~(1<<t);break b}else{if(f>>>0<(c[6504]|0)>>>0){ec()}g=f+16|0;if((c[g>>2]|0)==(b|0)){c[g>>2]=E}else{c[f+20>>2]=E}if((E|0)==0){break b}}}while(0);if(E>>>0<(c[6504]|0)>>>0){ec()}c[E+24>>2]=f;b=c[a+(h+8)>>2]|0;do{if((b|0)!=0){if(b>>>0<(c[6504]|0)>>>0){ec()}else{c[E+16>>2]=b;c[b+24>>2]=E;break}}}while(0);b=c[a+(h+12)>>2]|0;if((b|0)==0){break}if(b>>>0<(c[6504]|0)>>>0){ec()}else{c[E+20>>2]=b;c[b+24>>2]=E;break}}}while(0);c[q+4>>2]=B|1;c[d+B>>2]=B;if((q|0)!=(c[6505]|0)){H=B;break}c[6502]=B;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;H=r}}while(0);r=H>>>3;if(H>>>0<256>>>0){d=r<<1;e=26040+(d<<2)|0;A=c[6500]|0;E=1<<r;do{if((A&E|0)==0){c[6500]=A|E;I=e;J=26040+(d+2<<2)|0}else{r=26040+(d+2<<2)|0;h=c[r>>2]|0;if(!(h>>>0<(c[6504]|0)>>>0)){I=h;J=r;break}ec()}}while(0);c[J>>2]=q;c[I+12>>2]=q;c[q+8>>2]=I;c[q+12>>2]=e;return}e=q;I=H>>>8;do{if((I|0)==0){K=0}else{if(H>>>0>16777215>>>0){K=31;break}J=(I+1048320|0)>>>16&8;d=I<<J;E=(d+520192|0)>>>16&4;A=d<<E;d=(A+245760|0)>>>16&2;r=14-(E|J|d)+(A<<d>>>15)|0;K=H>>>((r+7|0)>>>0)&1|r<<1}}while(0);I=26304+(K<<2)|0;c[q+28>>2]=K;c[q+20>>2]=0;c[q+16>>2]=0;r=c[6501]|0;d=1<<K;c:do{if((r&d|0)==0){c[6501]=r|d;c[I>>2]=e;c[q+24>>2]=I;c[q+12>>2]=q;c[q+8>>2]=q}else{A=c[I>>2]|0;if((K|0)==31){L=0}else{L=25-(K>>>1)|0}d:do{if((c[A+4>>2]&-8|0)==(H|0)){M=A}else{J=A;E=H<<L;while(1){N=J+16+(E>>>31<<2)|0;h=c[N>>2]|0;if((h|0)==0){break}if((c[h+4>>2]&-8|0)==(H|0)){M=h;break d}else{J=h;E=E<<1}}if(N>>>0<(c[6504]|0)>>>0){ec()}else{c[N>>2]=e;c[q+24>>2]=J;c[q+12>>2]=q;c[q+8>>2]=q;break c}}}while(0);A=M+8|0;B=c[A>>2]|0;E=c[6504]|0;if(M>>>0<E>>>0){ec()}if(B>>>0<E>>>0){ec()}else{c[B+12>>2]=e;c[A>>2]=e;c[q+8>>2]=B;c[q+12>>2]=M;c[q+24>>2]=0;break}}}while(0);q=(c[6508]|0)-1|0;c[6508]=q;if((q|0)==0){O=26456}else{return}while(1){q=c[O>>2]|0;if((q|0)==0){break}else{O=q+8|0}}c[6508]=-1;return}function bs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=$r(b)|0;return d|0}if(b>>>0>4294967231>>>0){c[(Sb()|0)>>2]=12;d=0;return d|0}if(b>>>0<11>>>0){e=16}else{e=b+11&-8}f=cs(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=$r(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;xs(f|0,a|0,g>>>0<b>>>0?g:b)|0;as(a);d=f;return d|0}



function Rc(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function Sc(){return i|0}function Tc(a){a=a|0;i=a}function Uc(a,b){a=a|0;b=b|0;if((x|0)==0){x=a;y=b}}function Vc(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function Wc(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function Xc(a){a=a|0;K=a}function Yc(a){a=a|0;L=a}function Zc(a){a=a|0;M=a}function _c(a){a=a|0;N=a}function $c(a){a=a|0;O=a}function ad(a){a=a|0;P=a}function bd(a){a=a|0;Q=a}function cd(a){a=a|0;R=a}function dd(a){a=a|0;S=a}function ed(a){a=a|0;T=a}function fd(){c[5076]=p+8;c[5078]=q+8;c[5080]=t;c[5082]=q+8;c[5084]=t;c[5086]=q+8;c[5088]=t;c[5090]=q+8;c[5094]=q+8;c[5096]=t;c[5098]=p+8;c[5132]=q+8;c[5136]=q+8;c[5200]=q+8;c[5204]=q+8;c[5224]=p+8;c[5226]=q+8;c[5262]=q+8;c[5266]=q+8;c[5302]=q+8;c[5306]=q+8;c[5326]=p+8;c[5328]=p+8;c[5330]=q+8;c[5334]=q+8;c[5338]=q+8;c[5342]=p+8;c[5344]=p+8;c[5346]=p+8;c[5348]=p+8;c[5350]=p+8;c[5352]=p+8;c[5354]=p+8;c[5380]=q+8;c[5384]=p+8;c[5386]=q+8;c[5390]=q+8;c[5394]=q+8;c[5398]=p+8;c[5400]=p+8;c[5402]=p+8;c[5404]=p+8;c[5438]=p+8;c[5440]=p+8;c[5442]=p+8;c[5444]=q+8;c[5448]=q+8;c[5452]=q+8;c[5456]=q+8;c[5460]=q+8;c[5464]=q+8;c[5468]=q+8;c[5472]=q+8;c[5476]=q+8;c[5480]=q+8;c[5484]=p+8}function gd(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=a|0;c[f>>2]=b;g=a+4|0;c[g>>2]=e;h=a+8|0;c[h>>2]=0;c[h+4>>2]=0;i=a+16|0;c[i>>2]=0;a=64;j=e;e=b;b=0;k=0;while(1){if((j|0)==0){l=a;m=4;break}n=e+1|0;c[f>>2]=n;o=d[e]|0;p=j-1|0;c[g>>2]=p;q=a-8|0;r=Ds(o|0,0,q|0)|0;o=r|k;r=K|b;c[h>>2]=o;c[h+4>>2]=r;if((q|0)>7){a=q;j=p;e=n;b=r;k=o}else{l=q;m=4;break}}if((m|0)==4){c[i>>2]=64-l;return}}function hd(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=a+16|0;f=c[e>>2]|0;if((f|0)<(b|0)){g=64-f|0;h=a+4|0;a:do{if((g|0)>7){i=a|0;j=a+8|0;k=g;l=c[h>>2]|0;while(1){if((l|0)==0){m=k;break a}n=c[i>>2]|0;c[i>>2]=n+1;o=d[n]|0;n=l-1|0;c[h>>2]=n;p=k-8|0;q=Ds(o|0,0,p|0)|0;o=K|c[j+4>>2];c[j>>2]=q|c[j>>2];c[j+4>>2]=o;if((p|0)>7){k=p;l=n}else{m=p;break}}}else{m=g}}while(0);g=64-m|0;c[e>>2]=g;r=g}else{r=f}f=a+8|0;a=c[f>>2]|0;g=c[f+4>>2]|0;m=Es(a|0,g|0,64-b|0)|0;h=Ds(a|0,g|0,b|0)|0;c[f>>2]=h;c[f+4>>2]=K;c[e>>2]=r-b;return m|0}function id(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=a+16|0;f=c[e>>2]|0;if((f|0)<(b|0)){g=64-f|0;h=a+4|0;a:do{if((g|0)>7){i=a|0;j=a+8|0;k=g;l=c[h>>2]|0;while(1){if((l|0)==0){m=k;break a}n=c[i>>2]|0;c[i>>2]=n+1;o=d[n]|0;n=l-1|0;c[h>>2]=n;p=k-8|0;q=Ds(o|0,0,p|0)|0;o=K|c[j+4>>2];c[j>>2]=q|c[j>>2];c[j+4>>2]=o;if((p|0)>7){k=p;l=n}else{m=p;break}}}else{m=g}}while(0);g=64-m|0;c[e>>2]=g;r=g}else{r=f}f=a+8|0;a=Ds(c[f>>2]|0,c[f+4>>2]|0,b|0)|0;c[f>>2]=a;c[f+4>>2]=K;c[e>>2]=r-b;return}function jd(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+16|0;d=a+8|0;e=(c[b>>2]&-8|0)/8|0;f=a|0;c[f>>2]=(c[f>>2]|0)+(-e|0);f=a+4|0;c[f>>2]=(c[f>>2]|0)+e;c[d>>2]=0;c[d+4>>2]=0;c[b>>2]=0;return}function kd(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;b=a+16|0;e=a+4|0;f=a|0;g=a+8|0;a=0;h=c[b>>2]|0;while(1){if((h|0)<1){i=64-h|0;a:do{if((i|0)>7){j=i;k=c[e>>2]|0;while(1){if((k|0)==0){l=j;break a}m=c[f>>2]|0;c[f>>2]=m+1;n=d[m]|0;m=k-1|0;c[e>>2]=m;o=j-8|0;p=Ds(n|0,0,o|0)|0;n=K|c[g+4>>2];c[g>>2]=p|c[g>>2];c[g+4>>2]=n;if((o|0)>7){j=o;k=m}else{l=o;break}}}else{l=i}}while(0);i=64-l|0;c[b>>2]=i;q=i}else{q=h}i=c[g>>2]|0;k=c[g+4>>2]|0;r=i<<1|0>>>31;s=k<<1|i>>>31;c[g>>2]=r;c[g+4>>2]=s;t=q-1|0;c[b>>2]=t;j=-1;if(!((k|0)>(j|0)|(k|0)==(j|0)&i>>>0>-1>>>0)){break}if((a|0)>19){u=-99999;v=18;break}else{a=a+1|0;h=t}}if((v|0)==18){return u|0}if((a|0)==0){u=0;return u|0}if((q|0)>(a|0)){w=t;x=s;y=r}else{t=65-q|0;b:do{if((t|0)>7){q=t;v=c[e>>2]|0;h=s;l=r;while(1){if((v|0)==0){z=q;A=h;B=l;break b}i=c[f>>2]|0;c[f>>2]=i+1;j=d[i]|0;i=v-1|0;c[e>>2]=i;k=q-8|0;o=Ds(j|0,0,k|0)|0;j=o|l;o=K|h;c[g>>2]=j;c[g+4>>2]=o;if((k|0)>7){q=k;v=i;h=o;l=j}else{z=k;A=o;B=j;break}}}else{z=t;A=s;B=r}}while(0);r=64-z|0;c[b>>2]=r;w=r;x=A;y=B}B=Es(y|0,x|0,64-a|0)|0;A=Ds(y|0,x|0,a|0)|0;c[g>>2]=A;c[g+4>>2]=K;c[b>>2]=w-a;u=(1<<a)-1+B|0;return u|0}function ld(a){a=a|0;var b=0,c=0;b=kd(a)|0;if((b|0)==(-99999|0)){c=-99999}else if((b|0)==0){c=0}else{c=(((b&1|0)==0?-b|0:b+1|0)|0)/2|0}return c|0}function md(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=b;c[a+4>>2]=b;c[a+8>>2]=b+d;return}function nd(a){a=a|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=a+4|0;f=c[e>>2]|0;g=(c[a+8>>2]|0)-f|0;c[a+12>>2]=510;h=a+20|0;b[h>>1]=8;i=a+16|0;c[i>>2]=0;if((g|0)<=0){return}a=f+1|0;c[e>>2]=a;j=(d[f]|0)<<8;c[i>>2]=j;b[h>>1]=0;if((g|0)<=1){return}c[e>>2]=f+2;c[i>>2]=j|(d[a]|0);b[h>>1]=-8;return}function od(f,g){f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=f+12|0;i=c[h>>2]|0;j=g|0;g=d[(i>>>6)-4+(22024+(((d[j]|0)>>>1&255)<<2))|0]|0;k=i-g|0;c[h>>2]=k;i=k<<7;l=f+16|0;m=c[l>>2]|0;if(m>>>0<i>>>0){n=a[j]|0;o=n&1;p=o&255;a[j]=a[25200+((n&255)>>>1&255)|0]<<1|o;if(!(i>>>0<32768>>>0)){q=p;return q|0}c[h>>2]=k<<1&67108862;k=c[l>>2]<<1;c[l>>2]=k;o=f+20|0;n=(b[o>>1]|0)+1&65535;b[o>>1]=n;if(!(n<<16>>16==0)){q=p;return q|0}b[o>>1]=-8;o=f+4|0;n=c[o>>2]|0;if((n|0)==(c[f+8>>2]|0)){q=p;return q|0}c[o>>2]=n+1;c[l>>2]=k|(d[n]|0);q=p;return q|0}else{p=d[25480+(g>>>3)|0]|0;c[l>>2]=m-i<<p;c[h>>2]=g<<p;g=a[j]|0;h=g&1^1;if((g&255)>>>0<2>>>0){i=h&255|g&-2;a[j]=i;r=i}else{r=g}a[j]=a[25264+((r&255)>>>1&255)|0]<<1|r&1;r=f+20|0;j=(e[r>>1]|0)+p&65535;b[r>>1]=j;if(!(j<<16>>16>-1)){q=h;return q|0}p=f+4|0;g=c[p>>2]|0;if((g|0)!=(c[f+8>>2]|0)){c[p>>2]=g+1;c[l>>2]=(d[g]|0)<<(j<<16>>16)|c[l>>2]}b[r>>1]=j-8;q=h;return q|0}return 0}function pd(a){a=a|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=a+12|0;f=(c[e>>2]|0)-2|0;c[e>>2]=f;g=f<<7;h=a+16|0;i=c[h>>2]|0;if(!(i>>>0<g>>>0)){j=1;return j|0}if(!(g>>>0<32768>>>0)){j=0;return j|0}c[e>>2]=f<<1&67108862;f=i<<1;c[h>>2]=f;i=a+20|0;e=(b[i>>1]|0)+1&65535;b[i>>1]=e;if(!(e<<16>>16==0)){j=0;return j|0}b[i>>1]=-8;i=a+4|0;e=c[i>>2]|0;if((e|0)==(c[a+8>>2]|0)){j=0;return j|0}c[i>>2]=e+1;c[h>>2]=f+(d[e]|0);j=0;return j|0}function qd(a){a=a|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=a+16|0;f=c[e>>2]<<1;c[e>>2]=f;g=a+20|0;h=(b[g>>1]|0)+1&65535;b[g>>1]=h;if(h<<16>>16>-1){b[g>>1]=-8;g=a+4|0;h=c[g>>2]|0;c[g>>2]=h+1;g=f|(d[h]|0);c[e>>2]=g;i=g}else{i=f}f=c[a+12>>2]<<7;if(i>>>0<f>>>0){j=0;return j|0}c[e>>2]=i-f;j=1;return j|0}function rd(a,e){a=a|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;if((e|0)<=0){f=e;return f|0}g=a+16|0;h=a+20|0;i=a+4|0;j=a+12|0;a=0;k=c[g>>2]|0;l=b[h>>1]|0;while(1){m=k<<1;c[g>>2]=m;n=l+1&65535;b[h>>1]=n;if(n<<16>>16>-1){b[h>>1]=-8;o=c[i>>2]|0;c[i>>2]=o+1;p=d[o]|0|m;c[g>>2]=p;q=p;r=-8}else{q=m;r=n}n=c[j>>2]<<7;if(q>>>0<n>>>0){f=a;s=7;break}m=q-n|0;c[g>>2]=m;n=a+1|0;if((n|0)<(e|0)){a=n;k=m;l=r}else{f=e;s=7;break}}if((s|0)==7){return f|0}return 0}function sd(a,f){a=a|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;if((f|0)<9){if((f|0)==0){g=0;return g|0}h=a+16|0;i=c[h>>2]<<f;c[h>>2]=i;j=a+20|0;k=(e[j>>1]|0)+f&65535;b[j>>1]=k;if(k<<16>>16>-1){l=a+4|0;m=c[l>>2]|0;c[l>>2]=m+1;l=(d[m]|0)<<(k<<16>>16);b[j>>1]=k-8;k=l|i;c[h>>2]=k;n=k}else{n=i}i=c[a+12>>2]<<7;k=(n>>>0)/(i>>>0)|0;l=1<<f;j=(k|0)<(l|0)?k:l-1|0;c[h>>2]=n-(ga(j,i)|0);g=j;return g|0}j=a+16|0;i=c[j>>2]<<8;c[j>>2]=i;n=a+20|0;h=b[n>>1]|0;l=h+8&65535;b[n>>1]=l;if(l<<16>>16>-1){k=a+4|0;m=c[k>>2]|0;c[k>>2]=m+1;k=(d[m]|0)<<(l<<16>>16);b[n>>1]=h;m=k|i;c[j>>2]=m;o=m;p=h}else{o=i;p=l}l=c[a+12>>2]<<7;i=(o>>>0)/(l>>>0)|0;h=(i|0)>255?255:i;i=o-(ga(h,l)|0)|0;c[j>>2]=i;o=f-8|0;if((o|0)==0){g=h;return g|0}f=a+4|0;a=o;o=h;h=i;i=p;while(1){p=a-1|0;m=h<<1;c[j>>2]=m;k=i+1&65535;b[n>>1]=k;if(k<<16>>16>-1){b[n>>1]=-8;q=c[f>>2]|0;c[f>>2]=q+1;r=d[q]|0|m;c[j>>2]=r;s=r;t=-8}else{s=m;t=k}if(s>>>0<l>>>0){u=0;v=s}else{k=s-l|0;c[j>>2]=k;u=1;v=k}k=u|o<<1;if((p|0)==0){g=k;break}else{a=p;o=k;h=v;i=t}}return g|0}function td(a,e){a=a|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=a+16|0;g=a+20|0;h=a+4|0;i=a+12|0;j=0;k=e;e=c[f>>2]|0;l=b[g>>1]|0;while(1){m=e<<1;c[f>>2]=m;n=l+1&65535;b[g>>1]=n;if(n<<16>>16>-1){b[g>>1]=-8;o=c[h>>2]|0;c[h>>2]=o+1;p=d[o]|0|m;c[f>>2]=p;q=p;r=-8}else{q=m;r=n}n=c[i>>2]<<7;if(q>>>0<n>>>0){break}m=q-n|0;c[f>>2]=m;j=j+(1<<k)|0;k=k+1|0;e=m;l=r}return(sd(a,k)|0)+j|0}function ud(){return 7448}function vd(){return 589824}function wd(a){a=a|0;var b=0;switch(a|0){case 1:{b=8488;break};case 1007:{b=8704;break};case 1008:{b=8352;break};case 1009:{b=8280;break};case 1004:{b=9336;break};case 1005:{b=9128;break};case 1006:{b=8896;break};case 4:{b=4872;break};case 1010:{b=8024;break};case 1011:{b=7760;break};case 1012:{b=7568;break};case 1002:{b=9728;break};case 1003:{b=9528;break};case 11:{b=12120;break};case 13:{b=10624;break};case 14:{b=10376;break};case 12:{b=11592;break};case 1e3:{b=10144;break};case 1001:{b=9928;break};case 3:{b=5792;break};case 500:{b=11248;break};case 501:{b=10688;break};case 0:{b=10944;break};case 9:{b=600;break};case 1019:{b=5584;break};case 1020:{b=5552;break};case 1021:{b=5320;break};case 1022:{b=5104;break};case 1023:{b=4800;break};case 1024:{b=4624;break};case 1025:{b=4440;break};case 10:{b=12480;break};case 5:{b=3192;break};case 6:{b=2e3;break};case 7:{b=1344;break};case 8:{b=920;break};case 1013:{b=7408;break};case 1014:{b=7184;break};case 1015:{b=6944;break};case 1016:{b=6712;break};case 1017:{b=6448;break};case 1018:{b=6168;break};default:{b=4240}}return b|0}function xd(a){a=a|0;var b=0;if((a|0)==0){b=1}else{b=(a|0)>999|0}return b|0}function yd(){var a=0,b=0;do{if(((I=c[11648]|0,c[11648]=I+1,I)+1|0)<=1){Hg();if(Og()|0){break}I=c[11648]|0,c[11648]=I-1,I;a=0;return a|0}}while(0);b=gs(1469744)|0;pe(b);if((b|0)!=0){a=b;return a|0}b=(I=c[11648]|0,c[11648]=I-1,I)-1|0;if((b|0)<0){I=c[11648]|0,c[11648]=I+1,I;a=0;return a|0}if((b|0)!=0){a=0;return a|0}Pg();a=0;return a|0}function zd(a){a=a|0;var b=0,d=0;b=a;se(b);if((a|0)!=0){re(b);is(a)}a=(I=c[11648]|0,c[11648]=I-1,I)-1|0;if((a|0)<0){I=c[11648]|0,c[11648]=I+1,I;d=12;return d|0}if((a|0)!=0){d=0;return d|0}Pg();d=0;return d|0}function Ad(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return gf(a+328|0,b,c,d,e,f)|0}function Bd(b){b=b|0;var c=0;c=b+328|0;b=c;jf(b)|0;jf(b)|0;a[c]=1;return 0}function Cd(a,b){a=a|0;b=b|0;return Ge(a,b)|0}function Dd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return hf(a+328|0,b,c,d,e,f)|0}function Ed(a){a=a|0;jf(a+328|0)|0;return}function Fd(b){b=b|0;jf(b+328|0)|0;a[b+329|0]=1;return}function Gd(a){a=a|0;te(a);return}function Hd(b){b=b|0;var d=0,e=0,f=0;if((c[b+1468712>>2]|0)<=0){d=0;return d|0}e=c[b+1468708>>2]|0;f=c[(c[(c[b+1468696>>2]|0)+(e>>>10<<2)>>2]|0)+((e&1023)<<2)>>2]|0;if((f|0)==0){d=0;return d|0}a[f+96|0]=0;Cf(b+1468660|0);d=f;return d|0}function Id(a){a=a|0;var b=0,d=0;if((c[a+1468712>>2]|0)<=0){b=0;return b|0}d=c[a+1468708>>2]|0;b=c[(c[(c[a+1468696>>2]|0)+(d>>>10<<2)>>2]|0)+((d&1023)<<2)>>2]|0;return b|0}function Jd(b){b=b|0;var d=0;if((c[b+1468712>>2]|0)==0){return}d=c[b+1468708>>2]|0;a[(c[(c[(c[b+1468696>>2]|0)+(d>>>10<<2)>>2]|0)+((d&1023)<<2)>>2]|0)+96|0]=0;Cf(b+1468660|0);return}function Kd(a){a=a|0;return Me(a)|0}function Ld(a){a=a|0;return c[a+1468424>>2]|0}function Md(a,b){a=a|0;b=b|0;Ne(a,b);return}function Nd(a,b){a=a|0;b=b|0;Pe(a,b);return}function Od(a,b){a=a|0;b=b|0;return Oe(a,b)|0}function Pd(a){a=a|0;return Qe(a)|0}function Qd(b,c,d){b=b|0;c=c|0;d=d|0;if((c|0)==0){a[b+168|0]=(d|0)!=0|0;return}else if((c|0)==8){a[b+189|0]=(d|0)!=0|0;return}else if((c|0)==7){a[b+188|0]=(d|0)!=0|0;return}else if((c|0)==6){a[b+170|0]=(d|0)!=0|0;return}else{bc(4048,3840,474,12536)}}function Rd(a,b,d){a=a|0;b=b|0;d=d|0;switch(b|0){case 1:{c[a+172>>2]=d;return};case 3:{c[a+180>>2]=d;return};case 2:{c[a+176>>2]=d;return};case 4:{c[a+184>>2]=d;return};case 5:{qe(a,d);return};default:{bc(4048,3840,507,12512)}}}function Sd(a,b){a=a|0;b=b|0;var c=0;if((b|0)==0){c=a+168|0}else if((b|0)==7){c=a+188|0}else if((b|0)==8){c=a+189|0}else if((b|0)==6){c=a+170|0}else{bc(4048,3840,542,12568);return 0}return d[c]|0|0}function Td(a){a=a|0;var b=0,d=0,e=0;b=c[a+364>>2]|0;d=c[a+336>>2]|0;if((d|0)==0){e=b;return e|0}e=(c[d+32>>2]|0)+b|0;return e|0}function Ud(a){a=a|0;return((c[a+336>>2]|0)!=0)+(c[a+360>>2]|0)|0}function Vd(a,b){a=a|0;b=b|0;var d=0;if((b|0)==0){d=c[a+68>>2]|0}else if((b|0)==1|(b|0)==2){d=c[a+76>>2]|0}else{d=0}return d|0}function Wd(a,b){a=a|0;b=b|0;var d=0;if((b|0)==0){d=c[a+72>>2]|0}else if((b|0)==1|(b|0)==2){d=c[a+80>>2]|0}else{d=0}return d|0}function Xd(a){a=a|0;return c[a+16>>2]|0}function Yd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(!(b>>>0<3>>>0)){bc(3608,3840,597,12632);return 0}e=c[a+56+(b<<2)>>2]|0;if((d|0)==0){return e|0}c[d>>2]=c[((b|0)==0?a+36|0:a+40|0)>>2];return e|0}function Zd(a,b){a=a|0;b=b|0;if(b>>>0<3>>>0){return c[a+78844+(b<<2)>>2]|0}else{bc(3608,3840,608,12600);return 0}return 0}function _d(a){a=a|0;var b=0;b=a+78832|0;return(K=c[b+4>>2]|0,c[b>>2]|0)|0}function $d(a){a=a|0;return c[a+78840>>2]|0}function ae(a,b){a=a|0;b=b|0;c[a+78840>>2]=b;return}function be(b,e,f,g,h,i,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;k=b+78800|0;l=c[k>>2]|0;m=b+78804|0;n=(ga(f>>l,c[m>>2]|0)|0)+(e>>l)|0;l=b+78792|0;if(((d[(c[l>>2]|0)+n|0]|0)&1<<h|0)==0){o=e;p=f;q=g;r=i&255;s=j&255}else{n=e;e=f;f=g;g=h;h=i;i=j;while(1){j=1<<f>>1;t=j+n|0;u=j+e|0;j=f-1|0;v=g+1|0;be(b,n,e,j,v,h,i);be(b,t,e,j,v,16,i);be(b,n,u,j,v,h,32);w=c[k>>2]|0;x=(ga(u>>w,c[m>>2]|0)|0)+(t>>w)|0;if(((d[(c[l>>2]|0)+x|0]|0)&1<<v|0)==0){o=t;p=u;q=j;r=16;s=32;break}else{n=t;e=u;f=j;g=v;h=16;i=32}}}i=1<<q;q=(i|0)>0;if(!q){return}h=(o|0)/4|0;g=b+78824|0;f=b+78828|0;e=b+78812|0;n=0;do{l=(n+p|0)/4|0;m=c[g>>2]|0;do{if((h|0)<(m|0)){if((l|0)>=(c[f>>2]|0)){break}k=(ga(m,l)|0)+h|0;v=(c[e>>2]|0)+k|0;a[v]=a[v]|r}}while(0);n=n+4|0;}while((n|0)<(i|0));if(!q){return}q=(p|0)/4|0;p=b+78824|0;n=b+78828|0;r=b+78812|0;b=0;do{e=(b+o|0)/4|0;h=c[p>>2]|0;do{if((e|0)<(h|0)){if((q|0)>=(c[n>>2]|0)){break}f=(ga(h,q)|0)+e|0;g=(c[r>>2]|0)+f|0;a[g]=a[g]|s}}while(0);b=b+4|0;}while((b|0)<(i|0));return}function ce(b,e,f,g,h,i){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;i=c[b+78740>>2]|0;h=(ga(f>>i,c[b+78744>>2]|0)|0)+(e>>i)|0;i=(c[b+78732>>2]|0)+(h*3|0)|0;h=1<<g;j=1<<g-1;k=1<<g-2;switch(((d[i]|d[i+1|0]<<8)<<16>>16&65535)>>>3&255&7|0){case 5:{if((h|0)<=0){return}i=(j+f+k|0)/4|0;g=b+78824|0;l=b+78828|0;m=b+78812|0;n=0;do{o=(n+e|0)/4|0;p=c[g>>2]|0;do{if((o|0)<(p|0)){if((i|0)>=(c[l>>2]|0)){break}q=(ga(p,i)|0)+o|0;r=(c[m>>2]|0)+q|0;a[r]=a[r]|-128}}while(0);n=n+1|0;}while((n|0)<(h|0));return};case 1:{if((h|0)<=0){return}n=(j+f|0)/4|0;m=b+78824|0;i=b+78828|0;l=b+78812|0;g=0;do{o=(g+e|0)/4|0;p=c[m>>2]|0;do{if((o|0)<(p|0)){if((n|0)>=(c[i>>2]|0)){break}r=(ga(p,n)|0)+o|0;q=(c[l>>2]|0)+r|0;a[q]=a[q]|-128}}while(0);g=g+1|0;}while((g|0)<(h|0));return};case 7:{if((h|0)<=0){return}g=(j+e+k|0)/4|0;l=b+78824|0;n=b+78828|0;i=b+78812|0;m=0;do{o=(m+f|0)/4|0;p=c[l>>2]|0;do{if((g|0)<(p|0)){if((o|0)>=(c[n>>2]|0)){break}q=(ga(p,o)|0)+g|0;r=(c[i>>2]|0)+q|0;a[r]=a[r]|64}}while(0);m=m+1|0;}while((m|0)<(h|0));return};case 3:{if((h|0)<=0){return}m=(j+e|0)/4|0;i=b+78824|0;g=b+78828|0;n=b+78812|0;l=(j+f|0)/4|0;o=0;do{p=(o+f|0)/4|0;r=c[i>>2]|0;do{if((m|0)<(r|0)){if((p|0)>=(c[g>>2]|0)){s=r;break}q=(ga(r,p)|0)+m|0;t=(c[n>>2]|0)+q|0;a[t]=a[t]|64;s=c[i>>2]|0}else{s=r}}while(0);r=(o+e|0)/4|0;do{if((r|0)<(s|0)){if((l|0)>=(c[g>>2]|0)){break}p=(ga(s,l)|0)+r|0;t=(c[n>>2]|0)+p|0;a[t]=a[t]|-128}}while(0);o=o+1|0;}while((o|0)<(h|0));return};case 6:{if((h|0)<=0){return}o=(k+e|0)/4|0;n=b+78824|0;l=b+78828|0;s=b+78812|0;g=0;do{i=(g+f|0)/4|0;m=c[n>>2]|0;do{if((o|0)<(m|0)){if((i|0)>=(c[l>>2]|0)){break}r=(ga(m,i)|0)+o|0;t=(c[s>>2]|0)+r|0;a[t]=a[t]|64}}while(0);g=g+1|0;}while((g|0)<(h|0));return};case 4:{if((h|0)<=0){return}g=(k+f|0)/4|0;k=b+78824|0;s=b+78828|0;o=b+78812|0;l=0;do{n=(l+e|0)/4|0;i=c[k>>2]|0;do{if((n|0)<(i|0)){if((g|0)>=(c[s>>2]|0)){break}m=(ga(i,g)|0)+n|0;t=(c[o>>2]|0)+m|0;a[t]=a[t]|-128}}while(0);l=l+1|0;}while((l|0)<(h|0));return};case 2:{if((h|0)<=0){return}l=(j+e|0)/4|0;e=b+78824|0;j=b+78828|0;o=b+78812|0;b=0;do{g=(b+f|0)/4|0;s=c[e>>2]|0;do{if((l|0)<(s|0)){if((g|0)>=(c[j>>2]|0)){break}k=(ga(s,g)|0)+l|0;n=(c[o>>2]|0)+k|0;a[n]=a[n]|64}}while(0);b=b+1|0;}while((b|0)<(h|0));return};default:{return}}}function de(b,f){b=b|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;g=c[b+74224>>2]|0;h=c[b+74220>>2]|0;i=(1<<h)-1|0;j=c[b+74236>>2]|0;k=c[b+74216>>2]|0;l=f<<h>>k;m=f+1<<h>>k;k=c[b+74240>>2]|0;f=(k|0)<(m|0)?k:m;if((l|0)>=(f|0)){n=0;return n|0}m=b+74232|0;k=b+78744|0;o=b+78732|0;p=b+78720|0;q=b+78724|0;r=b+78712|0;s=b+44|0;t=b+74616|0;u=b+74588|0;v=l;l=0;w=c[m>>2]|0;while(1){a:do{if((w|0)>0){x=ga(v,g)|0;y=(x|0)==0;z=y?0:32;A=(x&i|0)==0;B=x-1|0;C=ga(x>>h,j)|0;D=ga(B>>h,j)|0;if(y){y=0;E=l;F=w;while(1){G=(ga(c[k>>2]|0,v)|0)+y|0;H=(c[o>>2]|0)+(G*3|0)|0;G=(d[H]|d[H+1|0]<<8)<<16>>16&7;H=G&255;do{if(G<<24>>24==0){I=E;J=F}else{K=ga(y,g)|0;L=K>>h;M=c[p>>2]|0;N=c[r>>2]|0;O=c[s>>2]|0;P=c[O+(e[N+((K>>M)*24|0)+2>>1]<<2)>>2]|0;Q=(K|0)==0;R=Q?0:16;do{if(Q){S=R}else{if((K&i|0)!=0){S=R;break}if((a[P+764|0]|0)==0){if((c[P+792>>2]|0)!=(c[(c[O+(e[N+((K-1>>M)*24|0)+2>>1]<<2)>>2]|0)+792>>2]|0)){S=0;break}}if((a[t]|0)!=0){S=R;break}T=c[u>>2]|0;S=(c[T+(L+C<<2)>>2]|0)==(c[T+((K-1>>h)+C<<2)>>2]|0)?R:0}}while(0);if((a[P+753|0]|0)!=0){I=E;J=F;break}be(b,K,0,H,0,S&255,z&255);ce(b,K,0,H,0,0);I=1;J=c[m>>2]|0}}while(0);H=y+1|0;if((H|0)<(J|0)){y=H;E=I;F=J}else{U=I;V=J;break a}}}else{W=0;X=l;Y=w}while(1){F=(ga(c[k>>2]|0,v)|0)+W|0;E=(c[o>>2]|0)+(F*3|0)|0;F=(d[E]|d[E+1|0]<<8)<<16>>16&7;E=F&255;do{if(F<<24>>24==0){Z=X;_=Y}else{y=ga(W,g)|0;H=y>>h;G=c[p>>2]|0;R=y>>G;L=c[q>>2]|0;M=ga(x>>G,L)|0;N=c[r>>2]|0;O=c[s>>2]|0;Q=c[O+(e[N+((M+R|0)*24|0)+2>>1]<<2)>>2]|0;T=(y|0)==0;$=T?0:16;do{if(T){aa=$}else{if((y&i|0)!=0){aa=$;break}if((a[Q+764|0]|0)==0){if((c[Q+792>>2]|0)!=(c[(c[O+(e[N+((M+(y-1>>G)|0)*24|0)+2>>1]<<2)>>2]|0)+792>>2]|0)){aa=0;break}}if((a[t]|0)!=0){aa=$;break}ba=c[u>>2]|0;aa=(c[ba+(H+C<<2)>>2]|0)==(c[ba+((y-1>>h)+C<<2)>>2]|0)?$:0}}while(0);do{if(A){if((a[Q+764|0]|0)==0){if((c[Q+792>>2]|0)!=(c[(c[O+(e[N+(((ga(B>>G,L)|0)+R|0)*24|0)+2>>1]<<2)>>2]|0)+792>>2]|0)){ca=0;break}}if((a[t]|0)!=0){ca=z;break}$=c[u>>2]|0;ca=(c[$+(H+C<<2)>>2]|0)==(c[$+(H+D<<2)>>2]|0)?z:0}else{ca=z}}while(0);if((a[Q+753|0]|0)!=0){Z=X;_=Y;break}be(b,y,x,E,0,aa&255,ca&255);ce(b,y,x,E,0,0);Z=1;_=c[m>>2]|0}}while(0);E=W+1|0;if((E|0)<(_|0)){W=E;X=Z;Y=_}else{U=Z;V=_;break}}}else{U=l;V=w}}while(0);x=v+1|0;if((x|0)<(f|0)){v=x;l=U;w=V}else{n=U;break}}return n|0}function ee(f,g,h,i,j,k){f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0,ja=0,ka=0,la=0;l=g?2:1;m=g?1:2;n=g&1;o=n^1;p=g?80:160;q=g?16:32;g=f+78824|0;r=c[g>>2]|0;s=(r|0)>(k|0)?k:r;r=c[f+78828>>2]|0;k=(r|0)>(i|0)?i:r;if((k|0)<=(h|0)){return}r=(s|0)>(j|0);i=f+78812|0;t=f+78740|0;u=f+78744|0;v=f+78732|0;w=f+78760|0;x=f+78764|0;y=f+78752|0;z=f+78720|0;A=f+78724|0;B=f+78712|0;C=f+44|0;D=f+78708|0;E=f+78864|0;F=f+78800|0;G=f+78804|0;H=f+78792|0;f=h;a:while(1){if(r){h=f<<2;I=(h|0)/4|0;J=h-o|0;K=j;do{L=K<<2;M=(L|0)/4|0;N=(ga(c[g>>2]|0,I)|0)+M|0;O=(c[i>>2]|0)+N|0;N=a[O]|0;P=N&255;if((P&p|0)==0){a[O]=N&-4}else{N=L-n|0;O=c[t>>2]|0;Q=c[u>>2]|0;R=(ga(J>>O,Q)|0)+(N>>O)|0;S=c[v>>2]|0;T=S+(R*3|0)|0;R=S+(((ga(h>>O,Q)|0)+(L>>O)|0)*3|0)|0;b:do{if(((d[T]|d[T+1|0]<<8)<<16>>16&768)==0|((d[R]|d[R+1|0]<<8)<<16>>16&768)==0){U=2}else{if((P&q|0)!=0){O=c[F>>2]|0;Q=c[G>>2]|0;S=(ga(h>>O,Q)|0)+(L>>O)|0;V=c[H>>2]|0;if(!((a[V+S|0]|0)>-1)){U=1;break}if(!((a[V+((ga(J>>O,Q)|0)+(N>>O))|0]|0)>-1)){U=1;break}}O=c[w>>2]|0;Q=c[x>>2]|0;V=(ga(J>>O,Q)|0)+(N>>O)|0;S=c[y>>2]|0;W=(ga(h>>O,Q)|0)+(L>>O)|0;O=c[z>>2]|0;Q=c[A>>2]|0;X=(ga(J>>O,Q)|0)+(N>>O)|0;Y=c[B>>2]|0;Z=c[C>>2]|0;_=c[Z+(e[Y+(X*24|0)+2>>1]<<2)>>2]|0;X=c[Z+(e[Y+(((ga(h>>O,Q)|0)+(L>>O)|0)*24|0)+2>>1]<<2)>>2]|0;O=a[S+(V*12|0)+2|0]|0;Q=O<<24>>24==0;if(Q){$=-1}else{$=c[_+916+(a[S+(V*12|0)|0]<<2)>>2]|0}Y=a[S+(V*12|0)+3|0]|0;Z=Y<<24>>24==0;if(Z){aa=-1}else{aa=c[_+980+(a[S+(V*12|0)+1|0]<<2)>>2]|0}_=a[S+(W*12|0)+2|0]|0;ba=_<<24>>24==0;if(ba){ca=-1}else{ca=c[X+916+(a[S+(W*12|0)|0]<<2)>>2]|0}da=a[S+(W*12|0)+3|0]|0;ea=da<<24>>24==0;if(ea){fa=-1}else{fa=c[X+980+(a[S+(W*12|0)+1|0]<<2)>>2]|0}X=($|0)==(ca|0);if(!(X&(aa|0)==(fa|0))){if(!(($|0)==(fa|0)&(aa|0)==(ca|0))){U=1;break}}ha=Q?0:b[S+(V*12|0)+6>>1]|0;ia=Q?0:b[S+(V*12|0)+4>>1]|0;Q=Z?0:b[S+(V*12|0)+10>>1]|0;ja=Z?0:b[S+(V*12|0)+8>>1]|0;V=ba?0:b[S+(W*12|0)+6>>1]|0;Z=ba?0:b[S+(W*12|0)+4>>1]|0;ba=ea?0:b[S+(W*12|0)+10>>1]|0;ka=ea?0:b[S+(W*12|0)+8>>1]|0;if(((Y&255)+(O&255)|0)!=((da&255)+(_&255)|0)){we(c[D>>2]|0,1013,0);a[E]=3}if(($|0)==(aa|0)){if((ca|0)!=(fa|0)){la=35;break a}_=ia<<16>>16;da=Z<<16>>16;O=_-da|0;do{if((((O|0)<0?-O|0:O)|0)<=3){Y=(ha<<16>>16)-(V<<16>>16)|0;if((((Y|0)<0?-Y|0:Y)|0)>3){break}Y=(ja<<16>>16)-(ka<<16>>16)|0;if((((Y|0)<0?-Y|0:Y)|0)>3){break}Y=(Q<<16>>16)-(ba<<16>>16)|0;if((((Y|0)<0?-Y|0:Y)|0)<=3){U=0;break b}}}while(0);O=_-(ka<<16>>16)|0;do{if((((O|0)<0?-O|0:O)|0)<=3){Y=(ha<<16>>16)-(ba<<16>>16)|0;if((((Y|0)<0?-Y|0:Y)|0)>3){break}Y=(ja<<16>>16)-da|0;if((((Y|0)<0?-Y|0:Y)|0)>3){break}Y=(Q<<16>>16)-(V<<16>>16)|0;if((((Y|0)<0?-Y|0:Y)|0)<=3){U=0;break b}}}while(0);U=1;break}da=ia<<16>>16;if(X){O=da-(Z<<16>>16)|0;do{if((((O|0)<0?-O|0:O)|0)<=3){_=(ha<<16>>16)-(V<<16>>16)|0;if((((_|0)<0?-_|0:_)|0)>3){break}_=(ja<<16>>16)-(ka<<16>>16)|0;if((((_|0)<0?-_|0:_)|0)>3){break}_=(Q<<16>>16)-(ba<<16>>16)|0;if((((_|0)<0?-_|0:_)|0)<=3){U=0;break b}}}while(0);U=1;break}else{O=da-(ka<<16>>16)|0;do{if((((O|0)<0?-O|0:O)|0)<=3){X=(ha<<16>>16)-(ba<<16>>16)|0;if((((X|0)<0?-X|0:X)|0)>3){break}X=(ja<<16>>16)-(Z<<16>>16)|0;if((((X|0)<0?-X|0:X)|0)>3){break}X=(Q<<16>>16)-(V<<16>>16)|0;if((((X|0)<0?-X|0:X)|0)<=3){U=0;break b}}}while(0);U=1;break}}}while(0);L=(ga(c[g>>2]|0,I)|0)+M|0;N=(c[i>>2]|0)+L|0;a[N]=a[N]&-4|U}K=K+l|0;}while((K|0)<(s|0))}K=f+m|0;if((K|0)<(k|0)){f=K}else{la=49;break}}if((la|0)==35){bc(3464,10672,336,13672)}else if((la|0)==49){return}}function fe(b,f,g,h,j,k){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0;l=i;i=i+32|0;m=l|0;n=l+16|0;o=f?2:1;p=f?1:2;q=b+36|0;r=c[q>>2]|0;s=b+78824|0;t=c[s>>2]|0;u=(t|0)>(k|0)?k:t;t=c[b+78828>>2]|0;k=(t|0)>(h|0)?h:t;if((k|0)<=(g|0)){i=l;return}t=(u|0)>(j|0);h=b+78812|0;v=b+4|0;w=b+78740|0;x=b+78744|0;y=b+78732|0;z=b+78720|0;A=b+78724|0;B=b+78712|0;C=b+44|0;D=(c[b+74176>>2]|0)-8|0;E=n+2|0;F=n+1|0;G=n|0;H=n+14|0;I=n+13|0;J=n+12|0;K=m+2|0;L=m+1|0;M=m|0;N=m+14|0;O=m+13|0;P=m+12|0;Q=n+3|0;R=m+3|0;S=n+15|0;T=m+15|0;U=b+73984|0;b=r<<1;V=g;do{if(t){g=V<<2;W=(g|0)/4|0;X=g-1|0;Y=j;do{Z=Y<<2;_=(ga(c[s>>2]|0,W)|0)+((Z|0)/4|0)|0;$=a[(c[h>>2]|0)+_|0]&3;_=$&255;a:do{if(!($<<24>>24==0)){aa=c[v>>2]|0;ba=(ga(c[q>>2]|0,g)|0)+Z|0;ca=0;do{da=(ga(ca,r)|0)+ba|0;ea=ca+ba|0;if(f){a[m+(ca<<2)|0]=a[aa+da|0]|0;a[n+(ca<<2)|0]=a[aa+(da-1)|0]|0;a[m+(ca<<2)+1|0]=a[aa+(da+1)|0]|0;a[n+(ca<<2)+1|0]=a[aa+(da-2)|0]|0;a[m+(ca<<2)+2|0]=a[aa+(da+2)|0]|0;a[n+(ca<<2)+2|0]=a[aa+(da-3)|0]|0;a[m+(ca<<2)+3|0]=a[aa+(da+3)|0]|0;a[n+(ca<<2)+3|0]=a[aa+(da-4)|0]|0}else{a[m+(ca<<2)|0]=a[aa+ea|0]|0;a[n+(ca<<2)|0]=a[aa+(ea-r)|0]|0;a[m+(ca<<2)+1|0]=a[aa+(ea+r)|0]|0;a[n+(ca<<2)+1|0]=a[aa+(ea-(r<<1))|0]|0;a[m+(ca<<2)+2|0]=a[aa+(ea+(r<<1))|0]|0;a[n+(ca<<2)+2|0]=a[aa+(ea+(r*-3|0))|0]|0;a[m+(ca<<2)+3|0]=a[aa+(ea+(r*3|0))|0]|0;a[n+(ca<<2)+3|0]=a[aa+(ea-(r<<2))|0]|0}ca=ca+1|0;}while((ca|0)<4);ca=c[w>>2]|0;ea=Z>>ca;da=c[x>>2]|0;fa=ga(g>>ca,da)|0;ha=fa+ea|0;ia=c[y>>2]|0;if(f){ja=fa+(Z-1>>ca)|0}else{ja=(ga(X>>ca,da)|0)+ea|0}ka=(a[ia+(ha*3|0)+2|0]|0)+1+(a[ia+(ja*3|0)+2|0]|0)>>1;la=c[z>>2]|0;ma=(ga(g>>la,c[A>>2]|0)|0)+(Z>>la)|0;la=c[(c[C>>2]|0)+(e[(c[B>>2]|0)+(ma*24|0)+2>>1]<<2)>>2]|0;ma=(c[la+756>>2]|0)+ka|0;if((ma|0)<0){na=0}else{na=(ma|0)>51?51:ma}ma=d[25136+na|0]<<D;oa=(_<<1)-2+ka+(c[la+760>>2]|0)|0;if((oa|0)<0){pa=0}else{pa=(oa|0)>53?53:oa}oa=d[25408+pa|0]<<D;la=a[E]|0;ka=a[F]|0;qa=a[G]|0;ra=qa&255;sa=(la&255)-((ka&255)<<1)+ra|0;ta=(sa|0)<0?-sa|0:sa;sa=d[J]|0;ua=(d[H]|0)-(d[I]<<1)+sa|0;va=(ua|0)<0?-ua|0:ua;ua=a[K]|0;wa=a[L]|0;xa=a[M]|0;ya=xa&255;za=(ua&255)-((wa&255)<<1)+ya|0;Aa=(za|0)<0?-za|0:za;za=d[P]|0;Ba=(d[N]|0)-(d[O]<<1)+za|0;Ca=(Ba|0)<0?-Ba|0:Ba;Ba=Aa+ta|0;Da=Ca+va|0;Ea=va+ta|0;ta=Ca+Aa|0;if((Da+Ba|0)>=(ma|0)){break}Aa=ma>>2;do{if((Ba<<1|0)<(Aa|0)){Ca=(d[Q]|0)-ra|0;va=ya-(d[R]|0)|0;if((((va|0)<0?-va|0:va)+((Ca|0)<0?-Ca|0:Ca)|0)>=(ma>>3|0)){Fa=1;break}Ca=ra-ya|0;Fa=(((Ca|0)<0?-Ca|0:Ca)|0)>=((oa*5|0)+1>>1|0)}else{Fa=1}}while(0);do{if((Da<<1|0)<(Aa|0)){ya=(d[S]|0)-sa|0;ra=za-(d[T]|0)|0;if((((ra|0)<0?-ra|0:ra)+((ya|0)<0?-ya|0:ya)|0)>=(ma>>3|0)){Ga=1;break}ya=sa-za|0;Ga=(((ya|0)<0?-ya|0:ya)|0)>=((oa*5|0)+1>>1|0)}else{Ga=1}}while(0);za=Fa|Ga;sa=(ma>>1)+ma>>3;Aa=(a[U]|0)!=0;if(f){Da=ia+((fa+(Z-1>>ca)|0)*3|0)|0;ya=(d[Da]|d[Da+1|0]<<8)<<16>>16;if(Aa){ra=ia+(ha*3|0)|0;Ha=((d[ra]|d[ra+1|0]<<8)<<16>>16&1024)==0;Ia=ra;Ja=(ya&1024)==0;Ka=(d[Da]|d[Da+1|0]<<8)<<16>>16}else{Ha=1;Ia=ia+(ha*3|0)|0;Ja=1;Ka=ya}La=(Ka&2048)==0&Ja;Ma=((d[Ia]|d[Ia+1|0]<<8)<<16>>16&2048)==0&Ha}else{ya=ia+(((ga(X>>ca,da)|0)+ea|0)*3|0)|0;Da=(d[ya]|d[ya+1|0]<<8)<<16>>16;if(Aa){Aa=ia+(ha*3|0)|0;Na=((d[Aa]|d[Aa+1|0]<<8)<<16>>16&1024)==0;Oa=Aa;Pa=(d[ya]|d[ya+1|0]<<8)<<16>>16&2048|Da&1024}else{Na=1;Oa=ia+(ha*3|0)|0;Pa=Da&2048}La=Pa<<16>>16==0;Ma=((d[Oa]|d[Oa+1|0]<<8)<<16>>16&2048)==0&Na}Da=oa*10|0;ya=-oa|0;Aa=ba-1|0;ra=(Ea|0)>=(sa|0)|La^1;Ba=(ta|0)>=(sa|0)|Ma^1;sa=oa>>1;Ca=-sa|0;va=ba|1;Qa=ba+r|0;Ra=ba-2|0;Sa=ba-b|0;Ta=ba-r|0;Ua=oa<<1;Va=0;Wa=qa;Xa=ka;Ya=la;Za=xa;_a=wa;$a=ua;while(1){ab=a[n+(Va<<2)+3|0]|0;bb=a[m+(Va<<2)+3|0]|0;do{if(za){cb=Za&255;db=Wa&255;eb=_a&255;fb=Xa&255;gb=((cb-db|0)*9|0)+8+((eb-fb|0)*-3|0)>>4;if((((gb|0)<0?-gb|0:gb)|0)>=(Da|0)){break}if((gb|0)<(ya|0)){hb=ya}else{hb=(gb|0)>(oa|0)?oa:gb}do{if(f){if(La){gb=hb+db|0;if((gb|0)<0){ib=0}else{ib=(gb|0)>255?-1:gb&255}a[aa+(Aa+(ga(Va,r)|0))|0]=ib}if(!Ma){break}gb=cb-hb|0;if((gb|0)<0){jb=0}else{jb=(gb|0)>255?-1:gb&255}a[aa+((ga(Va,r)|0)+ba)|0]=jb}else{if(La){gb=hb+db|0;if((gb|0)<0){kb=0}else{kb=(gb|0)>255?-1:gb&255}a[aa+(Ta+Va)|0]=kb}if(!Ma){break}gb=cb-hb|0;if((gb|0)<0){lb=0}else{lb=(gb|0)>255?-1:gb&255}a[aa+(Va+ba)|0]=lb}}while(0);do{if(!ra){gb=hb+(((db+1+(Ya&255)|0)>>>1)-fb)|0;mb=gb>>1;if((mb|0)<(Ca|0)){nb=Ca}else{nb=((mb|0)>(sa|0)?oa:gb)>>1}gb=nb+fb|0;mb=(gb|0)<0;if(f){if(mb){ob=0}else{ob=(gb|0)>255?-1:gb&255}a[aa+(Ra+(ga(Va,r)|0))|0]=ob;break}else{if(mb){pb=0}else{pb=(gb|0)>255?-1:gb&255}a[aa+(Sa+Va)|0]=pb;break}}}while(0);if(Ba){break}fb=((cb+1+($a&255)|0)>>>1)-eb-hb|0;db=fb>>1;if((db|0)<(Ca|0)){qb=Ca}else{qb=((db|0)>(sa|0)?oa:fb)>>1}fb=qb+eb|0;db=(fb|0)<0;if(f){if(db){rb=0}else{rb=(fb|0)>255?-1:fb&255}a[aa+(va+(ga(Va,r)|0))|0]=rb;break}else{if(db){sb=0}else{sb=(fb|0)>255?-1:fb&255}a[aa+(Qa+Va)|0]=sb;break}}else{fb=Ya&255;db=Xa&255;gb=Wa&255;mb=Za&255;tb=mb<<1;ub=_a&255;vb=(gb<<1)+4|0;wb=vb+(db<<1)+fb+tb+ub>>3;xb=gb-Ua|0;do{if((wb|0)<(xb|0)){yb=xb&255}else{zb=gb+Ua|0;if((wb|0)>(zb|0)){yb=zb&255;break}else{yb=wb&255;break}}}while(0);wb=(gb+2+db+fb+mb|0)>>>2;xb=db-Ua|0;do{if((wb|0)<(xb|0)){Ab=xb&255}else{eb=db+Ua|0;if((wb|0)>(eb|0)){Ab=eb&255;break}else{Ab=wb&255;break}}}while(0);wb=gb+4+db+(fb*3|0)+((ab&255)<<1)+mb>>3;xb=fb-Ua|0;do{if((wb|0)<(xb|0)){Bb=xb&255}else{eb=fb+Ua|0;if((wb|0)>(eb|0)){Bb=eb&255;break}else{Bb=wb&255;break}}}while(0);wb=$a&255;fb=vb+db+tb+(ub<<1)+wb>>3;xb=mb-Ua|0;do{if((fb|0)<(xb|0)){Cb=xb&255}else{eb=mb+Ua|0;if((fb|0)>(eb|0)){Cb=eb&255;break}else{Cb=fb&255;break}}}while(0);fb=mb+gb+ub|0;xb=(wb+2+fb|0)>>>2;tb=ub-Ua|0;do{if((xb|0)<(tb|0)){Db=tb&255}else{db=ub+Ua|0;if((xb|0)>(db|0)){Db=db&255;break}else{Db=xb&255;break}}}while(0);xb=(fb+4+(wb*3|0)+((bb&255)<<1)|0)>>>3;ub=wb-Ua|0;do{if((xb|0)<(ub|0)){Eb=ub&255}else{tb=wb+Ua|0;if((xb|0)>(tb|0)){Eb=tb&255;break}else{Eb=xb&255;break}}}while(0);if(f){xb=(ga(Va,r)|0)+ba|0;if(La){a[aa+(xb-1)|0]=yb}if(Ma){a[aa+xb|0]=Cb}if(La){a[aa+(xb-2)|0]=Ab}if(Ma){a[aa+(xb+1)|0]=Db}if(La){a[aa+(xb-3)|0]=Bb}if(!Ma){break}a[aa+(xb+2)|0]=Eb;break}else{xb=Va+ba|0;if(La){a[aa+(xb-r)|0]=yb}if(Ma){a[aa+xb|0]=Cb}if(La){a[aa+(xb-(r<<1))|0]=Ab}if(Ma){a[aa+(xb+r)|0]=Db}if(La){a[aa+(xb+(r*-3|0))|0]=Bb}if(!Ma){break}a[aa+(xb+(r<<1))|0]=Eb;break}}}while(0);bb=Va+1|0;if((bb|0)>=4){break a}Va=bb;Wa=a[n+(bb<<2)|0]|0;Xa=a[n+(bb<<2)+1|0]|0;Ya=a[n+(bb<<2)+2|0]|0;Za=a[m+(bb<<2)|0]|0;_a=a[m+(bb<<2)+1|0]|0;$a=a[m+(bb<<2)+2|0]|0}}}while(0);Y=Y+o|0;}while((Y|0)<(u|0))}V=V+p|0;}while((V|0)<(k|0));i=l;return}function ge(b,f,g,h,j,k){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0;l=i;i=i+16|0;m=l|0;n=l+8|0;o=f?4:2;p=f?2:4;q=b+40|0;r=c[q>>2]|0;s=b+78824|0;t=c[s>>2]|0;u=(t|0)>(k|0)?k:t;t=c[b+78828>>2]|0;k=(t|0)>(h|0)?h:t;if((k|0)<=(g|0)){i=l;return}t=(u|0)>(j|0);h=b+78812|0;v=b+74356|0;w=b+74360|0;x=b+78740|0;y=b+78744|0;z=b+78732|0;A=b+78720|0;B=b+78724|0;C=b+78712|0;D=b+44|0;E=b+74184|0;F=b+73984|0;G=g;do{if(t){g=G<<1;H=G<<2;I=(H|0)/4|0;J=H-1|0;K=j;do{L=K<<1;M=K<<2;N=(ga(c[s>>2]|0,I)|0)+((M|0)/4|0)|0;O=a[(c[h>>2]|0)+N|0]&3;if((O&255)>>>0>1>>>0){N=M-1|0;P=((O&255)<<1)-2|0;O=0;do{Q=c[((O|0)==0?v:w)>>2]|0;O=O+1|0;R=c[b+4+(O<<2)>>2]|0;S=(ga(g,c[q>>2]|0)|0)+L|0;T=0;while(1){U=T+S|0;V=S+~T|0;W=(ga(T,r)|0)+S|0;X=T+1|0;Y=S-(ga(X,r)|0)|0;if(f){a[n+(T<<2)|0]=a[R+U|0]|0;a[m+(T<<2)|0]=a[R+V|0]|0;a[n+(T<<2)+1|0]=a[R+(U+r)|0]|0;a[m+(T<<2)+1|0]=a[R+(V+r)|0]|0;Z=r<<1;a[n+(T<<2)+2|0]=a[R+(U+Z)|0]|0;a[m+(T<<2)+2|0]=a[R+(V+Z)|0]|0;Z=r*3|0;a[n+(T<<2)+3|0]=a[R+(U+Z)|0]|0;a[m+(T<<2)+3|0]=a[R+(V+Z)|0]|0}else{a[n+(T<<2)|0]=a[R+W|0]|0;a[m+(T<<2)|0]=a[R+Y|0]|0;a[n+(T<<2)+1|0]=a[R+(W+1)|0]|0;a[m+(T<<2)+1|0]=a[R+(Y+1)|0]|0;a[n+(T<<2)+2|0]=a[R+(W+2)|0]|0;a[m+(T<<2)+2|0]=a[R+(Y+2)|0]|0;a[n+(T<<2)+3|0]=a[R+(W+3)|0]|0;a[m+(T<<2)+3|0]=a[R+(Y+3)|0]|0}if((X|0)<2){T=X}else{break}}T=c[x>>2]|0;X=M>>T;Y=c[y>>2]|0;W=ga(H>>T,Y)|0;Z=W+X|0;V=c[z>>2]|0;if(f){_=W+(N>>T)|0}else{_=(ga(J>>T,Y)|0)+X|0}U=((a[V+(Z*3|0)+2|0]|0)+1+(a[V+(_*3|0)+2|0]|0)>>1)+Q|0;do{if((U|0)<30){$=U}else{if((U|0)>42){$=U-6|0;break}else{$=c[8+(U-30<<2)>>2]|0;break}}}while(0);U=c[A>>2]|0;Q=(ga(H>>U,c[B>>2]|0)|0)+(M>>U)|0;U=P+$+(c[(c[(c[D>>2]|0)+(e[(c[C>>2]|0)+(Q*24|0)+2>>1]<<2)>>2]|0)+760>>2]|0)|0;if((U|0)<0){aa=0}else{aa=(U|0)>53?53:U}U=d[25408+aa|0]<<(c[E>>2]|0)-8;Q=(a[F]|0)==0;if(f){ba=V+((W+(N>>T)|0)*3|0)|0;ca=(d[ba]|d[ba+1|0]<<8)<<16>>16;if(Q){da=1;ea=V+(Z*3|0)|0;fa=ca&2048}else{ha=V+(Z*3|0)|0;da=((d[ha]|d[ha+1|0]<<8)<<16>>16&1024)==0;ea=ha;fa=(d[ba]|d[ba+1|0]<<8)<<16>>16&2048|ca&1024}ca=fa<<16>>16==0;ba=((d[ea]|d[ea+1|0]<<8)<<16>>16&2048)==0&da;ha=-U|0;ia=S-1|0;ja=0;do{ka=d[n+ja|0]|0;la=d[m+ja|0]|0;ma=(d[m+4+ja|0]|0)+4+(ka-la<<2)-(d[n+4+ja|0]|0)>>3;if((ma|0)<(ha|0)){na=ha}else{na=(ma|0)>(U|0)?U:ma}if(ca){ma=la+na|0;if((ma|0)<0){oa=0}else{oa=(ma|0)>255?-1:ma&255}a[R+(ia+(ga(ja,r)|0))|0]=oa}if(ba){ma=ka-na|0;if((ma|0)<0){pa=0}else{pa=(ma|0)>255?-1:ma&255}a[R+((ga(ja,r)|0)+S)|0]=pa}ja=ja+1|0;}while((ja|0)<4)}else{ja=V+(((ga(J>>T,Y)|0)+X|0)*3|0)|0;ba=(d[ja]|d[ja+1|0]<<8)<<16>>16;if(Q){qa=1;ra=V+(Z*3|0)|0;sa=ba&2048}else{ia=V+(Z*3|0)|0;qa=((d[ia]|d[ia+1|0]<<8)<<16>>16&1024)==0;ra=ia;sa=(d[ja]|d[ja+1|0]<<8)<<16>>16&2048|ba&1024}ba=sa<<16>>16==0;ja=((d[ra]|d[ra+1|0]<<8)<<16>>16&2048)==0&qa;ia=-U|0;ca=S-r|0;ha=0;do{W=d[n+ha|0]|0;ma=d[m+ha|0]|0;ka=(d[m+4+ha|0]|0)+4+(W-ma<<2)-(d[n+4+ha|0]|0)>>3;if((ka|0)<(ia|0)){ta=ia}else{ta=(ka|0)>(U|0)?U:ka}if(ba){ka=ma+ta|0;if((ka|0)<0){ua=0}else{ua=(ka|0)>255?-1:ka&255}a[R+(ca+ha)|0]=ua}if(ja){ka=W-ta|0;if((ka|0)<0){va=0}else{va=(ka|0)>255?-1:ka&255}a[R+(ha+S)|0]=va}ha=ha+1|0;}while((ha|0)<4)}}while((O|0)<2)}K=K+o|0;}while((K|0)<(u|0))}G=G+p|0;}while((G|0)<(k|0));i=l;return}function he(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=b|0;e=b+4|0;c[e>>2]=1;f=b+8|0;Sf(c[f>>2]|0);g=c[f>>2]|0;h=c[g+78824>>2]|0;i=(c[g+74228>>2]|0)/4|0;j=b+12|0;k=c[j>>2]|0;l=ga(k,i)|0;m=k+1|0;n=ga(m,i)|0;i=c[g+78828>>2]|0;o=(n|0)>(i|0)?i:n;n=b+16|0;b=(a[n]|0)!=0;i=b?2:3;p=c[g+74236>>2]|0;q=p-1|0;do{if(b){r=(c[g+74244>>2]|0)-1|0;Uf(g,d,q,(r|0)<(m|0)?r:m,1)}else{if((k|0)>0){Uf(g,d,q,k-1|0,2);s=c[f>>2]|0;t=c[j>>2]|0}else{s=g;t=k}Uf(s,d,q,t,2);r=(c[j>>2]|0)+1|0;u=c[f>>2]|0;if((r|0)>=(c[u+74244>>2]|0)){break}Uf(u,d,q,r,2)}}while(0);d=c[f>>2]|0;t=c[j>>2]|0;do{if((a[n]|0)==0){s=ga(c[d+78724>>2]|0,t)|0;if((a[(c[d+78712>>2]|0)+(s*24|0)+21|0]|0)!=0){v=d;w=0;x=11}}else{s=de(d,t)|0;k=c[f>>2]|0;g=ga(c[k+78724>>2]|0,c[j>>2]|0)|0;a[(c[k+78712>>2]|0)+(g*24|0)+21|0]=s&1;if(!s){break}v=k;w=(a[n]|0)!=0;x=11}}while(0);if((x|0)==11){ee(v,w,l,o,0,h);fe(c[f>>2]|0,(a[n]|0)!=0,l,o,0,h);ge(c[f>>2]|0,(a[n]|0)!=0,l,o,0,h)}if((p|0)<1){c[e>>2]=3;y=c[f>>2]|0;Tf(y);return}else{z=0}while(1){p=c[f>>2]|0;h=(ga(c[j>>2]|0,c[p+74236>>2]|0)|0)+z|0;Uh((c[p+78880>>2]|0)+(h*76|0)|0,i);if((z|0)>=(q|0)){break}z=z+1|0}c[e>>2]=3;y=c[f>>2]|0;Tf(y);return}function ie(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+8|0;e=d|0;f=c[b>>2]|0;g=c[f+78708>>2]|0;h=f+74244|0;Rf(f,c[h>>2]<<1);j=b+79020|0;k=b+79024|0;l=b+79016|0;b=g+1467912|0;if((c[h>>2]|0)>0){m=0}else{i=d;return}do{g=gs(20)|0;c[g+4>>2]=0;c[g>>2]=17088;c[g+8>>2]=f;c[g+12>>2]=m;a[g+16|0]=1;n=g;c[e>>2]=n;g=c[j>>2]|0;if((g|0)==(c[k>>2]|0)){me(l,e)}else{if((g|0)==0){o=0}else{c[g>>2]=n;o=c[j>>2]|0}c[j>>2]=o+4}Zh(b,n);m=m+1|0;p=c[h>>2]|0;}while((m|0)<(p|0));if((p|0)>0){q=0}else{i=d;return}do{p=gs(20)|0;c[p+4>>2]=0;c[p>>2]=17088;c[p+8>>2]=f;c[p+12>>2]=q;a[p+16|0]=0;m=p;c[e>>2]=m;p=c[j>>2]|0;if((p|0)==(c[k>>2]|0)){me(l,e)}else{if((p|0)==0){r=0}else{c[p>>2]=m;r=c[j>>2]|0}c[j>>2]=r+4}Zh(b,m);q=q+1|0;}while((q|0)<(c[h>>2]|0));i=d;return}function je(a){a=a|0;var b=0,d=0,e=0;b=a+74244|0;if((c[b>>2]|0)>0){d=0;e=0}else{return}do{d=d|(de(a,e)|0);e=e+1|0;}while((e|0)<(c[b>>2]|0));if(!d){return}d=a+78828|0;b=a+78824|0;ee(a,1,0,c[d>>2]|0,0,c[b>>2]|0);fe(a,1,0,c[d>>2]|0,0,c[b>>2]|0);ge(a,1,0,c[d>>2]|0,0,c[b>>2]|0);ee(a,0,0,c[d>>2]|0,0,c[b>>2]|0);fe(a,0,0,c[d>>2]|0,0,c[b>>2]|0);ge(a,0,0,c[d>>2]|0,0,c[b>>2]|0);return}function ke(a){a=a|0;return}function le(a){a=a|0;is(a);return}function me(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){gp(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0<536870911>>>0){g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){l=0;m=0}else{n=a;o=5}}else{n=1073741823;o=5}if((o|0)==5){l=gs(n<<2)|0;m=n}n=l+(i<<2)|0;if((n|0)!=0){c[n>>2]=c[b>>2]}b=f;xs(l|0,b|0,h)|0;c[e>>2]=l;c[d>>2]=l+(j<<2);c[k>>2]=l+(m<<2);if((f|0)==0){return}is(b);return}function ne(a){a=a|0;tb(a|0)|0;Mb()}function oe(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=a+78988|0;d=c[b>>2]|0;e=a+78984|0;f=c[e>>2]|0;if((d|0)!=(f|0)){g=0;h=f;f=d;while(1){d=c[h+(g<<2)>>2]|0;if((d|0)==0){i=f;j=h}else{ef((c[d+48>>2]|0)+328|0,c[d>>2]|0);k=c[d+44>>2]|0;if((k|0)!=0){js(k)}is(d);i=c[b>>2]|0;j=c[e>>2]|0}d=g+1|0;if(d>>>0<i-j>>2>>>0){g=d;h=j;f=i}else{break}}}i=a+79020|0;f=c[i>>2]|0;j=a+79016|0;h=c[j>>2]|0;if((f|0)==(h|0)){l=f}else{g=0;d=h;h=f;while(1){f=c[d+(g<<2)>>2]|0;if((f|0)==0){m=h;n=d}else{Ac[c[(c[f>>2]|0)+4>>2]&511](f);m=c[i>>2]|0;n=c[j>>2]|0}f=g+1|0;if(f>>>0<m-n>>2>>>0){g=f;d=n;h=m}else{l=n;break}}}n=c[a+79028>>2]|0;if((n|0)==0){o=l}else{l=a+79032|0;if((c[l>>2]|0)!=(n|0)){c[l>>2]=n}is(n|0);o=c[j>>2]|0}if((o|0)!=0){j=c[i>>2]|0;if((j|0)!=(o|0)){c[i>>2]=j+(~((j-4+(-o|0)|0)>>>2)<<2)}is(o)}o=c[a+78996>>2]|0;if((o|0)!=0){j=a+79e3|0;i=c[j>>2]|0;if((i|0)!=(o|0)){c[j>>2]=i+(~(((i-80+(-o|0)|0)>>>0)/80|0)*80|0)}is(o)}o=c[e>>2]|0;if((o|0)==0){p=a+8|0;Mf(p);return}e=c[b>>2]|0;if((e|0)!=(o|0)){c[b>>2]=e+(~((e-4+(-o|0)|0)>>>2)<<2)}is(o);p=a+8|0;Mf(p);return}function pe(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;c[b+80>>2]=0;c[b+164>>2]=0;bf(b+328|0);d=b+1188092|0;e=b+1107516|0;do{hh(e);e=e+5036|0;}while((e|0)!=(d|0));d=b+1467900|0;e=b+1188092|0;do{pg(e);e=e+4372|0;}while((e|0)!=(d|0));ys(b+1467916|0,0,24)|0;rf(b+1468660|0);c[b+1469728>>2]=0;c[b+1469732>>2]=0;c[b+1469736>>2]=0;a[b+168|0]=0;a[b+169|0]=1;a[b+170|0]=0;a[b+188|0]=0;a[b+189|0]=0;ys(b+172|0,-1|0,16)|0;bi(b+204|0);d=b+192|0;e=21984;f=c[e+4>>2]|0;c[d>>2]=c[e>>2];c[d+4>>2]=f;c[b+200>>2]=0;c[b+1467900>>2]=0;c[b+1467904>>2]=0;c[b+1467908>>2]=0;c[b+1468404>>2]=0;f=b+1468408|0;c[f>>2]=6;c[b+1468412>>2]=100;c[b+1468416>>2]=6;c[b+1468424>>2]=6;c[b+1468420>>2]=100;d=6;while(1){e=d*100|0;g=(e|0)/7|0;h=(e+100|0)/7|0;a:do{if((g|0)>(h|0)){i=d}else{e=h-g|0;j=d;k=g;while(1){l=c[f>>2]|0;m=(j|0)>(l|0);n=m?l:j;a[b+1468428+(k<<1)|0]=n;a[b+1468428+(k<<1)+1|0]=m?100:(((k-g|0)*100|0|0)/(e|0)|0)&255;if((k|0)>=(h|0)){i=n;break a}j=n;k=k+1|0}}}while(0);c[b+1468632+(i<<2)>>2]=h;if((i|0)>0){d=i-1|0}else{break}}i=b+1468716|0;ys(i|0,0,24)|0;a[b+1468720|0]=1;c[i>>2]=-1;return}function qe(a,b){a=a|0;b=b|0;bi(a+204|0);return}function re(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a+1469728|0;d=c[b>>2]|0;e=a+1469732|0;f=c[e>>2]|0;if((d|0)==(f|0)){g=d}else{h=f;f=d;while(1){d=c[h-4>>2]|0;if((d|0)==0){i=h;j=f}else{oe(d);is(d);i=c[e>>2]|0;j=c[b>>2]|0}d=i-4|0;k=i+(~((d+(-d|0)|0)>>>2)<<2)|0;c[e>>2]=k;if((j|0)==(k|0)){g=j;break}else{h=k;f=j}}}if((g|0)!=0){is(g)}sf(a+1468660|0);g=a+1467916|0;_e(g|0);j=a+1467920|0;f=c[j>>2]|0;h=a+1467924|0;e=c[h>>2]|0;do{if((f|0)!=(e|0)){i=f;do{is(c[i>>2]|0);i=i+4|0;}while((i|0)!=(e|0));i=c[j>>2]|0;b=c[h>>2]|0;if((b|0)==(i|0)){break}c[h>>2]=b+(~((b-4+(-i|0)|0)>>>2)<<2)}}while(0);h=c[g>>2]|0;if((h|0)!=0){is(h)}h=a+1188092|0;g=a+1467900|0;do{g=g-4372|0;qg(g);}while((g|0)!=(h|0));h=a+1107516|0;g=a+1188092|0;do{g=g-5036|0;ih(g);}while((g|0)!=(h|0));cf(a+328|0);return}function se(a){a=a|0;if((c[a+1468404>>2]|0)<=0){return}Yh(a+1467912|0);return}function te(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=b+1468404|0;if((c[d>>2]|0)>0){Yh(b+1467912|0)}c[b+1468736>>2]=0;c[b+1468716>>2]=-1;a[b+1468720|0]=1;Af(b+1468660|0);kf(b+328|0);e=b+1469728|0;f=c[e>>2]|0;g=b+1469732|0;h=c[g>>2]|0;if((f|0)!=(h|0)){i=h;h=f;while(1){f=c[i-4>>2]|0;if((f|0)==0){j=i;k=h}else{oe(f);is(f);j=c[g>>2]|0;k=c[e>>2]|0}f=j-4|0;l=j+(~((f+(-f|0)|0)>>>2)<<2)|0;c[g>>2]=l;if((k|0)==(l|0)){break}else{i=l;h=k}}}k=c[d>>2]|0;if((k|0)<=0){return}Wh(b+1467912|0,k)|0;c[d>>2]=k;return}function ue(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=a[d+1|0]|0;f=b+1188092+(e*4372|0)|0;xs(f|0,d|0,216)|0;if((f|0)==(d|0)){g=b+1188092+(e*4372|0)+276|0;h=d+276|0;i=g;j=h;xs(i|0,j|0,4095)|0;return}Se(b+1188092+(e*4372|0)+216|0,c[d+216>>2]|0,c[d+220>>2]|0);Se(b+1188092+(e*4372|0)+228|0,c[d+228>>2]|0,c[d+232>>2]|0);Se(b+1188092+(e*4372|0)+240|0,c[d+240>>2]|0,c[d+244>>2]|0);Se(b+1188092+(e*4372|0)+252|0,c[d+252>>2]|0,c[d+256>>2]|0);Se(b+1188092+(e*4372|0)+264|0,c[d+264>>2]|0,c[d+268>>2]|0);g=b+1188092+(e*4372|0)+276|0;h=d+276|0;i=g;j=h;xs(i|0,j|0,4095)|0;return}function ve(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+80|0;f=e|0;g=f;h=a+1467904|0;j=Ig(b,f,d,c[h>>2]|0)|0;do{if((j|0)==0){Jg(f,c[h>>2]|0);b=c[a+1469732>>2]|0;if((c[a+1469728>>2]|0)==(b|0)|d^1){break}k=c[b-4>>2]|0;b=k+79e3|0;l=c[b>>2]|0;if((l|0)==(c[k+79004>>2]|0)){We(k+78996|0,f);break}if((l|0)==0){m=0}else{xs(l|0,g|0,80)|0;m=c[b>>2]|0}c[b>>2]=m+80}else{b=a+80|0;l=c[b>>2]|0;if((l|0)==20){c[a+76>>2]=1001;break}else{c[b>>2]=l+1;c[a+(l<<2)>>2]=j;break}}}while(0);i=e;return j|0}function we(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;a:do{if(d){e=a+164|0;f=c[e>>2]|0;do{if((f|0)>0){g=0;while(1){h=g+1|0;if((c[a+84+(g<<2)>>2]|0)==(b|0)){i=10;break}if((h|0)<(f|0)){g=h}else{i=5;break}}if((i|0)==5){if((f|0)<20){break}else{break a}}else if((i|0)==10){return}}}while(0);c[e>>2]=f+1;c[a+84+(f<<2)>>2]=b}}while(0);i=a+80|0;d=c[i>>2]|0;if((d|0)==20){c[a+76>>2]=1001;return}else{c[i>>2]=d+1;c[a+(d<<2)>>2]=b;return}}function xe(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=i;i=i+40|0;h=g|0;j=g+8|0;k=g+16|0;l=g+24|0;m=g+32|0;n=gs(1500)|0;o=n;p=n+776|0;c[p>>2]=0;q=n+780|0;c[q>>2]=0;c[n+784>>2]=0;r=n+1488|0;c[r>>2]=0;s=n+1492|0;c[s>>2]=0;c[n+1496>>2]=0;t=Mg(o,d,b,j)|0;c[k>>2]=t;if((a[j]|0)==0){j=c[b+1468736>>2]|0;if((j|0)!=0){a[j+78864|0]=2}ef(b+328|0,e);if((n|0)==0){u=t;i=g;return u|0}j=c[r>>2]|0;if((j|0)!=0){v=c[s>>2]|0;if((v|0)!=(j|0)){c[s>>2]=v+(~((v-4+(-j|0)|0)>>>2)<<2)}is(j)}j=c[p>>2]|0;if((j|0)!=0){v=c[q>>2]|0;if((v|0)!=(j|0)){c[q>>2]=v+(~((v-4+(-j|0)|0)>>>2)<<2)}is(j)}is(n);u=t;i=g;return u|0}t=c[b+184>>2]|0;if((t|0)>-1){Ng(o,b,t)}t=e+16|0;j=ye(b,b,o,k,c[t>>2]|0,c[t+4>>2]|0,f,c[e+24>>2]|0)|0;f=b+1468736|0;t=c[f>>2]|0;if(!j){a[t+78864|0]=2;ef(b+328|0,e);if((n|0)!=0){j=c[r>>2]|0;if((j|0)!=0){r=c[s>>2]|0;if((r|0)!=(j|0)){c[s>>2]=r+(~((r-4+(-j|0)|0)>>>2)<<2)}is(j)}j=c[p>>2]|0;if((j|0)!=0){r=c[q>>2]|0;if((r|0)!=(j|0)){c[q>>2]=r+(~((r-4+(-j|0)|0)>>>2)<<2)}is(j)}is(n)}u=c[k>>2]|0;i=g;return u|0}c[h>>2]=o;k=t+44|0;j=t+48|0;r=c[j>>2]|0;c[n>>2]=r-(c[k>>2]|0)>>2;if((r|0)==(c[t+52>>2]|0)){Ze(k,h)}else{if((r|0)==0){w=0}else{c[r>>2]=o;w=c[j>>2]|0}c[j>>2]=w+4}id(d,1);jd(d);w=(c[d>>2]|0)-(c[e+28>>2]|0)|0;j=n+768|0;if((c[j>>2]|0)>0){r=0;h=c[p>>2]|0;do{k=$e(e,c[h+(r<<2)>>2]|0,w)|0;h=c[p>>2]|0;t=h+(r<<2)|0;c[t>>2]=(c[t>>2]|0)-k;r=r+1|0;}while((r|0)<(c[j>>2]|0))}do{if((a[n+4|0]|0)==0){x=b+1469732|0}else{j=gs(79040)|0;Kf(j+8|0);r=j;ys(j+78984|0,0,56)|0;c[l>>2]=r;c[j>>2]=c[f>>2];j=b+1469732|0;h=c[j>>2]|0;if((h|0)==(c[b+1469736>>2]|0)){Ve(b+1469728|0,l);x=j;break}if((h|0)==0){y=0}else{c[h>>2]=r;y=c[j>>2]|0}c[j>>2]=y+4;x=j}}while(0);y=c[x>>2]|0;do{if((c[b+1469728>>2]|0)!=(y|0)){x=gs(56)|0;l=x;c[x+32>>2]=0;c[x+44>>2]=0;c[x+48>>2]=b;c[x+40>>2]=0;c[m>>2]=l;c[x>>2]=e;c[x+4>>2]=o;f=x+8|0;n=d;c[f>>2]=c[n>>2];c[f+4>>2]=c[n+4>>2];c[f+8>>2]=c[n+8>>2];c[f+12>>2]=c[n+12>>2];c[f+16>>2]=c[n+16>>2];c[f+20>>2]=c[n+20>>2];a[x+36|0]=a[b+1469740|0]|0;x=c[y-4>>2]|0;n=x+78988|0;f=c[n>>2]|0;if((f|0)==(c[x+78992>>2]|0)){Ue(x+78984|0,m);break}if((f|0)==0){z=0}else{c[f>>2]=l;z=c[n>>2]|0}c[n>>2]=z+4}}while(0);ze(b)|0;u=0;i=g;return u|0}function ye(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;l=i;c[f>>2]=0;a[b+1469740|0]=0;m=c[e+8>>2]|0;n=d+1188092+(m*4372|0)|0;if((a[n|0]|0)==0){qh(1,656,(o=i,i=i+8|0,c[o>>2]=m,o)|0);i=o;bc(8480,10608,1802,12848);return 0}o=d+1467908|0;c[o>>2]=n;n=a[d+1188092+(m*4372|0)+2|0]|0;m=d+1467904|0;c[m>>2]=d+1107516+(n*5036|0);p=d+1467900|0;c[p>>2]=d+380+((a[d+1107516+(n*5036|0)+1|0]|0)*69196|0);Le(b);n=e+4|0;if((a[n]|0)!=0){c[d+1468716>>2]=c[e+28>>2];q=c[m>>2]|0;if((a[q+4671|0]|0)==0){r=1}else{r=(a[d+189|0]|0)!=0}s=Bf(d+1468660|0,q,b,g,h,k,r)|0;if((s|0)==-1){c[f>>2]=9;t=0;i=l;return t|0}f=c[(c[d+1468668>>2]|0)+(s<<2)>>2]|0;s=f+78868|0;r=j;c[s>>2]=c[r>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];r=d+1468736|0;c[r>>2]=f;xs(f+104|0,c[p>>2]|0,69196)|0;p=f+69300|0;s=c[m>>2]|0;xs(p|0,s|0,4692)|0;if((p|0)!=(s|0)){Ye(f+73992|0,c[s+4692>>2]|0,c[s+4696>>2]|0)}xs(f+74004|0,s+4704|0,332)|0;s=f+74336|0;p=c[o>>2]|0;xs(s|0,p|0,216)|0;if((s|0)!=(p|0)){Se(f+74552|0,c[p+216>>2]|0,c[p+220>>2]|0);Se(f+74564|0,c[p+228>>2]|0,c[p+232>>2]|0);Se(f+74576|0,c[p+240>>2]|0,c[p+244>>2]|0);Se(f+74588|0,c[p+252>>2]|0,c[p+256>>2]|0);Se(f+74600|0,c[p+264>>2]|0,c[p+268>>2]|0)}xs(f+74612|0,p+276|0,4095)|0;c[f+78708>>2]=d;Xf(f);p=d+1469724|0;a:do{if(mg(a[p]|0)|0){do{if(!(jg(a[p]|0)|0)){if(kg(a[p]|0)|0){break}if((a[d+1468720|0]|0)!=0){break}if((a[d+1468723|0]|0)!=0){break}a[d+1468721|0]=0;a[d+1468722|0]=0;break a}}while(0);a[d+1468721|0]=1;a[d+1468723|0]=0}}while(0);do{if(lg(a[p]|0)|0){if((a[d+1468721|0]|0)==0){u=22;break}a[(c[r>>2]|0)+96|0]=0}else{u=22}}while(0);if((u|0)==22){a[(c[r>>2]|0)+96|0]=(a[e+24|0]|0)!=0|0}He(b,d,e);u=f+92|0;if((a[n]|0)!=0){c[u>>2]=1;Je(b,d,e)}c[u>>2]=1;ph(c[(c[r>>2]|0)+88>>2]|0);a[b+1468720|0]=0}do{if((c[e+20>>2]|0)>>>0<2>>>0){if(Ke(0,d,e)|0){break}else{t=0}i=l;return t|0}}while(0);tf(d+1468660|0);if((a[e+12|0]|0)==0){c[e+792>>2]=c[e+16>>2];v=d+1468740|0}else{b=d+1468740|0;c[e+792>>2]=c[(c[b>>2]|0)+792>>2];v=b}c[v>>2]=e;t=1;i=l;return t|0}function ze(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;d=b+1469728|0;e=c[d>>2]|0;f=b+1469732|0;if((e|0)==(c[f>>2]|0)){g=0;return g|0}h=c[e>>2]|0;e=h+78984|0;i=c[e>>2]|0;j=h+78988|0;k=c[j>>2]|0;do{if((i|0)!=(k|0)){l=c[i>>2]|0;if(k-i>>2>>>0>1>>>0){m=1;n=i;while(1){c[n+(m-1<<2)>>2]=c[n+(m<<2)>>2];o=m+1|0;p=c[j>>2]|0;q=c[e>>2]|0;if(o>>>0<p-q>>2>>>0){m=o;n=q}else{r=p;break}}}else{r=k}n=r-4|0;c[j>>2]=r+(~((n+(-n|0)|0)>>>2)<<2);if((a[l+36|0]|0)!=0){zf(b+1468660|0)|0}n=Ae(b,h,l)|0;if((n|0)!=0){g=n;return g|0}if((l|0)==0){break}ef((c[l+48>>2]|0)+328|0,c[l>>2]|0);n=c[l+44>>2]|0;if((n|0)!=0){js(n)}is(l)}}while(0);h=c[f>>2]|0;r=c[d>>2]|0;if(h-r>>2>>>0>1>>>0){j=c[r>>2]|0;if((c[j+78984>>2]|0)==(c[j+78988>>2]|0)){s=j}else{t=16}}else{t=16}do{if((t|0)==16){if((h|0)==(r|0)){g=0;return g|0}j=c[r>>2]|0;if((c[j+78984>>2]|0)!=(c[j+78988>>2]|0)){g=0;return g|0}if(((c[b+336>>2]|0)!=0|0)!=(-(c[b+360>>2]|0)|0)){g=0;return g|0}if((a[b+328|0]|0)!=0){s=j;break}if((a[b+329|0]|0)==0){g=0}else{s=j;break}return g|0}}while(0);r=s|0;h=c[r>>2]|0;j=h+78716|0;if((c[j>>2]|0)>0){k=h+78880|0;e=0;do{Uh((c[k>>2]|0)+(e*76|0)|0,1);e=e+1|0;}while((e|0)<(c[j>>2]|0));u=c[r>>2]|0}else{u=h}h=u+78708|0;j=c[h>>2]|0;e=(a[j+188|0]|0)==0;do{if((c[(c[(c[b+1468736>>2]|0)+78708>>2]|0)+1468404>>2]|0)==0){if(e){je(u);v=c[h>>2]|0}else{v=j}if((a[v+189|0]|0)!=0){break}Ag(u)}else{if(e){ie(s);w=3;x=c[h>>2]|0}else{w=1;x=j}if((a[x+189|0]|0)==0){Cg(s,w)|0}Wf(u)}}while(0);u=s+79e3|0;w=s+78996|0;x=c[w>>2]|0;a:do{if((c[u>>2]|0)==(x|0)){t=39}else{j=0;h=x;while(1){y=Kg(h+(j*80|0)|0,c[r>>2]|0)|0;e=j+1|0;if((y|0)!=0){break}v=c[w>>2]|0;if(e>>>0<(((c[u>>2]|0)-v|0)/80|0)>>>0){j=e;h=v}else{t=39;break a}}Be(b,s)|0;z=y;t=40}}while(0);if((t|0)==39){Be(b,s)|0;if((s|0)==0){A=0}else{z=0;t=40}}if((t|0)==40){oe(s);is(s);A=z}z=c[f>>2]|0;s=c[d>>2]|0;if(z-s>>2>>>0>1>>>0){t=1;b=s;while(1){c[b+(t-1<<2)>>2]=c[b+(t<<2)>>2];s=t+1|0;y=c[f>>2]|0;u=c[d>>2]|0;if(s>>>0<y-u>>2>>>0){t=s;b=u}else{B=y;break}}}else{B=z}z=B-4|0;c[f>>2]=B+(~((z+(-z|0)|0)>>>2)<<2);g=A;return g|0}function Ae(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=c[e+4>>2]|0;g=f+1492|0;h=f+1488|0;f=c[h>>2]|0;if((c[g>>2]|0)!=(f|0)){i=b+1468660|0;j=b+1468668|0;k=0;l=f;do{f=xf(i,c[l+(k<<2)>>2]|0)|0;if((f|0)>-1){c[(c[(c[j>>2]|0)+(f<<2)>>2]|0)+92>>2]=0}k=k+1|0;l=c[h>>2]|0;}while(k>>>0<(c[g>>2]|0)-l>>2>>>0)}l=c[d>>2]|0;g=c[l+78708>>2]|0;a:do{if((c[g+1468404>>2]|0)>0){k=a[l+74369|0]|0;h=k<<24>>24!=0;j=(a[l+74370|0]|0)!=0;if(!(k<<24>>24==0)){m=h;n=j;break}if((a[l+74370|0]|0)!=0){m=h;n=j;break}k=g+164|0;i=c[k>>2]|0;if((i|0)>0){f=0;while(1){o=f+1|0;if((c[g+84+(f<<2)>>2]|0)==1e3){m=h;n=j;break a}if((o|0)<(i|0)){f=o}else{break}}if((i|0)<20){p=13}}else{p=13}if((p|0)==13){c[k>>2]=i+1;c[g+84+(i<<2)>>2]=1e3}f=g+80|0;o=c[f>>2]|0;if((o|0)==20){c[g+76>>2]=1001;m=h;n=j;break}else{c[f>>2]=o+1;c[g+(o<<2)>>2]=1e3;m=h;n=j;break}}else{m=0;n=0}}while(0);if(!(m|n)){q=Ce(b,d,e)|0;return q|0}if(m){De(b,d,e)|0;q=0;return q|0}if(!n){bc(8480,10608,848,12880);return 0}Ee(b,d,e)|0;q=0;return q|0}function Be(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e|0;g=c[d>>2]|0;if((g|0)==0){i=e;return 0}do{if((a[g+96|0]|0)!=0){if((a[g+78864|0]|0)!=0){if((a[b+170|0]|0)!=0){break}}c[f>>2]=g;d=b+1468684|0;h=c[d>>2]|0;if((h|0)==(c[b+1468688>>2]|0)){Xe(b+1468680|0,f);break}if((h|0)==0){j=0}else{c[h>>2]=g;j=c[d>>2]|0}c[d>>2]=j+4}}while(0);j=b+1468660|0;if(((c[b+1468684>>2]|0)-(c[b+1468680>>2]|0)>>2|0)>(c[g+560+(((c[g+112>>2]|0)-1|0)*12|0)+4>>2]|0)){yf(j)}Df(j);i=e;return 0}function Ce(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+14656|0;g=f|0;h=e+4|0;j=c[h>>2]|0;k=j+1492|0;l=j+1488|0;m=c[l>>2]|0;if((c[k>>2]|0)==(m|0)){n=j}else{j=b+1468660|0;o=b+1468668|0;p=0;q=m;do{m=xf(j,c[q+(p<<2)>>2]|0)|0;if((m|0)>-1){c[(c[(c[o>>2]|0)+(m<<2)>>2]|0)+92>>2]=0}p=p+1|0;q=c[l>>2]|0;}while(p>>>0<(c[k>>2]|0)-q>>2>>>0);n=c[h>>2]|0}c[g+14412>>2]=0;c[g+14416>>2]=0;q=g+48|0;c[g+2112>>2]=q;k=q;ys(k|0,0,2048)|0;c[g+14636>>2]=n;q=c[d>>2]|0;c[g+14632>>2]=q;c[g+14628>>2]=b;c[g+14640>>2]=d;p=n+16|0;n=q+74552|0;c[g+4>>2]=c[(c[n>>2]|0)+(c[p>>2]<<2)>>2];c[g+14644>>2]=0;ys(k|0,0,2064)|0;c[g+14424>>2]=-1;c[g+14428>>2]=-1;k=c[p>>2]|0;if((k|0)>0){p=c[(c[q+74564>>2]|0)+((c[(c[n>>2]|0)+(k<<2)>>2]|0)-1<<2)>>2]|0;k=c[q+74236>>2]|0;n=c[q+74220>>2]|0;l=(((p|0)%(k|0)|0)+1<<n)-1|0;o=(((p|0)/(k|0)|0)+1<<n)-1|0;n=(c[q+69752>>2]|0)-1|0;k=(c[q+69756>>2]|0)-1|0;p=c[q+78740>>2]|0;j=(ga(((k|0)<(o|0)?k:o)>>p,c[q+78744>>2]|0)|0)+(((n|0)<(l|0)?n:l)>>p)|0;c[g+14420>>2]=a[(c[q+78732>>2]|0)+(j*3|0)+2|0]|0}md(g+14448|0,c[e+8>>2]|0,c[e+12>>2]|0);if((a[b+1188125|0]|0)==0){r=ch(g)|0;s=14656;t=0;i=f;return r|0}if((a[(c[h>>2]|0)+4|0]|0)==0){r=ch(g)|0;s=14656;t=0;i=f;return r|0}h=d+79028|0;e=((c[(c[b+1468736>>2]|0)+74244>>2]|0)*154|0)-154|0;b=d+79032|0;d=c[b>>2]|0;j=c[h>>2]|0;q=d-j|0;if(q>>>0<e>>>0){Te(h,e-q|0);r=ch(g)|0;s=14656;t=0;i=f;return r|0}if(!(q>>>0>e>>>0)){r=ch(g)|0;s=14656;t=0;i=f;return r|0}q=j+e|0;if((d|0)==(q|0)){r=ch(g)|0;s=14656;t=0;i=f;return r|0}c[b>>2]=q;r=ch(g)|0;s=14656;t=0;i=f;return r|0}function De(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0;f=i;i=i+8|0;g=f|0;h=c[d>>2]|0;j=c[e+4>>2]|0;k=c[j+768>>2]|0;l=k+1|0;m=h+74236|0;n=c[m>>2]|0;if((c[h+78892>>2]|0)!=(-(c[h+78888>>2]|0)|0)){bc(5960,10608,866,12936);return 0}Rf(h,l);do{if((a[j+4|0]|0)!=0){o=d+79028|0;p=((c[h+74244>>2]|0)*154|0)-154|0;q=d+79032|0;r=c[q>>2]|0;s=c[o>>2]|0;t=r-s|0;if(t>>>0<p>>>0){Te(o,p-t|0);break}if(!(t>>>0>p>>>0)){break}t=s+p|0;if((r|0)==(t|0)){break}c[q>>2]=t}}while(0);t=e+44|0;if((c[t>>2]|0)!=0){bc(3168,10608,154,13056);return 0}q=Pa(l|0,14656)|0;r=hs(K?-1:q)|0;if((l|0)!=0){q=r+(l*14656|0)|0;p=r;do{c[p+14412>>2]=0;c[p+14416>>2]=0;c[p+14628>>2]=0;c[p+14632>>2]=0;c[p+14636>>2]=0;s=p+48|0;o=s&15;if((o|0)==0){u=s|0;c[p+2112>>2]=u;v=u}else{u=s+(16-o)|0;c[p+2112>>2]=u;v=u}ys(v|0,0,2048)|0;p=p+14656|0;}while((p|0)!=(q|0))}c[t>>2]=r;r=j+16|0;q=c[r>>2]|0;if((k|0)>-1){p=h+78708|0;v=h+74552|0;u=e+12|0;o=e+8|0;e=b+1467912|0;b=j+776|0;s=(q|0)/(n|0)|0;w=0;x=q;while(1){if((w|0)>0){q=s+1|0;y=ga(q,n)|0;z=q}else{y=x;z=s}q=c[t>>2]|0;c[q+(w*14656|0)+14636>>2]=j;c[q+(w*14656|0)+14628>>2]=c[p>>2];c[q+(w*14656|0)+14632>>2]=h;A=q+(w*14656|0)+14640|0;c[A>>2]=d;c[q+(w*14656|0)+4>>2]=c[(c[v>>2]|0)+(y<<2)>>2];ys(q+(w*14656|0)+48|0,0,2064)|0;c[q+(w*14656|0)+14424>>2]=-1;c[q+(w*14656|0)+14428>>2]=-1;B=c[r>>2]|0;if((B|0)>0){C=c[(c[h+74564>>2]|0)+((c[(c[v>>2]|0)+(B<<2)>>2]|0)-1<<2)>>2]|0;B=c[m>>2]|0;D=c[h+74220>>2]|0;E=(((C|0)%(B|0)|0)+1<<D)-1|0;F=(((C|0)/(B|0)|0)+1<<D)-1|0;D=(c[h+69752>>2]|0)-1|0;B=(c[h+69756>>2]|0)-1|0;C=c[h+78740>>2]|0;G=(ga(((B|0)<(F|0)?B:F)>>C,c[h+78744>>2]|0)|0)+(((D|0)<(E|0)?D:E)>>C)|0;c[q+(w*14656|0)+14420>>2]=a[(c[h+78732>>2]|0)+(G*3|0)+2|0]|0}G=(w|0)==0;if(G){H=0}else{H=c[(c[b>>2]|0)+(w-1<<2)>>2]|0}if((w|0)==(k|0)){I=u}else{I=(c[b>>2]|0)+(w<<2)|0}md(q+(w*14656|0)+14448|0,(c[o>>2]|0)+H|0,(c[I>>2]|0)-H|0);C=gs(16)|0;c[C+4>>2]=0;c[C>>2]=17152;a[C+8|0]=G&1;c[C+12>>2]=q+(w*14656|0);G=C;c[q+(w*14656|0)+14644>>2]=G;Zh(e,G);q=c[A>>2]|0;c[g>>2]=G;A=q+79020|0;C=c[A>>2]|0;if((C|0)==(c[q+79024>>2]|0)){me(q+79016|0,g)}else{if((C|0)==0){J=0}else{c[C>>2]=G;J=c[A>>2]|0}c[A>>2]=J+4}A=w+1|0;if((A|0)<(l|0)){s=z;w=A;x=y}else{break}}}Wf(h);h=d+79020|0;y=c[h>>2]|0;x=d+79016|0;d=c[x>>2]|0;if((y|0)==(d|0)){i=f;return 0}else{L=0;M=d;N=y}while(1){y=c[M+(L<<2)>>2]|0;if((y|0)==0){O=N;P=M}else{Ac[c[(c[y>>2]|0)+4>>2]&511](y);O=c[h>>2]|0;P=c[x>>2]|0}y=L+1|0;Q=P;if(y>>>0<O-Q>>2>>>0){L=y;M=P;N=O}else{break}}if((O|0)==(P|0)){i=f;return 0}c[h>>2]=O+(~((O-4+(-Q|0)|0)>>>2)<<2);i=f;return 0}function Ee(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;f=i;i=i+8|0;g=f|0;h=c[d>>2]|0;j=c[e+4>>2]|0;k=c[j+768>>2]|0;l=k+1|0;m=h+74236|0;n=c[m>>2]|0;if((c[h+78892>>2]|0)!=(-(c[h+78888>>2]|0)|0)){bc(5960,10608,963,12912);return 0}Rf(h,l);o=e+44|0;if((c[o>>2]|0)!=0){bc(3168,10608,154,13056);return 0}p=Pa(l|0,14656)|0;q=hs(K?-1:p)|0;if((l|0)!=0){p=q+(l*14656|0)|0;r=q;do{c[r+14412>>2]=0;c[r+14416>>2]=0;c[r+14628>>2]=0;c[r+14632>>2]=0;c[r+14636>>2]=0;s=r+48|0;t=s&15;if((t|0)==0){u=s|0;c[r+2112>>2]=u;v=u}else{u=s+(16-t)|0;c[r+2112>>2]=u;v=u}ys(v|0,0,2048)|0;r=r+14656|0;}while((r|0)!=(p|0))}c[o>>2]=q;q=j+16|0;p=c[q>>2]|0;if((k|0)>-1){r=h+74372|0;v=h+78708|0;u=h+74552|0;t=e+12|0;s=e+8|0;e=b+1467912|0;b=j+776|0;w=0;x=c[(c[h+74588>>2]|0)+(p<<2)>>2]|0;y=p;while(1){if((w|0)>0){p=x+1|0;z=c[r>>2]|0;A=(ga(c[h+74508+(((p|0)/(z|0)|0)<<2)>>2]|0,n)|0)+(c[h+74464+(((p|0)%(z|0)|0)<<2)>>2]|0)|0;B=p}else{A=y;B=x}p=c[o>>2]|0;c[p+(w*14656|0)+14636>>2]=j;c[p+(w*14656|0)+14628>>2]=c[v>>2];c[p+(w*14656|0)+14632>>2]=h;z=p+(w*14656|0)+14640|0;c[z>>2]=d;c[p+(w*14656|0)+4>>2]=c[(c[u>>2]|0)+(A<<2)>>2];ys(p+(w*14656|0)+48|0,0,2064)|0;c[p+(w*14656|0)+14424>>2]=-1;c[p+(w*14656|0)+14428>>2]=-1;C=c[q>>2]|0;if((C|0)>0){D=c[(c[h+74564>>2]|0)+((c[(c[u>>2]|0)+(C<<2)>>2]|0)-1<<2)>>2]|0;C=c[m>>2]|0;E=c[h+74220>>2]|0;F=(((D|0)%(C|0)|0)+1<<E)-1|0;G=(((D|0)/(C|0)|0)+1<<E)-1|0;E=(c[h+69752>>2]|0)-1|0;C=(c[h+69756>>2]|0)-1|0;D=c[h+78740>>2]|0;H=(ga(((C|0)<(G|0)?C:G)>>D,c[h+78744>>2]|0)|0)+(((E|0)<(F|0)?E:F)>>D)|0;c[p+(w*14656|0)+14420>>2]=a[(c[h+78732>>2]|0)+(H*3|0)+2|0]|0}H=(w|0)==0;if(H){I=0}else{I=c[(c[b>>2]|0)+(w-1<<2)>>2]|0}if((w|0)==(k|0)){J=t}else{J=(c[b>>2]|0)+(w<<2)|0}md(p+(w*14656|0)+14448|0,(c[s>>2]|0)+I|0,(c[J>>2]|0)-I|0);D=gs(16)|0;c[D+4>>2]=0;c[D>>2]=17120;a[D+8|0]=H&1;c[D+12>>2]=p+(w*14656|0);H=D;c[p+(w*14656|0)+14644>>2]=H;Zh(e,H);p=c[z>>2]|0;c[g>>2]=H;z=p+79020|0;D=c[z>>2]|0;if((D|0)==(c[p+79024>>2]|0)){me(p+79016|0,g)}else{if((D|0)==0){L=0}else{c[D>>2]=H;L=c[z>>2]|0}c[z>>2]=L+4}z=w+1|0;if((z|0)<(l|0)){w=z;x=B;y=A}else{break}}}Wf(h);h=d+79020|0;A=c[h>>2]|0;y=d+79016|0;d=c[y>>2]|0;if((A|0)==(d|0)){i=f;return 0}else{M=0;N=d;O=A}while(1){A=c[N+(M<<2)>>2]|0;if((A|0)==0){P=O;Q=N}else{Ac[c[(c[A>>2]|0)+4>>2]&511](A);P=c[h>>2]|0;Q=c[y>>2]|0}A=M+1|0;R=Q;if(A>>>0<P-R>>2>>>0){M=A;N=Q;O=P}else{break}}if((P|0)==(Q|0)){i=f;return 0}c[h>>2]=P+(~((P-4+(-R|0)|0)>>>2)<<2);i=f;return 0}function Fe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+78656|0;f=e|0;g=e+5040|0;h=e+74240|0;j=e+78616|0;k=e+78640|0;gd(j,c[d+28>>2]|0,c[d+32>>2]|0);l=k|0;c[l>>2]=0;c[k+4>>2]=0;m=k+8|0;c[m>>2]=0;ig(j,k);n=c[l>>2]|0;a[b+1469724|0]=n;if((n|0)==19){a[b+1469725|0]=1;o=4}else{a[b+1469725|0]=(n|0)==20|0;if((n|0)>15){o=4}else{p=0}}if((o|0)==4){p=(n|0)<24|0}a[b+1469726|0]=p;if((c[m>>2]|0)>(c[b+1468424>>2]|0)){ef(b+328|0,d);q=0;i=e;return q|0}if((n|0)<32){q=xe(b,j,d,k)|0;i=e;return q|0}switch(n|0){case 32:{k=g;ys(k|0,0,69196)|0;m=sh(b,j,g)|0;if((m|0)==0){p=c[b+176>>2]|0;if((p|0)>-1){uh(g,p)}xs(b+380+((c[g>>2]|0)*69196|0)|0,k|0,69196)|0;r=0}else{r=m}ef(b+328|0,d);q=r;i=e;return q|0};case 33:{r=f|0;hh(f);m=jh(f,b,j)|0;if((m|0)==0){k=c[b+172>>2]|0;if((k|0)>-1){mh(f,k)}k=c[f+440>>2]|0;g=b+1107516+(k*5036|0)|0;xs(g|0,r|0,4692)|0;if((g|0)!=(f|0)){Ye(b+1107516+(k*5036|0)+4692|0,c[f+4692>>2]|0,c[f+4696>>2]|0)}xs(b+1107516+(k*5036|0)+4704|0,f+4704|0,332)|0;s=0}else{s=m}ih(f);ef(b+328|0,d);q=s;i=e;return q|0};case 34:{pg(h);s=rg(h,j,b)|0;f=c[b+180>>2]|0;if((f|0)>-1){sg(h,f)}if(s){ue(b,h)}qg(h);ef(b+328|0,d);q=s?0:1006;i=e;return q|0};case 39:case 40:{s=ve(b,j,(n|0)==40)|0;ef(b+328|0,d);q=s;i=e;return q|0};case 36:{a[b+1468723|0]=1;ef(b+328|0,d);q=0;i=e;return q|0};default:{ef(b+328|0,d);q=0;i=e;return q|0}}return 0}function Ge(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b+328|0;f=b+360|0;g=(c[f>>2]|0)==0;h=(a[e|0]|0)==0;do{if(g){if(h){i=7;break}if((c[b+1469728>>2]|0)!=(c[b+1469732>>2]|0)){break}zf(b+1468660|0)|0;if((d|0)==0){j=0;return j|0}c[d>>2]=c[b+1468712>>2];j=0;return j|0}else{if(h){i=7}}}while(0);do{if((i|0)==7){if((a[b+329|0]|0)!=0|g^1){break}if((d|0)==0){j=13;return j|0}c[d>>2]=1;j=13;return j|0}}while(0);if(!(uf(b+1468660|0,0)|0)){if((d|0)==0){j=9;return j|0}c[d>>2]=1;j=9;return j|0}do{if(((c[b+336>>2]|0)!=0|0)==(-(c[f>>2]|0)|0)){do{if((a[b+329|0]|0)!=0){if((c[b+1469728>>2]|0)!=(c[b+1469732>>2]|0)){break}if((d|0)==0){j=13;return j|0}c[d>>2]=1;j=13;return j|0}}while(0);k=ze(b)|0}else{g=df(e)|0;if((g|0)==0){bc(3784,10608,1149,12760);return 0}else{k=Fe(b,g)|0;break}}}while(0);if((d|0)==0){j=k;return j|0}c[d>>2]=(k|0)==0;j=k;return j|0}function He(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=d+1469724|0;do{if(mg(a[f]|0)|0){if((a[d+1468721|0]|0)==0){g=4;break}c[d+1468724>>2]=0;a[b+1469740|0]=1;h=0;i=e+28|0}else{g=4}}while(0);a:do{if((g|0)==4){b=c[(c[d+1467904>>2]|0)+4912>>2]|0;j=e+28|0;k=c[j>>2]|0;l=c[d+1468728>>2]|0;do{if((k|0)<(l|0)){if((l-k|0)<((b|0)/2|0|0)){break}m=(c[d+1468732>>2]|0)+b|0;c[d+1468724>>2]=m;h=m;i=j;break a}}while(0);do{if((k|0)>(l|0)){if((k-l|0)<=((b|0)/2|0|0)){break}m=(c[d+1468732>>2]|0)-b|0;c[d+1468724>>2]=m;h=m;i=j;break a}}while(0);b=c[d+1468732>>2]|0;c[d+1468724>>2]=b;h=b;i=j}}while(0);e=c[d+1468736>>2]|0;c[e+88>>2]=(c[i>>2]|0)+h;c[e+84>>2]=c[i>>2];if((c[e+78876>>2]|0)!=0){return}if(!(og(a[f]|0)|0)){return}if(lg(a[f]|0)|0){return}if(ng(a[f]|0)|0){return}c[d+1468728>>2]=c[i>>2];c[d+1468732>>2]=c[d+1468724>>2];return}function Ie(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;i=e+1468660|0;if(!(uf(i,1)|0)){bc(2344,10608,1270,12768);return 0}j=Bf(i,c[e+1467904>>2]|0,b,0,0,0,0)|0;if(!((j|0)>-1)){bc(1504,10608,1273,12768);return 0}b=c[(c[e+1468668>>2]|0)+(j<<2)>>2]|0;e=1<<(c[f+4884>>2]|0)-1;Of(b,1<<(c[f+4876>>2]|0)-1,e,e);e=b+78736|0;if((c[e>>2]|0)>0){i=b+78732|0;k=0;do{l=(c[i>>2]|0)+(k*3|0)|0;C=(d[l]|d[l+1|0]<<8)<<16>>16&-769;a[l]=C;C=C>>8;a[l+1|0]=C;k=k+1|0;}while((k|0)<(c[e>>2]|0))}c[b+88>>2]=g;c[b+84>>2]=(c[f+4912>>2]|0)-1&g;a[b+96|0]=0;c[b+92>>2]=h?2:1;a[b+78864|0]=1;return j|0}function Je(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;h=i;i=i+40|0;j=h|0;k=h+16|0;l=h+32|0;m=j|0;c[m>>2]=0;n=j+4|0;c[n>>2]=0;o=j+8|0;c[o>>2]=0;p=f+1468736|0;q=c[c[p>>2]>>2]|0;r=f+1469724|0;a:do{if(mg(a[r]|0)|0){if((a[f+1468721|0]|0)==0){break}s=c[p>>2]|0;t=c[s+88>>2]|0;u=e+1468672|0;v=c[u>>2]|0;w=e+1468668|0;x=c[w>>2]|0;if((v-x|0)<=0){break}y=f+1468668|0;z=0;A=v;v=x;x=s;b:while(1){s=c[(c[y>>2]|0)+(z<<2)>>2]|0;do{if((c[s+92>>2]|0)==0){B=A;C=v;D=x}else{if((c[s+88>>2]|0)>=(t|0)){B=A;C=v;D=x;break}E=s+100|0;if(!((c[E>>2]|0)>>>0>(c[x>>2]|0)>>>0)){B=A;C=v;D=x;break}F=c[s>>2]|0;G=c[n>>2]|0;do{if((G|0)==(c[o>>2]|0)){H=c[m>>2]|0;I=G-H|0;J=I>>2;K=J+1|0;if(K>>>0>1073741823>>>0){break b}if(J>>>0<536870911>>>0){L=I>>1;M=L>>>0<K>>>0?K:L;if((M|0)==0){N=0;O=0}else{P=M;Q=18}}else{P=1073741823;Q=18}if((Q|0)==18){Q=0;N=gs(P<<2)|0;O=P}M=N+(J<<2)|0;if((M|0)!=0){c[M>>2]=F}M=H;xs(N|0,M|0,I)|0;c[m>>2]=N;c[n>>2]=N+(K<<2);c[o>>2]=N+(O<<2);if((H|0)==0){R=x;S=A;T=v;break}is(M);R=c[p>>2]|0;S=c[u>>2]|0;T=c[w>>2]|0}else{if((G|0)!=0){c[G>>2]=F}c[n>>2]=G+4;R=x;S=A;T=v}}while(0);c[E>>2]=c[R>>2];B=S;C=T;D=R}}while(0);s=z+1|0;if((s|0)<(B-C>>2|0)){z=s;A=B;v=C;x=D}else{break a}}gp(0)}}while(0);if(jg(a[r]|0)|0){ys(f+1469064|0,0,20)|0}else{r=g+812|0;if((a[r]|0)==0){U=0;V=0}else{D=0;C=0;B=0;while(1){R=(b[g+816+(B<<1)>>1]|0)+(c[(c[p>>2]|0)+88>>2]|0)|0;if((a[g+880+B|0]|0)==0){c[f+1469212+(D<<2)>>2]=R;W=C;X=D+1|0}else{c[f+1469084+(C<<2)>>2]=R;W=C+1|0;X=D}R=B+1|0;if((R|0)<(d[r]|0)){D=X;C=W;B=R}else{U=X;V=W;break}}}c[f+1469064>>2]=V;V=g+813|0;if((a[V]|0)==0){Y=U;Z=0}else{W=U;U=0;X=0;while(1){B=(b[g+848+(X<<1)>>1]|0)+(c[(c[p>>2]|0)+88>>2]|0)|0;if((a[g+896+X|0]|0)==0){c[f+1469212+(W<<2)>>2]=B;_=U;$=W+1|0}else{c[f+1469148+(U<<2)>>2]=B;_=U+1|0;$=W}B=X+1|0;if((B|0)<(d[V]|0)){W=$;U=_;X=B}else{Y=$;Z=_;break}}}c[f+1469068>>2]=Z;c[f+1469072>>2]=Y;Y=g+140|0;Z=g+144|0;if(((c[Z>>2]|0)+(c[Y>>2]|0)|0)>0){_=g+28|0;$=f+1467904|0;X=0;U=0;W=0;while(1){V=c[f+1468744+(W<<2)>>2]|0;B=g+244+W|0;if((a[B]|0)==0){aa=V}else{aa=(c[(c[p>>2]|0)+88>>2]|0)+V-(c[_>>2]|0)-(ga(c[(c[$>>2]|0)+4912>>2]|0,c[f+1468872+(W<<2)>>2]|0)|0)|0}if((c[f+1468808+(W<<2)>>2]|0)==0){c[f+1469340+(X<<2)>>2]=aa;c[f+1469e3+(X<<2)>>2]=a[B]|0;ba=U;ca=X+1|0}else{c[f+1469276+(U<<2)>>2]=aa;c[f+1468936+(U<<2)>>2]=a[B]|0;ba=U+1|0;ca=X}B=W+1|0;if((B|0)<((c[Z>>2]|0)+(c[Y>>2]|0)|0)){X=ca;U=ba;W=B}else{da=ca;ea=ba;break}}}else{da=0;ea=0}c[f+1469076>>2]=ea;c[f+1469080>>2]=da}da=e+1468672|0;ea=e+1468668|0;ba=(c[da>>2]|0)-(c[ea>>2]|0)>>2;a[l]=0;Re(k,ba,l);tf(e+1468660|0);l=f+1469076|0;ba=c[l>>2]|0;if((ba|0)>0){ca=f+1468660|0;W=c[k>>2]|0;U=f+1468668|0;X=f+1467904|0;Y=0;while(1){Z=f+1469276+(Y<<2)|0;aa=c[Z>>2]|0;if((c[f+1468936+(Y<<2)>>2]|0)==0){fa=wf(ca,aa,q,1)|0}else{fa=vf(ca,aa,q,1)|0}aa=f+1469596+(Y<<2)|0;c[aa>>2]=fa;if((fa|0)>-1){$=W+(fa>>>5<<2)|0;c[$>>2]=c[$>>2]|1<<(fa&31);ha=fa}else{$=Ie(e,f,c[X>>2]|0,c[Z>>2]|0,1)|0;c[aa>>2]=$;aa=W+($>>>5<<2)|0;c[aa>>2]=c[aa>>2]|1<<($&31);ha=$}if((a[(c[(c[U>>2]|0)+(ha<<2)>>2]|0)+78864|0]|0)!=0){a[(c[p>>2]|0)+78864|0]=4}$=Y+1|0;aa=c[l>>2]|0;if(($|0)<(aa|0)){Y=$}else{ia=aa;break}}}else{ia=ba}ba=f+1469080|0;Y=c[ba>>2]|0;if((Y|0)>0){ha=f+1468660|0;U=c[k>>2]|0;W=f+1467904|0;X=0;do{fa=f+1469340+(X<<2)|0;ca=c[fa>>2]|0;if((c[f+1469e3+(X<<2)>>2]|0)==0){ja=wf(ha,ca,q,1)|0}else{ja=vf(ha,ca,q,1)|0}ca=f+1469660+(X<<2)|0;c[ca>>2]=ja;if((ja|0)>-1){aa=U+(ja>>>5<<2)|0;c[aa>>2]=c[aa>>2]|1<<(ja&31)}else{aa=Ie(e,f,c[W>>2]|0,c[fa>>2]|0,1)|0;c[ca>>2]=aa;ca=U+(aa>>>5<<2)|0;c[ca>>2]=c[ca>>2]|1<<(aa&31)}X=X+1|0;ka=c[ba>>2]|0;}while((X|0)<(ka|0));la=c[l>>2]|0;ma=ka}else{la=ia;ma=Y}if((la|0)>0){Y=c[f+1468668>>2]|0;ia=0;do{c[(c[Y+(c[f+1469596+(ia<<2)>>2]<<2)>>2]|0)+92>>2]=2;ia=ia+1|0;}while((ia|0)<(la|0))}if((ma|0)>0){la=c[f+1468668>>2]|0;ia=0;do{c[(c[la+(c[f+1469660+(ia<<2)>>2]<<2)>>2]|0)+92>>2]=2;ia=ia+1|0;}while((ia|0)<(ma|0))}ma=f+1469064|0;if((c[ma>>2]|0)>0){ia=f+1468660|0;la=c[k>>2]|0;Y=f+1468668|0;ka=f+1467904|0;l=0;do{X=f+1469084+(l<<2)|0;ba=vf(ia,c[X>>2]|0,q,0)|0;U=f+1469404+(l<<2)|0;c[U>>2]=ba;if((ba|0)>-1){W=la+(ba>>>5<<2)|0;c[W>>2]=c[W>>2]|1<<(ba&31);na=ba}else{ba=Ie(e,f,c[ka>>2]|0,c[X>>2]|0,0)|0;c[U>>2]=ba;U=la+(ba>>>5<<2)|0;c[U>>2]=c[U>>2]|1<<(ba&31);na=ba}if((a[(c[(c[Y>>2]|0)+(na<<2)>>2]|0)+78864|0]|0)!=0){a[(c[p>>2]|0)+78864|0]=4}l=l+1|0;}while((l|0)<(c[ma>>2]|0))}ma=f+1469068|0;if((c[ma>>2]|0)>0){l=f+1468660|0;na=c[k>>2]|0;Y=f+1468668|0;la=f+1467904|0;ka=0;do{ia=f+1469148+(ka<<2)|0;ba=vf(l,c[ia>>2]|0,q,0)|0;U=f+1469468+(ka<<2)|0;c[U>>2]=ba;if((ba|0)>-1){X=na+(ba>>>5<<2)|0;c[X>>2]=c[X>>2]|1<<(ba&31);oa=ba}else{ba=Ie(e,f,c[la>>2]|0,c[ia>>2]|0,0)|0;c[U>>2]=ba;U=na+(ba>>>5<<2)|0;c[U>>2]=c[U>>2]|1<<(ba&31);oa=ba}if((a[(c[(c[Y>>2]|0)+(oa<<2)>>2]|0)+78864|0]|0)!=0){a[(c[p>>2]|0)+78864|0]=4}ka=ka+1|0;}while((ka|0)<(c[ma>>2]|0))}ma=f+1469072|0;if((c[ma>>2]|0)>0){ka=f+1468660|0;oa=c[k>>2]|0;Y=0;do{na=vf(ka,c[f+1469212+(Y<<2)>>2]|0,q,0)|0;c[f+1469532+(Y<<2)>>2]=na;if((na|0)>-1){la=oa+(na>>>5<<2)|0;c[la>>2]=c[la>>2]|1<<(na&31)}Y=Y+1|0;}while((Y|0)<(c[ma>>2]|0))}ma=c[da>>2]|0;Y=c[ea>>2]|0;c:do{if((ma-Y|0)>0){oa=c[k>>2]|0;q=f+1468668|0;ka=0;na=ma;la=Y;d:while(1){do{if((c[oa+(ka>>>5<<2)>>2]&1<<(ka&31)|0)==0){e=c[(c[q>>2]|0)+(ka<<2)>>2]|0;l=c[p>>2]|0;if((e|0)==(l|0)){pa=na;qa=la;break}ba=e+100|0;if(!((c[ba>>2]|0)>>>0>(c[l>>2]|0)>>>0)){pa=na;qa=la;break}if((c[e+92>>2]|0)==0){pa=na;qa=la;break}U=c[e>>2]|0;e=c[n>>2]|0;do{if((e|0)==(c[o>>2]|0)){ia=c[m>>2]|0;X=e-ia|0;W=X>>2;ja=W+1|0;if(ja>>>0>1073741823>>>0){break d}if(W>>>0<536870911>>>0){ha=X>>1;aa=ha>>>0<ja>>>0?ja:ha;if((aa|0)==0){ra=0;sa=0}else{ta=aa;Q=132}}else{ta=1073741823;Q=132}if((Q|0)==132){Q=0;ra=gs(ta<<2)|0;sa=ta}aa=ra+(W<<2)|0;if((aa|0)!=0){c[aa>>2]=U}aa=ia;xs(ra|0,aa|0,X)|0;c[m>>2]=ra;c[n>>2]=ra+(ja<<2);c[o>>2]=ra+(sa<<2);if((ia|0)==0){ua=l;va=na;wa=la;break}is(aa);ua=c[p>>2]|0;va=c[da>>2]|0;wa=c[ea>>2]|0}else{if((e|0)!=0){c[e>>2]=U}c[n>>2]=e+4;ua=l;va=na;wa=la}}while(0);c[ba>>2]=c[ua>>2];pa=va;qa=wa}else{pa=na;qa=la}}while(0);l=ka+1|0;if((l|0)<(pa-qa>>2|0)){ka=l;na=pa;la=qa}else{break c}}gp(0)}}while(0);qa=g+1488|0;if((qa|0)!=(j|0)){Se(qa,c[m>>2]|0,c[n>>2]|0)}qa=c[k>>2]|0;if((qa|0)!=0){is(qa)}qa=c[m>>2]|0;if((qa|0)==0){i=h;return}m=c[n>>2]|0;if((m|0)!=(qa|0)){c[n>>2]=m+(~((m-4+(-qa|0)|0)>>>2)<<2)}is(qa);i=h;return}function Ke(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;b=i;i=i+480|0;g=b|0;h=b+192|0;j=b+384|0;k=c[f+912>>2]|0;l=f+328|0;m=c[l>>2]|0;n=(m|0)>(k|0)?m:k;ys(j|0,0,96)|0;o=e+1469064|0;p=e+1469068|0;q=e+1469076|0;r=(k|0)>(m|0)?k:m;s=e+1469404|0;t=e+1469468|0;u=e+1469596|0;v=0;while(1){if((v|0)>=(n|0)){break}w=c[o>>2]|0;if((w|0)>0){x=(w|0)>1?-w|0:-1;w=v-r|0;y=x>>>0>w>>>0?x:w;xs(g+(v<<2)|0,s|0,y*-4|0)|0;z=v-y|0}else{z=v}y=c[p>>2]|0;if((y|0)>0&(z|0)<(n|0)){w=(y|0)>1?-y|0:-1;y=z-r|0;x=w>>>0>y>>>0?w:y;xs(g+(z<<2)|0,t|0,x*-4|0)|0;A=z-x|0}else{A=z}x=c[q>>2]|0;if((x|0)>0&(A|0)<(n|0)){y=(x|0)>1?-x|0:-1;x=A-r|0;w=y>>>0>x>>>0?y:x;xs(g+(A<<2)|0,u|0,w*-4|0)|0;ys(j+A|0,1,-w|0)|0;B=A-w|0}else{B=A}if((B|0)==0){C=10;break}else{v=B}}if((C|0)==10){C=e+80|0;B=c[C>>2]|0;if((B|0)==20){c[e+76>>2]=1001;D=0;E=96;F=0;G=192;H=0;I=192;J=0;i=b;return D|0}else{c[C>>2]=B+1;c[e+(B<<2)>>2]=1016;D=0;E=96;F=0;G=192;H=0;I=192;J=0;i=b;return D|0}}if((m|0)>15){B=e+80|0;C=c[B>>2]|0;if((C|0)==20){c[e+76>>2]=1001;D=0;E=96;F=0;G=192;H=0;I=192;J=0;i=b;return D|0}else{c[B>>2]=C+1;c[e+(C<<2)>>2]=1012;D=0;E=96;F=0;G=192;H=0;I=192;J=0;i=b;return D|0}}if((m|0)>0){m=f+336|0;C=e+1468668|0;B=0;do{if((a[m]|0)==0){K=B}else{K=d[f+338+B|0]|0}v=f+916+(B<<2)|0;c[v>>2]=c[g+(K<<2)>>2];a[f+1300+B|0]=a[j+K|0]|0;A=c[(c[C>>2]|0)+(c[v>>2]<<2)>>2]|0;c[f+1044+(B<<2)>>2]=c[A+88>>2];c[f+1172+(B<<2)>>2]=c[A+92>>2];B=B+1|0;}while((B|0)<(c[l>>2]|0))}if((c[f+20>>2]|0)!=0){D=1;E=96;F=0;G=192;H=0;I=192;J=0;i=b;return D|0}l=f+332|0;B=c[l>>2]|0;C=(B|0)>(k|0)?B:k;a:do{if((C|0)>0){K=c[p>>2]|0;g=c[o>>2]|0;m=(g|0)>0;A=c[q>>2]|0;v=(A|0)>0;r=(k|0)>(B|0)?k:B;if((K|0)>0){L=0}else{n=0;while(1){if(m&(n|0)<(C|0)){z=(g|0)>1?-g|0:-1;w=n-r|0;x=z>>>0>w>>>0?z:w;xs(h+(n<<2)|0,s|0,x*-4|0)|0;M=n-x|0}else{M=n}if(v&(M|0)<(C|0)){x=(A|0)>1?-A|0:-1;w=M-r|0;z=x>>>0>w>>>0?x:w;xs(h+(M<<2)|0,u|0,z*-4|0)|0;ys(j+48+M|0,1,-z|0)|0;N=M-z|0}else{N=M}if((N|0)<(C|0)){n=N}else{break a}}}while(1){if((L|0)<(C|0)){n=(K|0)>1?-K|0:-1;z=L-r|0;w=n>>>0>z>>>0?n:z;xs(h+(L<<2)|0,t|0,w*-4|0)|0;O=L-w|0}else{O=L}if(m&(O|0)<(C|0)){w=(g|0)>1?-g|0:-1;z=O-r|0;n=w>>>0>z>>>0?w:z;xs(h+(O<<2)|0,s|0,n*-4|0)|0;P=O-n|0}else{P=O}if(v&(P|0)<(C|0)){n=(A|0)>1?-A|0:-1;z=P-r|0;w=n>>>0>z>>>0?n:z;xs(h+(P<<2)|0,u|0,w*-4|0)|0;ys(j+48+P|0,1,-w|0)|0;Q=P-w|0}else{Q=P}if((Q|0)<(C|0)){L=Q}else{break}}}}while(0);if((B|0)>=16){bc(1016,10608,1651,12808);return 0}if((B|0)<=0){D=1;E=96;F=0;G=192;H=0;I=192;J=0;i=b;return D|0}B=f+337|0;Q=e+1468668|0;e=0;while(1){if((a[B]|0)==0){R=e}else{R=d[f+354+e|0]|0}L=f+980+(e<<2)|0;c[L>>2]=c[h+(R<<2)>>2];a[f+1316+e|0]=a[j+48+R|0]|0;C=c[(c[Q>>2]|0)+(c[L>>2]<<2)>>2]|0;c[f+1108+(e<<2)>>2]=c[C+88>>2];c[f+1236+(e<<2)>>2]=c[C+92>>2];C=e+1|0;if((C|0)<(c[l>>2]|0)){e=C}else{D=1;break}}E=96;F=0;G=192;H=0;I=192;J=0;i=b;return D|0}function Le(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=c[b+1467904>>2]|0;e=(d|0)==0;do{if(e){f=c[b+1467900>>2]|0;if((f|0)==0){g=6;break}g=(c[f+8>>2]|0)-1|0}else{g=(a[d+2|0]|0)-1|0}}while(0);do{if((a[b+1468628|0]|0)!=(g|0)){do{if(e){f=c[b+1467900>>2]|0;if((f|0)==0){h=6;break}i=c[f+8>>2]|0;j=10}else{i=a[d+2|0]|0;j=10}}while(0);if((j|0)==10){if((i|0)>0){h=i-1|0}else{break}}f=h+1|0;k=b+1468408|0;l=h;while(1){m=l*100|0;n=(m|0)/(f|0)|0;o=(m+100|0)/(f|0)|0;if((n|0)>(o|0)){p=l}else{m=o-n|0;q=l;r=n;while(1){s=c[k>>2]|0;t=(q|0)>(s|0);u=t?s:q;a[b+1468428+(r<<1)|0]=u;a[b+1468428+(r<<1)+1|0]=t?100:(((r-n|0)*100|0|0)/(m|0)|0)&255;if((r|0)<(o|0)){q=u;r=r+1|0}else{p=u;break}}}c[b+1468632+(p<<2)>>2]=o;if((p|0)>0){l=p-1|0}else{break}}}}while(0);p=c[b+1468412>>2]|0;h=a[b+1468428+(p<<1)|0]|0;c[b+1468416>>2]=h;c[b+1468420>>2]=a[b+1468428+(p<<1)+1|0]|0;c[b+1468424>>2]=h;return}function Me(b){b=b|0;var d=0,e=0;d=c[b+1467904>>2]|0;if((d|0)!=0){e=(a[d+2|0]|0)-1|0;return e|0}d=c[b+1467900>>2]|0;if((d|0)==0){e=6;return e|0}e=(c[d+8>>2]|0)-1|0;return e|0}function Ne(a,b){a=a|0;b=b|0;c[a+1468408>>2]=b;Le(a);return}function Oe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[b+1467904>>2]|0;if((e|0)==0){f=b+1468412|0;g=c[f>>2]|0;return g|0}h=(a[e+2|0]|0)-1|0;if(!((d+1|0)>>>0<3>>>0)){bc(320,10608,1969,12960);return 0}e=b+1468416|0;i=(c[e>>2]|0)+d|0;d=(i|0)<0?0:i;i=(h|0)<(d|0)?h:d;c[e>>2]=i;e=b+1468412|0;c[e>>2]=c[b+1468632+(i<<2)>>2];Le(b);f=e;g=c[f>>2]|0;return g|0}function Pe(a,b){a=a|0;b=b|0;c[a+1468412>>2]=b;Le(a);return}function Qe(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a+80|0;d=c[b>>2]|0;if((d|0)==0){e=0;return e|0}f=c[a>>2]|0;g=d-1|0;c[b>>2]=g;zs(a|0,a+4|0,g<<2|0)|0;e=f;return e|0}function Re(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=b|0;c[f>>2]=0;g=b+4|0;c[g>>2]=0;h=b+8|0;c[h>>2]=0;if((d|0)==0){return}if((d|0)<0){gp(0)}b=((d-1|0)>>>5)+1|0;i=gs(b<<2)|0;j=i;c[f>>2]=j;c[h>>2]=b;b=(a[e]|0)==0;c[g>>2]=d;g=d>>>5;e=g<<2;if(b){ys(i|0,0,e|0)|0;b=g<<5;if((b|0)==(d|0)){return}h=j+(g<<2)|0;c[h>>2]=c[h>>2]&~(-1>>>((32-d+b|0)>>>0));return}else{ys(i|0,-1|0,e|0)|0;e=g<<5;if((e|0)==(d|0)){return}i=j+(g<<2)|0;c[i>>2]=c[i>>2]|-1>>>((32-d+e|0)>>>0);return}}function Se(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=b;f=d-e>>2;g=a+8|0;h=c[g>>2]|0;i=a|0;j=c[i>>2]|0;k=j;if(!(f>>>0>h-k>>2>>>0)){l=a+4|0;m=(c[l>>2]|0)-k|0;n=m>>2;if(!(f>>>0>n>>>0)){o=d-e|0;zs(j|0,b|0,o|0)|0;p=j+(o>>2<<2)|0;o=c[l>>2]|0;if((o|0)==(p|0)){return}c[l>>2]=o+(~((o-4+(-p|0)|0)>>>2)<<2);return}p=b+(n<<2)|0;zs(j|0,b|0,m|0)|0;if((p|0)==(d|0)){return}m=c[l>>2]|0;n=(d-4+(-p|0)|0)>>>2;o=p;p=m;while(1){if((p|0)!=0){c[p>>2]=c[o>>2]}q=o+4|0;if((q|0)==(d|0)){break}else{o=q;p=p+4|0}}c[l>>2]=m+(n+1<<2);return}if((j|0)==0){r=h}else{h=a+4|0;n=c[h>>2]|0;if((n|0)!=(j|0)){c[h>>2]=n+(~((n-4+(-k|0)|0)>>>2)<<2)}is(j);c[g>>2]=0;c[h>>2]=0;c[i>>2]=0;r=0}if(f>>>0>1073741823>>>0){gp(0)}h=r;do{if(h>>2>>>0<536870911>>>0){r=h>>1;j=r>>>0<f>>>0?f:r;if(!(j>>>0>1073741823>>>0)){s=j;break}gp(0)}else{s=1073741823}}while(0);f=gs(s<<2)|0;h=a+4|0;c[h>>2]=f;c[i>>2]=f;c[g>>2]=f+(s<<2);if((b|0)==(d|0)){return}s=(d-4+(-e|0)|0)>>>2;e=b;b=f;while(1){if((b|0)!=0){c[b>>2]=c[e>>2]}g=e+4|0;if((g|0)==(d|0)){break}else{e=g;b=b+4|0}}c[h>>2]=f+(s+1<<2);return}function Te(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=b+8|0;f=b+4|0;g=c[f>>2]|0;h=c[e>>2]|0;i=g;if(!((h-i|0)>>>0<d>>>0)){j=d;k=g;do{if((k|0)==0){l=0}else{a[k|0]=0;l=c[f>>2]|0}k=l+1|0;c[f>>2]=k;j=j-1|0;}while((j|0)!=0);return}j=b|0;b=c[j>>2]|0;k=i-b|0;i=k+d|0;if((i|0)<0){gp(0)}l=h-b|0;if(l>>>0<1073741823>>>0){b=l<<1;l=b>>>0<i>>>0?i:b;if((l|0)==0){m=0;n=0}else{o=l;p=9}}else{o=2147483647;p=9}if((p|0)==9){m=gs(o)|0;n=o}o=d;d=m+k|0;do{if((d|0)==0){q=0}else{a[d|0]=0;q=d}d=q+1|0;o=o-1|0;}while((o|0)!=0);o=c[j>>2]|0;q=(c[f>>2]|0)-o|0;p=m+(k-q)|0;k=o|0;xs(p|0,k|0,q)|0;c[j>>2]=p;c[f>>2]=d;c[e>>2]=m+n;if((o|0)==0){return}is(k);return}function Ue(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){gp(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0<536870911>>>0){g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){l=0;m=0}else{n=a;o=5}}else{n=1073741823;o=5}if((o|0)==5){l=gs(n<<2)|0;m=n}n=l+(i<<2)|0;if((n|0)!=0){c[n>>2]=c[b>>2]}b=f;xs(l|0,b|0,h)|0;c[e>>2]=l;c[d>>2]=l+(j<<2);c[k>>2]=l+(m<<2);if((f|0)==0){return}is(b);return}function Ve(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){gp(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0<536870911>>>0){g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){l=0;m=0}else{n=a;o=5}}else{n=1073741823;o=5}if((o|0)==5){l=gs(n<<2)|0;m=n}n=l+(i<<2)|0;if((n|0)!=0){c[n>>2]=c[b>>2]}b=f;xs(l|0,b|0,h)|0;c[e>>2]=l;c[d>>2]=l+(j<<2);c[k>>2]=l+(m<<2);if((f|0)==0){return}is(b);return}function We(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=(h|0)/80|0;j=i+1|0;if(j>>>0>53687091>>>0){gp(0)}k=a+8|0;a=((c[k>>2]|0)-g|0)/80|0;if(a>>>0<26843545>>>0){g=a<<1;a=g>>>0<j>>>0?j:g;if((a|0)==0){l=0;m=0}else{n=a;o=5}}else{n=53687091;o=5}if((o|0)==5){l=gs(n*80|0)|0;m=n}n=l+(i*80|0)|0;if((n|0)!=0){xs(n|0,b|0,80)|0}b=l+((((h|0)/-80|0)+i|0)*80|0)|0;i=f;xs(b|0,i|0,h)|0;c[e>>2]=b;c[d>>2]=l+(j*80|0);c[k>>2]=l+(m*80|0);if((f|0)==0){return}is(i);return}function Xe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){gp(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0<536870911>>>0){g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){l=0;m=0}else{n=a;o=5}}else{n=1073741823;o=5}if((o|0)==5){l=gs(n<<2)|0;m=n}n=l+(i<<2)|0;if((n|0)!=0){c[n>>2]=c[b>>2]}b=f;xs(l|0,b|0,h)|0;c[e>>2]=l;c[d>>2]=l+(j<<2);c[k>>2]=l+(m<<2);if((f|0)==0){return}is(b);return}function Ye(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=b;f=(d-e|0)/100|0;g=a+8|0;h=c[g>>2]|0;i=a|0;j=c[i>>2]|0;k=j;if(!(f>>>0>((h-k|0)/100|0)>>>0)){l=a+4|0;m=((c[l>>2]|0)-k|0)/100|0;if(f>>>0>m>>>0){n=1;o=b+(m*100|0)|0}else{n=0;o=d}m=o-e|0;zs(j|0,b|0,m|0)|0;e=j+(((m|0)/100|0)*100|0)|0;if(!n){n=c[l>>2]|0;if((n|0)==(e|0)){return}c[l>>2]=n+(~(((n-100+(-e|0)|0)>>>0)/100|0)*100|0);return}if((o|0)==(d|0)){return}e=o;o=c[l>>2]|0;do{if((o|0)==0){p=0}else{xs(o|0,e|0,100)|0;p=c[l>>2]|0}o=p+100|0;c[l>>2]=o;e=e+100|0;}while((e|0)!=(d|0));return}if((j|0)==0){q=h}else{h=a+4|0;e=c[h>>2]|0;if((e|0)!=(j|0)){c[h>>2]=e+(~(((e-100+(-k|0)|0)>>>0)/100|0)*100|0)}is(j|0);c[g>>2]=0;c[h>>2]=0;c[i>>2]=0;q=0}if(f>>>0>42949672>>>0){gp(0)}h=(q|0)/100|0;do{if(h>>>0<21474836>>>0){q=h<<1;j=q>>>0<f>>>0?f:q;if(!(j>>>0>42949672>>>0)){r=j;break}gp(0)}else{r=42949672}}while(0);f=gs(r*100|0)|0;h=a+4|0;c[h>>2]=f;c[i>>2]=f;c[g>>2]=f+(r*100|0);if((b|0)==(d|0)){return}else{s=b;t=f}do{if((t|0)==0){u=0}else{xs(t|0,s|0,100)|0;u=c[h>>2]|0}t=u+100|0;c[h>>2]=t;s=s+100|0;}while((s|0)!=(d|0));return}function Ze(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){gp(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0<536870911>>>0){g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){l=0;m=0}else{n=a;o=5}}else{n=1073741823;o=5}if((o|0)==5){l=gs(n<<2)|0;m=n}n=l+(i<<2)|0;if((n|0)!=0){c[n>>2]=c[b>>2]}b=f;xs(l|0,b|0,h)|0;c[e>>2]=l;c[d>>2]=l+(j<<2);c[k>>2]=l+(m<<2);if((f|0)==0){return}is(b);return}function _e(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=a+4|0;d=c[b>>2]|0;e=a+16|0;f=c[e>>2]|0;g=d+(f>>>10<<2)|0;h=a+8|0;i=c[h>>2]|0;if((i|0)==(d|0)){j=0;k=0;l=a+20|0}else{m=a+20|0;a=f+(c[m>>2]|0)|0;j=(c[d+(a>>>10<<2)>>2]|0)+((a&1023)<<2)|0;k=(c[g>>2]|0)+((f&1023)<<2)|0;l=m}m=g;g=k;a:while(1){k=g;do{if((k|0)==(j|0)){break a}k=k+4|0;}while((k-(c[m>>2]|0)|0)!=4096);k=m+4|0;m=k;g=c[k>>2]|0}c[l>>2]=0;l=i-d>>2;if(l>>>0>2>>>0){i=d;while(1){is(c[i>>2]|0);d=(c[b>>2]|0)+4|0;c[b>>2]=d;g=(c[h>>2]|0)-d>>2;if(g>>>0>2>>>0){i=d}else{n=g;break}}}else{n=l}if((n|0)==2){c[e>>2]=1024;return}else if((n|0)==1){c[e>>2]=512;return}else{return}}function $e(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[a+40>>2]|0;f=(c[a+44>>2]|0)-e>>2;while(1){a=f-1|0;if(!((a|0)>-1)){g=0;h=4;break}if(((c[e+(a<<2)>>2]|0)-d|0)>(b|0)){f=a}else{g=f;h=4;break}}if((h|0)==4){return g|0}return 0}function af(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=i;i=i+8|0;e=d|0;f=b+32|0;g=c[f>>2]|0;if((g-2|0)<=0){i=d;return}h=b+44|0;j=b+40|0;k=b+48|0;l=b+40|0;m=c[b+28>>2]|0;b=0;n=g;while(1){g=m+2|0;o=a[g]|0;do{if((o<<24>>24|0)==3|(o<<24>>24|0)==0){if((a[m]|0)!=0){p=b;q=m;r=n;break}s=m+1|0;if(!((a[s]|0)==0&o<<24>>24==3)){p=b;q=m;r=n;break}t=c[h>>2]|0;u=b+2+(t-(c[j>>2]|0)>>2)|0;c[e>>2]=u;if((t|0)==(c[k>>2]|0)){pf(l,e)}else{if((t|0)!=0){c[t>>2]=u}c[h>>2]=t+4}zs(g|0,m+3|0,-3-b+(c[f>>2]|0)|0)|0;t=(c[f>>2]|0)-1|0;c[f>>2]=t;p=b+1|0;q=s;r=t}else{p=b+2|0;q=g;r=n}}while(0);g=p+1|0;if((g|0)<(r-2|0)){m=q+1|0;b=g;n=r}else{break}}i=d;return}function bf(b){b=b|0;a[b|0]=0;a[b+1|0]=0;ys(b+4|0,0,48)|0;return}function cf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=a+32|0;d=a+16|0;e=a+28|0;f=a+36|0;while(1){g=c[b>>2]|0;if((g|0)==0){break}h=c[d>>2]|0;i=c[e>>2]|0;j=c[(c[h+(i>>>10<<2)>>2]|0)+((i&1023)<<2)>>2]|0;c[b>>2]=g-1;g=i+1|0;c[e>>2]=g;if(g>>>0>2047>>>0){is(c[h>>2]|0);c[d>>2]=(c[d>>2]|0)+4;c[e>>2]=(c[e>>2]|0)-1024}c[f>>2]=(c[f>>2]|0)-(c[j+32>>2]|0);if((j|0)==0){break}ef(a,j)}f=c[a+8>>2]|0;if((f|0)!=0){ef(a,f)}f=a+44|0;e=c[f>>2]|0;b=a+40|0;j=c[b>>2]|0;if((e|0)==(j|0)){k=e;l=e;m=j}else{h=0;g=j;j=e;while(1){e=c[g+(h<<2)>>2]|0;if((e|0)==0){n=j;o=g}else{as(c[e+28>>2]|0);i=c[e+40>>2]|0;if((i|0)!=0){p=e+44|0;q=c[p>>2]|0;if((q|0)!=(i|0)){c[p>>2]=q+(~((q-4+(-i|0)|0)>>>2)<<2)}is(i)}is(e);n=c[f>>2]|0;o=c[b>>2]|0}e=h+1|0;i=o;if(e>>>0<n-i>>2>>>0){h=e;g=o;j=n}else{k=n;l=o;m=i;break}}}if((l|0)!=0){if((k|0)!=(l|0)){c[f>>2]=k+(~((k-4+(-m|0)|0)>>>2)<<2)}is(l)}l=a+12|0;qf(l|0);m=c[d>>2]|0;k=a+20|0;a=c[k>>2]|0;do{if((m|0)!=(a|0)){f=m;do{is(c[f>>2]|0);f=f+4|0;}while((f|0)!=(a|0));f=c[d>>2]|0;o=c[k>>2]|0;if((o|0)==(f|0)){break}c[k>>2]=o+(~((o-4+(-f|0)|0)>>>2)<<2)}}while(0);k=c[l>>2]|0;if((k|0)==0){return}is(k);return}function df(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=a+32|0;d=c[b>>2]|0;if((d|0)==0){e=0;return e|0}f=a+16|0;g=c[f>>2]|0;h=a+28|0;i=c[h>>2]|0;j=c[(c[g+(i>>>10<<2)>>2]|0)+((i&1023)<<2)>>2]|0;c[b>>2]=d-1;d=i+1|0;c[h>>2]=d;if(d>>>0>2047>>>0){is(c[g>>2]|0);c[f>>2]=(c[f>>2]|0)+4;c[h>>2]=(c[h>>2]|0)-1024}h=a+36|0;c[h>>2]=(c[h>>2]|0)-(c[j+32>>2]|0);e=j;return e|0}function ef(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;c[e>>2]=b;f=a+40|0;g=a+44|0;h=c[g>>2]|0;if(h-(c[f>>2]|0)>>2>>>0<16>>>0){if((h|0)==(c[a+48>>2]|0)){of(f,e);i=d;return}if((h|0)==0){j=0}else{c[h>>2]=b;j=c[g>>2]|0}c[g>>2]=j+4;i=d;return}if((b|0)==0){i=d;return}as(c[b+28>>2]|0);j=c[b+40>>2]|0;if((j|0)!=0){g=b+44|0;h=c[g>>2]|0;if((h|0)!=(j|0)){c[g>>2]=h+(~((h-4+(-j|0)|0)>>>2)<<2)}is(j)}is(b);i=d;return}function ff(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=a+44|0;e=c[d>>2]|0;if((e|0)==(c[a+40>>2]|0)){a=gs(56)|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;f=a+40|0;c[f>>2]=0;g=a+44|0;c[g>>2]=0;h=a+48|0;c[h>>2]=0;i=gs(64)|0;j=i;c[g>>2]=j;c[f>>2]=j;f=i+64|0;c[h>>2]=f;if((i|0)!=0){c[j>>2]=0}ys(i+4|0,0,60)|0;c[g>>2]=f;ys(a+16|0,0,24)|0;k=a}else{a=e-4|0;f=c[a>>2]|0;c[d>>2]=e+(~((a+(-a|0)|0)>>>2)<<2);k=f}c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;f=k+16|0;c[f>>2]=0;c[f+4>>2]=0;c[k+24>>2]=0;f=k+32|0;c[f>>2]=0;a=c[k+40>>2]|0;e=k+44|0;d=c[e>>2]|0;if((d|0)!=(a|0)){c[e>>2]=d+(~((d-4+(-a|0)|0)>>>2)<<2)}a=k+36|0;if((c[a>>2]|0)>=(b|0)){return k|0}d=$r(b)|0;e=k+28|0;g=c[e>>2]|0;if((g|0)!=0){xs(d|0,g|0,c[f>>2]|0)|0;as(g)}c[e>>2]=d;c[a>>2]=b;return k|0}function gf(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;j=i;i=i+8|0;k=j|0;a[b+1|0]=0;l=b+8|0;m=c[l>>2]|0;n=e+3|0;if((m|0)==0){o=ff(b,n)|0;c[l>>2]=o;p=o+16|0;c[p>>2]=f;c[p+4>>2]=g;c[o+24>>2]=h;q=c[l>>2]|0}else{q=m}m=q+32|0;o=c[m>>2]|0;p=n+o|0;r=q+36|0;if((c[r>>2]|0)<(p|0)){s=$r(p)|0;t=q+28|0;u=c[t>>2]|0;if((u|0)!=0){xs(s|0,u|0,c[m>>2]|0)|0;as(u)}c[t>>2]=s;c[r>>2]=p;v=c[m>>2]|0;w=s}else{v=o;w=c[q+28>>2]|0}o=w+v|0;if((e|0)<=0){x=q;y=o;z=w;A=y;B=z;C=A-B|0;D=x+32|0;c[D>>2]=C;i=j;return 0}w=b+4|0;v=b+12|0;s=b+20|0;m=b+16|0;p=b+28|0;r=b+32|0;t=b+36|0;u=d;d=q;q=o;o=1;while(1){E=c[w>>2]|0;a:do{switch(E|0){case 3:{a[q]=a[u]|0;c[w>>2]=4;F=q+1|0;G=d;break};case 5:{H=a[u]|0;if(H<<24>>24==0){c[w>>2]=6;F=q;G=d;break a}else{a[q]=H;F=q+1|0;G=d;break a}break};case 7:{H=a[u]|0;if((H<<24>>24|0)==0){a[q]=0;F=q+1|0;G=d;break a}else if((H<<24>>24|0)==3){a[q]=0;I=q+2|0;a[q+1|0]=0;c[w>>2]=5;J=d+44|0;K=c[J>>2]|0;L=(K-(c[d+40>>2]|0)>>2)+(I-(c[d+28>>2]|0))|0;c[k>>2]=L;if((K|0)==(c[d+48>>2]|0)){pf(d+40|0,k);F=I;G=d;break a}if((K|0)!=0){c[K>>2]=L}c[J>>2]=K+4;F=I;G=d;break a}else if((H<<24>>24|0)==1){H=d+32|0;c[H>>2]=q-(c[d+28>>2]|0);I=c[s>>2]|0;K=c[m>>2]|0;if((I|0)==(K|0)){M=0}else{M=(I-K<<8)-1|0}J=c[p>>2]|0;L=c[r>>2]|0;if((M-J|0)==(L|0)){lf(v);N=c[r>>2]|0;O=c[p>>2]|0;P=c[m>>2]|0;Q=c[s>>2]|0}else{N=L;O=J;P=K;Q=I}I=N+O|0;do{if((Q|0)!=(P|0)){K=(c[P+(I>>>10<<2)>>2]|0)+((I&1023)<<2)|0;if((K|0)==0){break}c[K>>2]=d}}while(0);c[r>>2]=N+1;c[t>>2]=(c[t>>2]|0)+(c[H>>2]|0);I=ff(b,n)|0;c[l>>2]=I;K=I+16|0;c[K>>2]=f;c[K+4>>2]=g;c[I+24>>2]=h;I=c[l>>2]|0;K=c[I+28>>2]|0;c[w>>2]=3;F=K;G=I;break a}else{a[q]=0;a[q+1|0]=0;a[q+2|0]=a[u]|0;c[w>>2]=5;F=q+3|0;G=d;break a}break};case 2:{I=a[u]|0;if((I<<24>>24|0)==0){F=q;G=d;break a}else if((I<<24>>24|0)==1){c[w>>2]=3;F=q;G=d;break a}else{c[w>>2]=0;F=q;G=d;break a}break};case 4:{a[q]=a[u]|0;c[w>>2]=5;F=q+1|0;G=d;break};case 6:{if((a[u]|0)==0){c[w>>2]=7;F=q;G=d;break a}else{a[q]=0;a[q+1|0]=a[u]|0;c[w>>2]=5;F=q+2|0;G=d;break a}break};case 0:case 1:{if((a[u]|0)==0){c[w>>2]=E+1;F=q;G=d;break a}else{c[w>>2]=0;F=q;G=d;break a}break};default:{F=q;G=d}}}while(0);if((o|0)>=(e|0)){break}u=u+1|0;d=G;q=F;o=o+1|0}x=G;y=F;z=c[G+28>>2]|0;A=y;B=z;C=A-B|0;D=x+32|0;c[D>>2]=C;i=j;return 0}function hf(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;if((c[b+8>>2]|0)!=0){bc(552,9712,350,13088);return 0}a[b+1|0]=0;i=ff(b,e)|0;j=i+36|0;if((c[j>>2]|0)<(e|0)){k=$r(e)|0;l=i+28|0;m=c[l>>2]|0;if((m|0)!=0){xs(k|0,m|0,c[i+32>>2]|0)|0;as(m)}c[l>>2]=k;c[j>>2]=e;n=k}else{n=c[i+28>>2]|0}xs(n|0,d|0,e)|0;d=i+32|0;c[d>>2]=e;e=i+16|0;c[e>>2]=f;c[e+4>>2]=g;c[i+24>>2]=h;af(i);h=b+20|0;g=c[h>>2]|0;e=b+16|0;f=c[e>>2]|0;if((g|0)==(f|0)){o=0}else{o=(g-f<<8)-1|0}n=b+28|0;k=c[n>>2]|0;j=b+32|0;l=c[j>>2]|0;if((o-k|0)==(l|0)){lf(b+12|0);p=c[j>>2]|0;q=c[n>>2]|0;r=c[e>>2]|0;s=c[h>>2]|0}else{p=l;q=k;r=f;s=g}g=p+q|0;if((s|0)==(r|0)){t=p+1|0;c[j>>2]=t;u=c[d>>2]|0;v=b+36|0;w=c[v>>2]|0;x=w+u|0;c[v>>2]=x;return 0}s=(c[r+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0;if((s|0)==0){t=p+1|0;c[j>>2]=t;u=c[d>>2]|0;v=b+36|0;w=c[v>>2]|0;x=w+u|0;c[v>>2]=x;return 0}c[s>>2]=i;t=p+1|0;c[j>>2]=t;u=c[d>>2]|0;v=b+36|0;w=c[v>>2]|0;x=w+u|0;c[v>>2]=x;return 0}function jf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=b+8|0;e=c[d>>2]|0;if((e|0)==0){return 0}f=b+4|0;g=c[f>>2]|0;if((g|0)==6){h=e+32|0;i=c[h>>2]|0;j=i+1|0;k=e+36|0;if((c[k>>2]|0)<(j|0)){l=$r(j)|0;m=e+28|0;n=c[m>>2]|0;if((n|0)==0){o=i}else{xs(l|0,n|0,i)|0;as(n);o=c[h>>2]|0}c[m>>2]=l;c[k>>2]=j;p=o;q=l}else{p=i;q=c[e+28>>2]|0}a[q+p|0]=0;c[h>>2]=(c[h>>2]|0)+1;r=c[f>>2]|0}else{r=g}if((r|0)==7){g=e+32|0;h=c[g>>2]|0;p=h+2|0;q=e+36|0;if((c[q>>2]|0)<(p|0)){i=$r(p)|0;l=e+28|0;o=c[l>>2]|0;if((o|0)==0){s=h}else{xs(i|0,o|0,h)|0;as(o);s=c[g>>2]|0}c[l>>2]=i;c[q>>2]=p;t=s;u=i}else{t=h;u=c[e+28>>2]|0}h=u+t|0;C=0;a[h]=C;C=C>>8;a[h+1|0]=C;c[g>>2]=(c[g>>2]|0)+2;v=c[f>>2]|0}else{v=r}if((v|0)>4){v=b+20|0;r=c[v>>2]|0;g=b+16|0;h=c[g>>2]|0;if((r|0)==(h|0)){w=0}else{w=(r-h<<8)-1|0}t=b+28|0;u=c[t>>2]|0;i=b+32|0;s=c[i>>2]|0;if((w-u|0)==(s|0)){lf(b+12|0);x=c[i>>2]|0;y=c[t>>2]|0;z=c[g>>2]|0;A=c[v>>2]|0}else{x=s;y=u;z=h;A=r}r=x+y|0;do{if((A|0)!=(z|0)){y=(c[z+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;if((y|0)==0){break}c[y>>2]=e}}while(0);c[i>>2]=x+1;x=b+36|0;c[x>>2]=(c[x>>2]|0)+(c[e+32>>2]|0);c[d>>2]=0}c[f>>2]=0;return 0}function kf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=a+8|0;d=c[b>>2]|0;if((d|0)!=0){ef(a,d);c[b>>2]=0}b=a+32|0;d=c[b>>2]|0;if((d|0)==0){e=a+36|0;f=a+4|0;c[f>>2]=0;c[e>>2]=0;return}g=a+16|0;h=a+28|0;i=a+36|0;j=d;while(1){d=c[g>>2]|0;k=c[h>>2]|0;l=c[(c[d+(k>>>10<<2)>>2]|0)+((k&1023)<<2)>>2]|0;c[b>>2]=j-1;m=k+1|0;c[h>>2]=m;if(m>>>0>2047>>>0){is(c[d>>2]|0);c[g>>2]=(c[g>>2]|0)+4;c[h>>2]=(c[h>>2]|0)-1024}c[i>>2]=(c[i>>2]|0)-(c[l+32>>2]|0);if((l|0)==0){e=i;n=10;break}ef(a,l);l=c[b>>2]|0;if((l|0)==0){e=i;n=10;break}else{j=l}}if((n|0)==10){f=a+4|0;c[f>>2]=0;c[e>>2]=0;return}}function lf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=a+16|0;g=c[f>>2]|0;if(g>>>0>1023>>>0){c[f>>2]=g-1024;g=a+4|0;f=c[g>>2]|0;h=c[f>>2]|0;j=f+4|0;c[g>>2]=j;k=a+8|0;l=c[k>>2]|0;m=a+12|0;do{if((l|0)==(c[m>>2]|0)){n=a|0;o=c[n>>2]|0;if(j>>>0>o>>>0){p=j;q=((p-o>>2)+1|0)/-2|0;r=l-p|0;zs(f+(q+1<<2)|0,j|0,r|0)|0;p=f+((r>>2)+1+q<<2)|0;c[k>>2]=p;c[g>>2]=(c[g>>2]|0)+(q<<2);s=p;t=13;break}p=l-o>>1;q=(p|0)==0?1:p;p=gs(q<<2)|0;r=p+(q>>>2<<2)|0;u=p+(q<<2)|0;if((j|0)==(l|0)){v=r;w=o}else{o=j;q=r;do{if((q|0)==0){x=0}else{c[q>>2]=c[o>>2];x=q}q=x+4|0;o=o+4|0;}while((o|0)!=(l|0));v=q;w=c[n>>2]|0}c[n>>2]=p;c[g>>2]=r;c[k>>2]=v;c[m>>2]=u;if((w|0)==0){y=v;t=12;break}is(w);y=c[k>>2]|0;t=12}else{y=l;t=12}}while(0);if((t|0)==12){if((y|0)==0){z=0}else{s=y;t=13}}if((t|0)==13){c[s>>2]=h;z=c[k>>2]|0}c[k>>2]=z+4;i=b;return}z=a|0;k=a+8|0;h=c[k>>2]|0;s=a+4|0;y=h-(c[s>>2]|0)>>2;l=a+12|0;w=c[l>>2]|0;v=a|0;m=w-(c[v>>2]|0)|0;if(!(y>>>0<m>>2>>>0)){g=m>>1;m=(g|0)==0?1:g;g=e+12|0;c[e+16>>2]=a+12;a=gs(m<<2)|0;x=a;j=e|0;c[j>>2]=x;f=x+(y<<2)|0;o=e+8|0;c[o>>2]=f;A=e+4|0;c[A>>2]=f;c[g>>2]=x+(m<<2);B=gs(4096)|0;do{if((y|0)==(m|0)){C=f-a|0;if(f>>>0>x>>>0){D=x+(y+(((C>>2)+1|0)/-2|0)<<2)|0;c[o>>2]=D;c[A>>2]=D;E=D;break}D=C>>1;C=(D|0)==0?1:D;D=gs(C<<2)|0;F=D+(C>>>2<<2)|0;c[j>>2]=D;c[A>>2]=F;c[o>>2]=F;c[g>>2]=D+(C<<2);if((a|0)==0){E=F;break}is(a);E=F}else{E=f}}while(0);if((E|0)==0){G=0}else{c[E>>2]=B;G=c[o>>2]|0}c[o>>2]=G+4;G=c[k>>2]|0;while(1){if((G|0)==(c[s>>2]|0)){break}B=G-4|0;nf(e,B);G=B}e=c[v>>2]|0;c[v>>2]=c[j>>2];c[j>>2]=e;c[s>>2]=c[A>>2];c[A>>2]=G;A=c[k>>2]|0;c[k>>2]=c[o>>2];c[o>>2]=A;j=c[l>>2]|0;c[l>>2]=c[g>>2];c[g>>2]=j;if((A|0)!=(G|0)){c[o>>2]=A+(~((A-4+(-G|0)|0)>>>2)<<2)}if((e|0)==0){i=b;return}is(e);i=b;return}e=gs(4096)|0;if((w|0)!=(h|0)){if((h|0)==0){H=0}else{c[h>>2]=e;H=c[k>>2]|0}c[k>>2]=H+4;i=b;return}c[d>>2]=e;mf(z,d);d=c[s>>2]|0;z=c[d>>2]|0;e=d+4|0;c[s>>2]=e;H=c[k>>2]|0;do{if((H|0)==(c[l>>2]|0)){h=c[v>>2]|0;if(e>>>0>h>>>0){w=e;G=((w-h>>2)+1|0)/-2|0;A=H-w|0;zs(d+(G+1<<2)|0,e|0,A|0)|0;w=d+((A>>2)+1+G<<2)|0;c[k>>2]=w;c[s>>2]=(c[s>>2]|0)+(G<<2);I=w;t=31;break}w=H-h>>1;G=(w|0)==0?1:w;w=gs(G<<2)|0;A=w+(G>>>2<<2)|0;o=w+(G<<2)|0;if((e|0)==(H|0)){J=A;K=h}else{h=e;G=A;do{if((G|0)==0){L=0}else{c[G>>2]=c[h>>2];L=G}G=L+4|0;h=h+4|0;}while((h|0)!=(H|0));J=G;K=c[v>>2]|0}c[v>>2]=w;c[s>>2]=A;c[k>>2]=J;c[l>>2]=o;if((K|0)==0){M=J;t=30;break}is(K);M=c[k>>2]|0;t=30}else{M=H;t=30}}while(0);if((t|0)==30){if((M|0)==0){N=0}else{I=M;t=31}}if((t|0)==31){c[I>>2]=z;N=c[k>>2]|0}c[k>>2]=N+4;i=b;return}function mf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;zs(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=gs(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;if((e|0)==(h|0)){o=l;p=e}else{k=e;q=l;do{if((q|0)==0){r=0}else{c[q>>2]=c[k>>2];r=q}q=r+4|0;k=k+4|0;}while((k|0)!=(h|0));o=q;p=c[f>>2]|0}c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((p|0)==0){n=l;break}is(p);n=c[d>>2]|0}else{n=e}}while(0);c[n-4>>2]=c[b>>2];c[d>>2]=(c[d>>2]|0)-4;return}function nf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;zs(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=gs(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;if((e|0)==(h|0)){o=l;p=e}else{k=e;q=l;do{if((q|0)==0){r=0}else{c[q>>2]=c[k>>2];r=q}q=r+4|0;k=k+4|0;}while((k|0)!=(h|0));o=q;p=c[f>>2]|0}c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((p|0)==0){n=l;break}is(p);n=c[d>>2]|0}else{n=e}}while(0);c[n-4>>2]=c[b>>2];c[d>>2]=(c[d>>2]|0)-4;return}function of(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){gp(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0<536870911>>>0){g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){l=0;m=0}else{n=a;o=5}}else{n=1073741823;o=5}if((o|0)==5){l=gs(n<<2)|0;m=n}n=l+(i<<2)|0;if((n|0)!=0){c[n>>2]=c[b>>2]}b=f;xs(l|0,b|0,h)|0;c[e>>2]=l;c[d>>2]=l+(j<<2);c[k>>2]=l+(m<<2);if((f|0)==0){return}is(b);return}function pf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){gp(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0<536870911>>>0){g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){l=0;m=0}else{n=a;o=5}}else{n=1073741823;o=5}if((o|0)==5){l=gs(n<<2)|0;m=n}n=l+(i<<2)|0;if((n|0)!=0){c[n>>2]=c[b>>2]}b=f;xs(l|0,b|0,h)|0;c[e>>2]=l;c[d>>2]=l+(j<<2);c[k>>2]=l+(m<<2);if((f|0)==0){return}is(b);return}function qf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=a+4|0;d=c[b>>2]|0;e=a+16|0;f=c[e>>2]|0;g=d+(f>>>10<<2)|0;h=a+8|0;i=c[h>>2]|0;if((i|0)==(d|0)){j=0;k=0;l=a+20|0}else{m=a+20|0;a=f+(c[m>>2]|0)|0;j=(c[d+(a>>>10<<2)>>2]|0)+((a&1023)<<2)|0;k=(c[g>>2]|0)+((f&1023)<<2)|0;l=m}m=g;g=k;a:while(1){k=g;do{if((k|0)==(j|0)){break a}k=k+4|0;}while((k-(c[m>>2]|0)|0)!=4096);k=m+4|0;m=k;g=c[k>>2]|0}c[l>>2]=0;l=i-d>>2;if(l>>>0>2>>>0){i=d;while(1){is(c[i>>2]|0);d=(c[b>>2]|0)+4|0;c[b>>2]=d;g=(c[h>>2]|0)-d>>2;if(g>>>0>2>>>0){i=d}else{n=g;break}}}else{n=l}if((n|0)==2){c[e>>2]=1024;return}else if((n|0)==1){c[e>>2]=512;return}else{return}}function rf(a){a=a|0;ys(a+8|0,0,48)|0;c[a>>2]=30;c[a+4>>2]=30;return}function sf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a+12|0;d=c[b>>2]|0;e=a+8|0;f=c[e>>2]|0;if((d|0)!=(f|0)){g=0;h=f;f=d;while(1){d=c[h+(g<<2)>>2]|0;if((d|0)==0){i=f;j=h}else{Mf(d);is(d);i=c[b>>2]|0;j=c[e>>2]|0}d=g+1|0;if(d>>>0<i-j>>2>>>0){g=d;h=j;f=i}else{break}}}i=a+32|0;Ef(i|0);f=a+36|0;j=c[f>>2]|0;h=a+40|0;g=c[h>>2]|0;do{if((j|0)!=(g|0)){d=j;do{is(c[d>>2]|0);d=d+4|0;}while((d|0)!=(g|0));d=c[f>>2]|0;k=c[h>>2]|0;if((k|0)==(d|0)){break}c[h>>2]=k+(~((k-4+(-d|0)|0)>>>2)<<2)}}while(0);h=c[i>>2]|0;if((h|0)!=0){is(h)}h=c[a+20>>2]|0;if((h|0)!=0){i=a+24|0;a=c[i>>2]|0;if((a|0)!=(h|0)){c[i>>2]=a+(~((a-4+(-h|0)|0)>>>2)<<2)}is(h)}h=c[e>>2]|0;if((h|0)==0){return}e=c[b>>2]|0;if((e|0)!=(h|0)){c[b>>2]=e+(~((e-4+(-h|0)|0)>>>2)<<2)}is(h);return}function tf(a){a=a|0;return}function uf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if(d){e=1;return e|0}d=c[b+12>>2]|0;f=c[b+8>>2]|0;g=d-f>>2;if(g>>>0<(c[b>>2]|0)>>>0){e=1;return e|0}if((d|0)==(f|0)){e=0;return e|0}else{h=0}while(1){d=c[f+(h<<2)>>2]|0;if((a[d+96|0]|0)==0){if((c[d+92>>2]|0)==0){e=1;i=7;break}}d=h+1|0;if(d>>>0<g>>>0){h=d}else{e=0;i=7;break}}if((i|0)==7){return e|0}return 0}function vf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=c[a+12>>2]|0;g=c[a+8>>2]|0;a:do{if(!((f|0)==(g|0)|e^1)){a=0;b:while(1){h=c[g+(a<<2)>>2]|0;do{if((c[h+88>>2]|0)==(b|0)){if((c[h+100>>2]|0)<=(d|0)){break}if((c[h+92>>2]|0)==2){i=a;break b}}}while(0);a=a+1|0;if(!(a>>>0<f-g>>2>>>0)){break a}}return i|0}}while(0);if((f|0)==(g|0)){i=-1;return i|0}else{j=0}c:while(1){e=c[g+(j<<2)>>2]|0;do{if((c[e+88>>2]|0)==(b|0)){if((c[e+100>>2]|0)<=(d|0)){break}if((c[e+92>>2]|0)!=0){i=j;k=11;break c}}}while(0);e=j+1|0;if(e>>>0<f-g>>2>>>0){j=e}else{i=-1;k=11;break}}if((k|0)==11){return i|0}return 0}function wf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=c[a+12>>2]|0;g=c[a+8>>2]|0;a:do{if(!((f|0)==(g|0)|e^1)){a=0;b:while(1){h=c[g+(a<<2)>>2]|0;do{if((c[h+84>>2]|0)==(b|0)){if((c[h+100>>2]|0)<=(d|0)){break}if((c[h+92>>2]|0)==2){i=a;break b}}}while(0);a=a+1|0;if(!(a>>>0<f-g>>2>>>0)){break a}}return i|0}}while(0);if((f|0)==(g|0)){i=-1;return i|0}else{j=0}c:while(1){e=c[g+(j<<2)>>2]|0;do{if((c[e+84>>2]|0)==(b|0)){if((c[e+100>>2]|0)<=(d|0)){break}if((c[e+92>>2]|0)!=0){i=j;k=11;break c}}}while(0);e=j+1|0;if(e>>>0<f-g>>2>>>0){j=e}else{i=-1;k=11;break}}if((k|0)==11){return i|0}return 0}function xf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a+12>>2]|0;e=c[a+8>>2]|0;if((d|0)==(e|0)){f=-1;return f|0}else{g=0}while(1){a=g+1|0;if((c[c[e+(g<<2)>>2]>>2]|0)==(b|0)){f=g;h=4;break}if(a>>>0<d-e>>2>>>0){g=a}else{f=-1;h=4;break}}if((h|0)==4){return f|0}return 0}function yf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=a+20|0;d=c[b>>2]|0;e=a+24|0;f=c[e>>2]|0;if((d|0)==(f|0)){bc(11824,12040,147,12704)}g=f-d>>2;if(g>>>0>1>>>0){f=c[(c[d>>2]|0)+88>>2]|0;h=0;i=1;while(1){j=c[(c[d+(i<<2)>>2]|0)+88>>2]|0;k=(j|0)<(f|0);l=k?i:h;m=i+1|0;if(m>>>0<g>>>0){f=k?j:f;h=l;i=m}else{n=l;break}}}else{n=0}i=d+(n<<2)|0;d=a+40|0;h=c[d>>2]|0;f=a+36|0;g=c[f>>2]|0;if((h|0)==(g|0)){o=0}else{o=(h-g<<8)-1|0}l=a+48|0;m=c[l>>2]|0;j=a+52|0;k=c[j>>2]|0;if((o-m|0)==(k|0)){Ff(a+32|0);p=c[j>>2]|0;q=c[l>>2]|0;r=c[f>>2]|0;s=c[d>>2]|0}else{p=k;q=m;r=g;s=h}h=p+q|0;do{if((s|0)!=(r|0)){q=(c[r+(h>>>10<<2)>>2]|0)+((h&1023)<<2)|0;if((q|0)==0){break}c[q>>2]=c[i>>2]}}while(0);c[j>>2]=p+1;c[(c[b>>2]|0)+(n<<2)>>2]=c[(c[e>>2]|0)-4>>2];n=c[e>>2]|0;b=n-4|0;c[e>>2]=n+(~((b+(-b|0)|0)>>>2)<<2);return}function zf(a){a=a|0;var b=0,d=0,e=0;b=a+20|0;d=a+24|0;if((c[b>>2]|0)==(c[d>>2]|0)){e=0;return e|0}while(1){yf(a);if((c[b>>2]|0)==(c[d>>2]|0)){e=1;break}}return e|0}function Af(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=b+12|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=0;i=g;g=e;while(1){e=c[i+(h<<2)>>2]|0;j=e+96|0;k=e+92|0;if((a[j]|0)==0){if((c[k>>2]|0)==0){l=g;m=i}else{n=4}}else{n=4}if((n|0)==4){n=0;a[j]=0;c[k>>2]=0;Nf(e);l=c[d>>2]|0;m=c[f>>2]|0}e=h+1|0;if(e>>>0<l-m>>2>>>0){h=e;i=m;g=l}else{break}}}l=c[b+20>>2]|0;g=b+24|0;m=c[g>>2]|0;if((m|0)==(l|0)){o=b+32|0;Ef(o);return}c[g>>2]=m+(~((m-4+(-l|0)|0)>>>2)<<2);o=b+32|0;Ef(o);return}function Bf(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+8|0;l=k|0;m=b+8|0;n=b+12|0;o=c[n>>2]|0;p=m|0;q=c[p>>2]|0;a:do{if((o|0)==(q|0)){r=-1;s=o;t=o}else{u=0;while(1){v=c[q+(u<<2)>>2]|0;if((a[v+96|0]|0)==0){if((c[v+92>>2]|0)==0){break}}w=u+1|0;if(w>>>0<o-q>>2>>>0){u=w}else{r=-1;s=o;t=q;break a}}Nf(v);r=u;s=c[n>>2]|0;t=c[p>>2]|0}}while(0);v=s-t>>2;do{if(v>>>0<=(c[b+4>>2]|0)>>>0|(r|0)==(v-1|0)){x=s}else{t=c[s-4>>2]|0;if((a[t+96|0]|0)!=0){x=s;break}if((c[t+92>>2]|0)!=0){x=s;break}if((t|0)==0){y=s}else{Mf(t);is(t);y=c[n>>2]|0}t=y-4|0;q=y+(~((t+(-t|0)|0)>>>2)<<2)|0;c[n>>2]=q;x=q}}while(0);do{if((r|0)==-1){y=x-(c[p>>2]|0)>>2;s=gs(78976)|0;Kf(s);c[l>>2]=s;v=c[n>>2]|0;if((v|0)==(c[b+16>>2]|0)){Xe(m,l);z=y;break}if((v|0)==0){A=0}else{c[v>>2]=s;A=c[n>>2]|0}c[n>>2]=A+4;z=y}else{z=r}}while(0);r=c[(c[p>>2]|0)+(z<<2)>>2]|0;p=c[d+444>>2]|0;if(p>>>0<4>>>0){Lf(r,c[d+452>>2]|0,c[d+456>>2]|0,p,d,1,e,f,g,h,j)|0;a[r+78864|0]=0;i=k;return z|0}else{bc(9328,12040,259,12688);return 0}return 0}function Cf(a){a=a|0;var b=0,d=0,e=0;b=a+36|0;d=a+48|0;e=a+52|0;c[e>>2]=(c[e>>2]|0)-1;e=(c[d>>2]|0)+1|0;c[d>>2]=e;if(!(e>>>0>2047>>>0)){return}is(c[c[b>>2]>>2]|0);c[b>>2]=(c[b>>2]|0)+4;c[d>>2]=(c[d>>2]|0)-1024;return}function Df(a){a=a|0;return}function Ef(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=a+4|0;d=c[b>>2]|0;e=a+16|0;f=c[e>>2]|0;g=d+(f>>>10<<2)|0;h=a+8|0;i=c[h>>2]|0;if((i|0)==(d|0)){j=0;k=0;l=a+20|0}else{m=a+20|0;a=f+(c[m>>2]|0)|0;j=(c[d+(a>>>10<<2)>>2]|0)+((a&1023)<<2)|0;k=(c[g>>2]|0)+((f&1023)<<2)|0;l=m}m=g;g=k;a:while(1){k=g;do{if((k|0)==(j|0)){break a}k=k+4|0;}while((k-(c[m>>2]|0)|0)!=4096);k=m+4|0;m=k;g=c[k>>2]|0}c[l>>2]=0;l=i-d>>2;if(l>>>0>2>>>0){i=d;while(1){is(c[i>>2]|0);d=(c[b>>2]|0)+4|0;c[b>>2]=d;g=(c[h>>2]|0)-d>>2;if(g>>>0>2>>>0){i=d}else{n=g;break}}}else{n=l}if((n|0)==2){c[e>>2]=1024;return}else if((n|0)==1){c[e>>2]=512;return}else{return}}function Ff(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=a+16|0;g=c[f>>2]|0;if(g>>>0>1023>>>0){c[f>>2]=g-1024;g=a+4|0;f=c[g>>2]|0;h=c[f>>2]|0;j=f+4|0;c[g>>2]=j;k=a+8|0;l=c[k>>2]|0;m=a+12|0;do{if((l|0)==(c[m>>2]|0)){n=a|0;o=c[n>>2]|0;if(j>>>0>o>>>0){p=j;q=((p-o>>2)+1|0)/-2|0;r=l-p|0;zs(f+(q+1<<2)|0,j|0,r|0)|0;p=f+((r>>2)+1+q<<2)|0;c[k>>2]=p;c[g>>2]=(c[g>>2]|0)+(q<<2);s=p;t=13;break}p=l-o>>1;q=(p|0)==0?1:p;p=gs(q<<2)|0;r=p+(q>>>2<<2)|0;u=p+(q<<2)|0;if((j|0)==(l|0)){v=r;w=o}else{o=j;q=r;do{if((q|0)==0){x=0}else{c[q>>2]=c[o>>2];x=q}q=x+4|0;o=o+4|0;}while((o|0)!=(l|0));v=q;w=c[n>>2]|0}c[n>>2]=p;c[g>>2]=r;c[k>>2]=v;c[m>>2]=u;if((w|0)==0){y=v;t=12;break}is(w);y=c[k>>2]|0;t=12}else{y=l;t=12}}while(0);if((t|0)==12){if((y|0)==0){z=0}else{s=y;t=13}}if((t|0)==13){c[s>>2]=h;z=c[k>>2]|0}c[k>>2]=z+4;i=b;return}z=a|0;k=a+8|0;h=c[k>>2]|0;s=a+4|0;y=h-(c[s>>2]|0)>>2;l=a+12|0;w=c[l>>2]|0;v=a|0;m=w-(c[v>>2]|0)|0;if(!(y>>>0<m>>2>>>0)){g=m>>1;m=(g|0)==0?1:g;g=e+12|0;c[e+16>>2]=a+12;a=gs(m<<2)|0;x=a;j=e|0;c[j>>2]=x;f=x+(y<<2)|0;o=e+8|0;c[o>>2]=f;A=e+4|0;c[A>>2]=f;c[g>>2]=x+(m<<2);B=gs(4096)|0;do{if((y|0)==(m|0)){C=f-a|0;if(f>>>0>x>>>0){D=x+(y+(((C>>2)+1|0)/-2|0)<<2)|0;c[o>>2]=D;c[A>>2]=D;E=D;break}D=C>>1;C=(D|0)==0?1:D;D=gs(C<<2)|0;F=D+(C>>>2<<2)|0;c[j>>2]=D;c[A>>2]=F;c[o>>2]=F;c[g>>2]=D+(C<<2);if((a|0)==0){E=F;break}is(a);E=F}else{E=f}}while(0);if((E|0)==0){G=0}else{c[E>>2]=B;G=c[o>>2]|0}c[o>>2]=G+4;G=c[k>>2]|0;while(1){if((G|0)==(c[s>>2]|0)){break}B=G-4|0;Hf(e,B);G=B}e=c[v>>2]|0;c[v>>2]=c[j>>2];c[j>>2]=e;c[s>>2]=c[A>>2];c[A>>2]=G;A=c[k>>2]|0;c[k>>2]=c[o>>2];c[o>>2]=A;j=c[l>>2]|0;c[l>>2]=c[g>>2];c[g>>2]=j;if((A|0)!=(G|0)){c[o>>2]=A+(~((A-4+(-G|0)|0)>>>2)<<2)}if((e|0)==0){i=b;return}is(e);i=b;return}e=gs(4096)|0;if((w|0)!=(h|0)){if((h|0)==0){H=0}else{c[h>>2]=e;H=c[k>>2]|0}c[k>>2]=H+4;i=b;return}c[d>>2]=e;Gf(z,d);d=c[s>>2]|0;z=c[d>>2]|0;e=d+4|0;c[s>>2]=e;H=c[k>>2]|0;do{if((H|0)==(c[l>>2]|0)){h=c[v>>2]|0;if(e>>>0>h>>>0){w=e;G=((w-h>>2)+1|0)/-2|0;A=H-w|0;zs(d+(G+1<<2)|0,e|0,A|0)|0;w=d+((A>>2)+1+G<<2)|0;c[k>>2]=w;c[s>>2]=(c[s>>2]|0)+(G<<2);I=w;t=31;break}w=H-h>>1;G=(w|0)==0?1:w;w=gs(G<<2)|0;A=w+(G>>>2<<2)|0;o=w+(G<<2)|0;if((e|0)==(H|0)){J=A;K=h}else{h=e;G=A;do{if((G|0)==0){L=0}else{c[G>>2]=c[h>>2];L=G}G=L+4|0;h=h+4|0;}while((h|0)!=(H|0));J=G;K=c[v>>2]|0}c[v>>2]=w;c[s>>2]=A;c[k>>2]=J;c[l>>2]=o;if((K|0)==0){M=J;t=30;break}is(K);M=c[k>>2]|0;t=30}else{M=H;t=30}}while(0);if((t|0)==30){if((M|0)==0){N=0}else{I=M;t=31}}if((t|0)==31){c[I>>2]=z;N=c[k>>2]|0}c[k>>2]=N+4;i=b;return}function Gf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;zs(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=gs(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;if((e|0)==(h|0)){o=l;p=e}else{k=e;q=l;do{if((q|0)==0){r=0}else{c[q>>2]=c[k>>2];r=q}q=r+4|0;k=k+4|0;}while((k|0)!=(h|0));o=q;p=c[f>>2]|0}c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((p|0)==0){n=l;break}is(p);n=c[d>>2]|0}else{n=e}}while(0);c[n-4>>2]=c[b>>2];c[d>>2]=(c[d>>2]|0)-4;return}function Hf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;zs(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=gs(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;if((e|0)==(h|0)){o=l;p=e}else{k=e;q=l;do{if((q|0)==0){r=0}else{c[q>>2]=c[k>>2];r=q}q=r+4|0;k=k+4|0;}while((k|0)!=(h|0));o=q;p=c[f>>2]|0}c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((p|0)==0){n=l;break}is(p);n=c[d>>2]|0}else{n=e}}while(0);c[n-4>>2]=c[b>>2];c[d>>2]=(c[d>>2]|0)-4;return}function If(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;e=c[b+4>>2]|0;a=c[b+12>>2]|0;f=e-1+a|0;g=f-((f|0)%(a|0)|0)|0;f=a-1+((e|0)/2|0)|0;e=f-((f|0)%(a|0)|0)|0;a=c[b+8>>2]|0;b=ds(16,ga(a,g)|0)|0;f=ga((a+1|0)/2|0,e)|0;a=ds(16,f)|0;h=ds(16,f)|0;do{if((b|0)!=0){if((a|0)==0|(h|0)==0){as(b);break}c[d+4>>2]=b;c[d+78844>>2]=0;c[d+36>>2]=g;c[d+8>>2]=a;c[d+78848>>2]=0;c[d+12>>2]=h;c[d+78852>>2]=0;c[d+40>>2]=e;i=1;return i|0}}while(0);if((a|0)!=0){as(a)}if((h|0)==0){i=0;return i|0}as(h);i=0;return i|0}function Jf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;d=0;while(1){a=c[b+4+(d<<2)>>2]|0;if((a|0)==0){e=3;break}as(a);a=d+1|0;if((a|0)<3){d=a}else{e=5;break}}if((e|0)==3){bc(896,11768,101,13136)}else if((e|0)==5){return}}function Kf(b){b=b|0;c[b+44>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;hh(b+69300|0);pg(b+74336|0);c[b+78868>>2]=0;c[b+78872>>2]=0;c[b+78876>>2]=0;ys(b+78712|0,0,120)|0;c[b>>2]=-1;c[b+100>>2]=0;c[b+78708>>2]=0;c[b+4>>2]=0;c[b+56>>2]=0;c[b+8>>2]=0;c[b+60>>2]=0;c[b+12>>2]=0;c[b+64>>2]=0;c[b+24>>2]=0;c[b+20>>2]=0;c[b+78880>>2]=0;ys(b+78832|0,0,24)|0;a[b+78864|0]=2;c[b+84>>2]=-1;c[b+88>>2]=-1;c[b+92>>2]=0;a[b+96|0]=0;ys(b+78884|0,0,20)|0;Jh(b+78904|0);Nh(b+78928|0);return}function Lf(a,b,d,e,f,g,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0;n=i;i=i+40|0;o=n|0;p=(f|0)==0;if(p&g){bc(10664,11768,171,13040);return 0}q=c[7506]|0;c[7506]=q+1;c[a>>2]=q;c[a+100>>2]=2147483647;c[a+78708>>2]=h;c[a+16>>2]=e;c[a+20>>2]=b;c[a+24>>2]=d;q=a+28|0;c[q>>2]=b;r=a+32|0;c[r>>2]=d;c[a+78840>>2]=l;l=a+78832|0;c[l>>2]=j;c[l+4>>2]=k;if((e|0)==2){s=1;t=6}else if((e|0)==0|(e|0)==3){u=1;v=1}else if((e|0)==1){s=2;t=6}else{bc(9200,11768,200,13040);return 0}if((t|0)==6){u=2;v=s}if((e|0)==1){c[o>>2]=2;s=(b+1|0)/2|0;c[q>>2]=s;w=s}else if((e|0)==2){c[o>>2]=3;w=b}else{bc(7e3,11768,216,13040);return 0}e=(d+1|0)/2|0;c[r>>2]=e;c[o+4>>2]=b;c[o+8>>2]=d;c[o+12>>2]=16;if(p){x=0;y=0;z=0;A=0}else{x=c[f+476>>2]|0;y=c[f+468>>2]|0;z=c[f+464>>2]|0;A=c[f+472>>2]|0}p=y+z|0;r=b-(ga(p,u)|0)|0;c[a+68>>2]=r;b=x+A|0;s=d-(ga(b,v)|0)|0;c[a+72>>2]=s;c[a+76>>2]=w-p;c[a+80>>2]=e-b;b=ga(z,u)|0;c[o+16>>2]=b;c[o+20>>2]=ga(y,u)|0;u=ga(A,v)|0;c[o+24>>2]=u;c[o+28>>2]=ga(x,v)|0;c[o+32>>2]=r;c[o+36>>2]=s;s=c[h+200>>2]|0;r=a+78856|0;if(m){m=h+192|0;v=r;x=c[m>>2]|0;y=c[m+4>>2]|0;c[v>>2]=x;c[v+4>>2]=y;B=x}else{x=r;r=21984;y=c[r>>2]|0;v=c[r+4>>2]|0;c[x>>2]=y;c[x+4>>2]=v;B=y}y=(Dc[B&15](h,o,a,s)|0)==0;c[a+56>>2]=(c[a+4>>2]|0)+((ga(c[a+36>>2]|0,u)|0)+b);b=(ga(c[a+40>>2]|0,A)|0)+z|0;c[a+60>>2]=(c[a+8>>2]|0)+b;c[a+64>>2]=(c[a+12>>2]|0)+b;if(y){C=7;D=40;E=0;i=n;return C|0}do{if(g){y=c[f+4992>>2]|0;b=c[f+4996>>2]|0;z=c[f+4988>>2]|0;A=ga(b,y)|0;u=a+78776|0;s=a+78772|0;o=c[s>>2]|0;if((A|0)==(c[u>>2]|0)){F=o}else{as(o);o=$r(A)|0;c[s>>2]=o;c[u>>2]=A;c[a+78784>>2]=y;c[a+78788>>2]=b;F=o}c[a+78780>>2]=z;z=f+4932|0;o=c[z>>2]|0;b=f+4940|0;y=c[b>>2]|0;A=f+4916|0;u=c[A>>2]|0;s=ga(y,o)|0;h=a+78736|0;B=a+78732|0;v=c[B>>2]|0;if((s|0)==(c[h>>2]|0)){G=v}else{as(v|0);v=$r(s*3|0)|0;c[B>>2]=v;c[h>>2]=s;c[a+78744>>2]=o;c[a+78748>>2]=y;G=v}c[a+78740>>2]=u;u=(c[A>>2]|0)-2|0;A=c[z>>2]<<u;z=c[b>>2]<<u;u=ga(z,A)|0;b=a+78756|0;v=a+78752|0;y=c[v>>2]|0;if((u|0)==(c[b>>2]|0)){H=y}else{as(y|0);y=$r(u*12|0)|0;c[v>>2]=y;c[b>>2]=u;c[a+78764>>2]=A;c[a+78768>>2]=z;H=y}c[a+78760>>2]=2;y=c[f+4968>>2]|0;z=c[f+4972>>2]|0;A=c[f+4980>>2]|0;u=ga(z,y)|0;b=a+78796|0;v=a+78792|0;o=c[v>>2]|0;if((u|0)==(c[b>>2]|0)){I=o}else{as(o);o=$r(u)|0;c[v>>2]=o;c[b>>2]=u;c[a+78804>>2]=y;c[a+78808>>2]=z;I=o}c[a+78800>>2]=A;A=((c[f+452>>2]|0)+3|0)/4|0;o=((c[f+456>>2]|0)+3|0)/4|0;z=ga(o,A)|0;y=a+78816|0;u=a+78812|0;b=c[u>>2]|0;if((z|0)==(c[y>>2]|0)){J=b}else{as(b);b=$r(z)|0;c[u>>2]=b;c[y>>2]=z;c[a+78824>>2]=A;c[a+78828>>2]=o;J=b}c[a+78820>>2]=2;b=(F|0)!=0&(G|0)!=0&(H|0)!=0&(I|0)!=0&(J|0)!=0;o=a+78716|0;A=c[o>>2]|0;if((A|0)==(c[f+4952>>2]|0)){if(b){break}else{C=7}D=40;E=0;i=n;return C|0}z=a+78880|0;y=c[z>>2]|0;if((y|0)==0){L=A}else{A=y-76+72|0;u=A;v=c[A>>2]|0;if((v|0)!=0){A=y+(v*76|0)|0;do{A=A-76|0;Sh(A);}while((A|0)!=(y|0))}js(u);L=c[o>>2]|0}y=c[f+4936>>2]|0;A=c[f+4944>>2]|0;v=c[f+4920>>2]|0;s=ga(A,y)|0;h=a+78712|0;B=c[h>>2]|0;if((s|0)==(L|0)){M=B;N=L}else{as(B);B=$r(s*24|0)|0;c[h>>2]=B;c[o>>2]=s;c[a+78724>>2]=y;c[a+78728>>2]=A;M=B;N=s}c[a+78720>>2]=v;v=b&(M|0)!=0;s=Pa(N|0,76)|0;B=K;A=qb(s|0,4)|0;s=hs(B|K?-1:A)|0;c[s>>2]=N;A=s+4|0;if((N|0)!=0){s=A+(N*76|0)|0;B=A;do{Rh(B);B=B+76|0;}while((B|0)!=(s|0))}c[z>>2]=A;if(v){break}else{C=7}D=40;E=0;i=n;return C|0}}while(0);C=0;D=40;E=0;i=n;return C|0}function Mf(a){a=a|0;var b=0,d=0,e=0,f=0;Nf(a);b=c[a+78880>>2]|0;if((b|0)!=0){d=b-76+72|0;e=d;f=c[d>>2]|0;if((f|0)!=0){d=b+(f*76|0)|0;do{d=d-76|0;Sh(d);}while((d|0)!=(b|0))}js(e)}Oh(a+78928|0);Kh(a+78904|0);as(c[a+78812>>2]|0);as(c[a+78792>>2]|0);as(c[a+78772>>2]|0);as(c[a+78752>>2]|0);as(c[a+78732>>2]|0);as(c[a+78712>>2]|0);qg(a+74336|0);ih(a+69300|0);e=c[a+44>>2]|0;if((e|0)==0){return}b=a+48|0;a=c[b>>2]|0;if((a|0)!=(e|0)){c[b>>2]=a+(~((a-4+(-e|0)|0)>>>2)<<2)}is(e);return}function Nf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;b=a+4|0;if((c[b>>2]|0)!=0){d=c[a+78708>>2]|0;if((d|0)==0){e=0}else{e=c[d+200>>2]|0}Hc[c[a+78860>>2]&31](d,a,e);c[b>>2]=0;c[a+56>>2]=0;c[a+8>>2]=0;c[a+60>>2]=0;c[a+12>>2]=0;c[a+64>>2]=0}b=a+48|0;e=c[b>>2]|0;d=a+44|0;a=c[d>>2]|0;if((e|0)==(a|0)){return}else{f=0;g=a;h=e}while(1){e=c[g+(f<<2)>>2]|0;if((e|0)==0){i=h;j=g}else{a=c[e+1488>>2]|0;if((a|0)!=0){k=e+1492|0;l=c[k>>2]|0;if((l|0)!=(a|0)){c[k>>2]=l+(~((l-4+(-a|0)|0)>>>2)<<2)}is(a)}a=c[e+776>>2]|0;if((a|0)!=0){l=e+780|0;k=c[l>>2]|0;if((k|0)!=(a|0)){c[l>>2]=k+(~((k-4+(-a|0)|0)>>>2)<<2)}is(a)}is(e);i=c[b>>2]|0;j=c[d>>2]|0}e=f+1|0;m=j;if(e>>>0<i-m>>2>>>0){f=e;g=j;h=i}else{break}}if((i|0)==(j|0)){return}c[b>>2]=i+(~((i-4+(-m|0)|0)>>>2)<<2);return}function Of(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if((b|0)>-1){ys(c[a+4>>2]|0,b&255|0,ga(c[a+24>>2]|0,c[a+36>>2]|0)|0)|0}if((d|0)>-1){ys(c[a+8>>2]|0,d&255|0,ga(c[a+32>>2]|0,c[a+40>>2]|0)|0)|0}if(!((e|0)>-1)){return}ys(c[a+12>>2]|0,e&255|0,ga(c[a+32>>2]|0,c[a+40>>2]|0)|0)|0;return}function Pf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=c[b+24>>2]|0;g=(f|0)<(e|0)?f:e;if((d&1|0)!=0){bc(4488,11768,412,13024)}if((g&1|0)!=0){bc(2952,11768,413,13024)}e=b+36|0;f=c[e>>2]|0;h=a+36|0;i=c[h>>2]|0;a:do{if((f|0)==(i|0)){j=ga(f,d)|0;xs((c[a+4>>2]|0)+j|0,(c[b+4>>2]|0)+j|0,ga(f,g-d|0)|0)|0}else{if((g|0)<=(d|0)){break}j=a+4|0;k=b+4|0;l=b+20|0;m=d;n=i;o=f;while(1){p=(c[j>>2]|0)+(ga(n,m)|0)|0;q=(c[k>>2]|0)+(ga(o,m)|0)|0;xs(p|0,q|0,c[l>>2]|0)|0;q=m+1|0;if((q|0)>=(g|0)){break a}m=q;n=c[h>>2]|0;o=c[e>>2]|0}}}while(0);e=d>>1;d=g>>1;if((c[b+16>>2]|0)==0){return}g=b+40|0;h=c[g>>2]|0;f=a+40|0;i=c[f>>2]|0;if((h|0)==(i|0)){o=ga(h,e)|0;n=d-e|0;xs((c[a+8>>2]|0)+o|0,(c[b+8>>2]|0)+o|0,ga(h,n)|0)|0;o=c[f>>2]|0;m=ga(o,e)|0;xs((c[a+12>>2]|0)+m|0,(c[b+12>>2]|0)+m|0,ga(o,n)|0)|0;return}if((e|0)>=(d|0)){return}n=a+8|0;o=b+8|0;m=b+28|0;l=a+12|0;a=b+12|0;b=e;e=i;i=h;while(1){h=(c[n>>2]|0)+(ga(e,b)|0)|0;k=(c[o>>2]|0)+(ga(i,b)|0)|0;xs(h|0,k|0,c[m>>2]|0)|0;k=(c[l>>2]|0)+(ga(c[f>>2]|0,b)|0)|0;h=(c[a>>2]|0)+(ga(c[g>>2]|0,b)|0)|0;xs(k|0,h|0,c[m>>2]|0)|0;h=b+1|0;if((h|0)>=(d|0)){break}b=h;e=c[f>>2]|0;i=c[g>>2]|0}return}function Qf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a+4|0;e=b+4|0;f=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=f;f=a+56|0;e=b+56|0;d=c[f>>2]|0;c[f>>2]=c[e>>2];c[e>>2]=d;d=a+78844|0;e=b+78844|0;f=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=f;f=a+8|0;e=b+8|0;d=c[f>>2]|0;c[f>>2]=c[e>>2];c[e>>2]=d;d=a+60|0;e=b+60|0;f=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=f;f=a+78848|0;e=b+78848|0;d=c[f>>2]|0;c[f>>2]=c[e>>2];c[e>>2]=d;d=a+12|0;e=b+12|0;f=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=f;f=a+64|0;e=b+64|0;d=c[f>>2]|0;c[f>>2]=c[e>>2];c[e>>2]=d;d=a+78852|0;e=b+78852|0;f=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=f;f=a+36|0;e=b+36|0;d=c[f>>2]|0;c[f>>2]=c[e>>2];c[e>>2]=d;d=a+40|0;e=b+40|0;f=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=f;f=a+78856|0;a=c[f>>2]|0;e=c[f+4>>2]|0;d=b+78856|0;b=c[d+4>>2]|0;c[f>>2]=c[d>>2];c[f+4>>2]=b;c[d>>2]=a;c[d+4>>2]=e;return}function Rf(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+78904|0;Lh(d);e=a+78884|0;c[e>>2]=(c[e>>2]|0)+b;e=a+78900|0;c[e>>2]=(c[e>>2]|0)+b;Mh(d);return}function Sf(a){a=a|0;var b=0,d=0;b=a+78904|0;Lh(b);d=a+78884|0;c[d>>2]=(c[d>>2]|0)-1;d=a+78888|0;c[d>>2]=(c[d>>2]|0)+1;Mh(b);return}function Tf(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+78904|0;Lh(b);d=a+78888|0;e=c[d>>2]|0;c[d>>2]=e-1;d=a+78896|0;f=(c[d>>2]|0)+1|0;c[d>>2]=f;if((e|0)<=0){bc(1896,11768,502,13008)}if((f|0)!=(c[a+78900>>2]|0)){Mh(b);return}Ph(a+78928|0,b);Mh(b);return}function Uf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;Vf(a,b,(ga(c[a+74236>>2]|0,e)|0)+d|0,f);return}function Vf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=(c[a+78880>>2]|0)+(d*76|0)|0;if((Vh(f)|0)>=(e|0)){return}d=a+78904|0;Lh(d);g=a+78888|0;c[g>>2]=(c[g>>2]|0)-1;h=a+78892|0;c[h>>2]=(c[h>>2]|0)+1;Mh(d);if((b|0)==0){bc(1296,11768,524,12984)}a=b+4|0;c[a>>2]=2;Th(f,e);c[a>>2]=1;Lh(d);c[h>>2]=(c[h>>2]|0)-1;c[g>>2]=(c[g>>2]|0)+1;Mh(d);return}function Wf(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+78904|0;Lh(b);d=a+78896|0;e=a+78900|0;if((c[d>>2]|0)==(c[e>>2]|0)){Mh(b);return}f=a+78928|0;do{Qh(f,b);}while((c[d>>2]|0)!=(c[e>>2]|0));Mh(b);return}function Xf(a){a=a|0;var b=0,d=0;b=c[a+78732>>2]|0;if((b|0)!=0){ys(b|0,0,(c[a+78736>>2]|0)*3|0|0)|0}b=c[a+78792>>2]|0;if((b|0)!=0){ys(b|0,0,c[a+78796>>2]|0)|0}b=c[a+78712>>2]|0;if((b|0)!=0){ys(b|0,0,(c[a+78716>>2]|0)*24|0|0)|0}b=c[a+78812>>2]|0;if((b|0)!=0){ys(b|0,0,c[a+78816>>2]|0)|0}b=a+78716|0;if((c[b>>2]|0)<=0){return}d=c[a+78880>>2]|0;a=0;do{c[d+(a*76|0)>>2]=0;a=a+1|0;}while((a|0)<(c[b>>2]|0));return}function Yf(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;i=d>>2;d=e>>2;e=f>>2;f=g>>2;g=c[a+78764>>2]|0;if((f|0)<=0){return}j=a+78752|0;a=h|0;if((e|0)>0){k=0}else{return}do{h=(ga(k+d|0,g)|0)+i|0;l=0;do{m=(c[j>>2]|0)+((h+l|0)*12|0)|0;b[m>>1]=b[a>>1]|0;b[m+2>>1]=b[a+2>>1]|0;b[m+4>>1]=b[a+4>>1]|0;b[m+6>>1]=b[a+6>>1]|0;b[m+8>>1]=b[a+8>>1]|0;b[m+10>>1]=b[a+10>>1]|0;l=l+1|0;}while((l|0)<(e|0));k=k+1|0;}while((k|0)<(f|0));return}function Zf(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;if((g|f|0)<0){h=0;return h|0}if((c[a+69752>>2]|0)<=(f|0)){h=0;return h|0}if((c[a+69756>>2]|0)<=(g|0)){h=0;return h|0}i=c[a+74280>>2]|0;j=c[a+74268>>2]|0;k=(ga(g>>i,j)|0)+(f>>i)|0;l=c[a+74600>>2]|0;if((c[l+(k<<2)>>2]|0)>(c[l+((ga(e>>i,j)|0)+(d>>i)<<2)>>2]|0)){h=0;return h|0}i=c[a+74220>>2]|0;j=d>>i;d=e>>i;e=f>>i;f=g>>i;i=c[a+78724>>2]|0;g=(ga(i,d)|0)+j|0;l=c[a+78712>>2]|0;if((b[l+(g*24|0)>>1]|0)!=(b[l+(((ga(i,f)|0)+e|0)*24|0)>>1]|0)){h=0;return h|0}i=c[a+74236>>2]|0;l=(ga(i,d)|0)+j|0;j=c[a+74588>>2]|0;h=(c[j+(l<<2)>>2]|0)==(c[j+((ga(i,f)|0)+e<<2)>>2]|0);return h|0}function _f(a,e,f,g,h,i,j,k,l,m,n){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0;do{if((e|0)>(m|0)){o=3}else{if(!((f|0)<=(n|0)&(g+e|0)>(m|0)&(g+f|0)>(n|0))){o=3;break}if((j<<1|0)!=(g|0)){break}if(!((k<<1|0)==(g|0)&(l|0)==1)){break}if((k+f|0)>(n|0)){break}if((j+e|0)<=(m|0)){break}return 0}}while(0);do{if((o|0)==3){if((n|m|0)<0){return 0}if((c[a+69752>>2]|0)<=(m|0)){return 0}if((c[a+69756>>2]|0)<=(n|0)){return 0}e=c[a+74280>>2]|0;j=c[a+74268>>2]|0;f=(ga(n>>e,j)|0)+(m>>e)|0;k=c[a+74600>>2]|0;if((c[k+(f<<2)>>2]|0)>(c[k+((ga(i>>e,j)|0)+(h>>e)<<2)>>2]|0)){return 0}e=c[a+74220>>2]|0;j=h>>e;k=i>>e;f=m>>e;l=n>>e;e=c[a+78724>>2]|0;g=(ga(e,k)|0)+j|0;p=c[a+78712>>2]|0;if((b[p+(g*24|0)>>1]|0)!=(b[p+(((ga(e,l)|0)+f|0)*24|0)>>1]|0)){return 0}e=c[a+74236>>2]|0;p=(ga(e,k)|0)+j|0;j=c[a+74588>>2]|0;if((c[j+(p<<2)>>2]|0)==(c[j+((ga(e,l)|0)+f<<2)>>2]|0)){break}return 0}}while(0);i=c[a+78740>>2]|0;h=(ga(n>>i,c[a+78744>>2]|0)|0)+(m>>i)|0;i=(c[a+78732>>2]|0)+(h*3|0)|0;return((d[i]|d[i+1|0]<<8)<<16>>16&768)!=0|0}function $f(b,f,g,h,j,k){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;l=i;i=i+136|0;m=l|0;n=m+64|0;o=c[b+4+(j<<2)>>2]|0;p=(j|0)==0;j=c[(p?b+36|0:b+40|0)>>2]|0;q=p&1^1;r=c[b+74280>>2]|0;s=r+((p^1)<<31>>31)|0;t=f<<q;u=g<<q;v=h<<1;w=c[b+74220>>2]|0;x=c[b+74236>>2]|0;y=(t|0)!=0;z=(u|0)==0;A=z^1;B=y&A;D=t+(p?h:v)|0;E=c[b+69752>>2]|0;F=(D|0)<(E|0)&A;G=t>>w;H=u>>w;I=t-1>>w;J=D>>w;D=u-1>>w;w=c[b+78724>>2]|0;K=ga(w,H)|0;L=c[b+78712>>2]|0;M=e[L+((K+G|0)*24|0)>>1]|0;if(y){N=e[L+((K+I|0)*24|0)>>1]|0}else{N=-1}if(z){O=-1}else{O=e[L+(((ga(w,D)|0)+G|0)*24|0)>>1]|0}if(F){P=e[L+(((ga(w,D)|0)+J|0)*24|0)>>1]|0}else{P=-1}if(B){Q=e[L+(((ga(w,D)|0)+I|0)*24|0)>>1]|0}else{Q=-1}w=ga(H,x)|0;H=c[b+74588>>2]|0;L=c[H+(w+G<<2)>>2]|0;if(y){R=c[H+(w+I<<2)>>2]|0}else{R=-1}if(z){S=-1}else{S=c[H+((ga(D,x)|0)+G<<2)>>2]|0}if(B){T=c[H+((ga(D,x)|0)+I<<2)>>2]|0}else{T=-1}if(F){U=c[H+((ga(D,x)|0)+J<<2)>>2]|0}else{U=-1}J=(N|0)==(M|0)&(R|0)==(L|0)&y;y=(O|0)==(M|0)&(S|0)==(L|0)&A;A=(Q|0)==(M|0)&(T|0)==(L|0)&B;B=(P|0)==(M|0)&(U|0)==(L|0)&F;F=b+74268|0;L=(ga(u>>r,c[F>>2]|0)|0)+(t>>r)|0;r=b+74600|0;U=c[(c[r>>2]|0)+(L<<2)>>2]|0;L=(c[b+69756>>2]|0)-u|0;if(p){V=E-t|0;W=(L|0)>(v|0)?v:L}else{p=(L+1|0)/2|0;V=(1-t+E|0)/2|0;W=(p|0)>(v|0)?v:p}p=(V|0)>(v|0)?v:V;V=-v|0;E=h<<2|1;ys(m+(64-v)|0,0,E|0)|0;t=W-1|0;do{if((W|0)>0){L=f-1|0;u=L>>s;M=b+74348|0;P=L<<q;T=b+78740|0;Q=b+78744|0;S=b+78732|0;if(!J){X=0;Y=0;break}O=64-W|0;R=0;N=0;x=t;D=0;while(1){H=m+(O+(D<<2))|0;I=x+g|0;G=(ga(c[F>>2]|0,I>>s)|0)+u|0;z=(c[(c[r>>2]|0)+(G<<2)>>2]|0)<(U|0);if((a[M]|0)==0){if(z){Z=26}else{_=N;$=R}}else{G=c[T>>2]|0;w=(ga(I<<q>>G,c[Q>>2]|0)|0)+(P>>G)|0;G=(c[S>>2]|0)+(w*3|0)|0;if(((d[G]|d[G+1|0]<<8)<<16>>16&768)==0&z){Z=26}else{_=N;$=R}}if((Z|0)==26){Z=0;z=o+((ga(I,j)|0)+L)|0;if((R|0)==0){aa=a[z]|0}else{aa=N}G=H;C=16843009;a[G]=C;C=C>>8;a[G+1|0]=C;C=C>>8;a[G+2|0]=C;C=C>>8;a[G+3|0]=C;a[k+~x|0]=a[z]|0;a[k+(1-x-1)|0]=a[o+((ga(I-1|0,j)|0)+L)|0]|0;a[k+(2-x-1)|0]=a[o+((ga(I-2|0,j)|0)+L)|0]|0;a[k+(3-x-1)|0]=a[o+((ga(I-3|0,j)|0)+L)|0]|0;_=aa;$=R+4|0}I=x-4|0;if((I|0)>-1){R=$;N=_;x=I;D=D+1|0}else{X=$;Y=_;break}}}else{X=0;Y=0}}while(0);do{if(A){_=f-1|0;$=g-1|0;aa=(ga(c[F>>2]|0,$>>s)|0)+(_>>s)|0;Z=(c[(c[r>>2]|0)+(aa<<2)>>2]|0)<(U|0);if((a[b+74348|0]|0)==0){if(!Z){ba=Y;ca=X;break}}else{aa=c[b+78740>>2]|0;t=(ga($<<q>>aa,c[b+78744>>2]|0)|0)+(_<<q>>aa)|0;aa=(c[b+78732>>2]|0)+(t*3|0)|0;if(!(((d[aa]|d[aa+1|0]<<8)<<16>>16&768)==0&Z)){ba=Y;ca=X;break}}Z=o+((ga(j,$)|0)+_)|0;if((X|0)==0){da=a[Z]|0}else{da=Y}a[k]=a[Z]|0;a[n]=1;ba=da;ca=X+1|0}else{ba=Y;ca=X}}while(0);if((p|0)>0){X=g-1|0;g=X>>s;Y=b+74348|0;da=ga(j,X)|0;j=X<<q;X=b+78740|0;n=b+78744|0;A=b+78732|0;Z=ca;_=ba;$=0;aa=0;while(1){t=m+((aa<<2)+65)|0;do{if(($|0)<(h|0)?y:B){W=$+f|0;J=(ga(c[F>>2]|0,g)|0)+(W>>s)|0;D=(c[(c[r>>2]|0)+(J<<2)>>2]|0)<(U|0);if((a[Y]|0)==0){if(!D){ea=_;fa=Z;break}}else{J=c[X>>2]|0;x=(ga(j>>J,c[n>>2]|0)|0)+(W<<q>>J)|0;J=(c[A>>2]|0)+(x*3|0)|0;if(!(((d[J]|d[J+1|0]<<8)<<16>>16&768)==0&D)){ea=_;fa=Z;break}}D=W+da|0;W=o+D|0;if((Z|0)==0){ha=a[W]|0}else{ha=_}J=t;C=16843009;a[J]=C;C=C>>8;a[J+1|0]=C;C=C>>8;a[J+2|0]=C;C=C>>8;a[J+3|0]=C;J=$|1;a[k+J|0]=a[W]|0;a[k+(J+1)|0]=a[o+(D+1)|0]|0;a[k+($|3)|0]=a[o+(D+2)|0]|0;a[k+(($|3)+1)|0]=a[o+(D+3)|0]|0;ea=ha;fa=Z+4|0}else{ea=_;fa=Z}}while(0);t=$+4|0;if((t|0)<(p|0)){Z=fa;_=ea;$=t;aa=aa+1|0}else{ia=fa;ja=ea;break}}}else{ia=ca;ja=ba}if((ia|0)==(E|0)){ka=129;la=0;i=l;return}if((ia|0)==0){ys(k+V|0,1<<(c[b+69780>>2]|0)-1&255|0,E|0)|0;ka=129;la=0;i=l;return}E=h*-2|0;if((a[m+(E+64)|0]|0)==0){a[k+E|0]=ja}ja=E|1;if((ja|0)>(v|0)){ka=129;la=0;i=l;return}else{ma=ja}while(1){if((a[m+(ma+64)|0]|0)==0){a[k+ma|0]=a[k+(ma-1)|0]|0}if((ma|0)<(v|0)){ma=ma+1|0}else{break}}ka=129;la=0;i=l;return}function ag(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+136|0;j=h|0;if((g|0)==1|(f|0)==4){i=h;return}k=g-26|0;l=(k|0)<0?26-g|0:k;k=g-10|0;m=(k|0)<0?10-g|0:k;k=(l|0)<(m|0)?l:m;do{if((f|0)==16){if((k|0)>1){n=0;break}i=h;return}else if((f|0)==8){if((k|0)>7){n=0;break}i=h;return}else if((f|0)==32){if((k|0)<=0){i=h;return}if((a[b+74173|0]|0)==0){n=0;break}m=d[e]|0;l=(d[e+64|0]|0)+m-(d[e+32|0]<<1)|0;g=1<<(c[b+69780>>2]|0)-5;if((((l|0)<0?-l|0:l)|0)>=(g|0)){n=0;break}l=(d[e-64|0]|0)+m-(d[e-32|0]<<1)|0;n=(((l|0)<0?-l|0:l)|0)<(g|0)}else{bc(9920,11656,289,13384)}}while(0);b=f*-2|0;a[j+(b+64)|0]=a[e+b|0]|0;b=f<<1;a[j+(b+64)|0]=a[e+b|0]|0;do{if(n){k=a[e]|0;a[j+64|0]=k;g=k&255;k=(d[e-64|0]|0)-g|0;l=(d[e+64|0]|0)-g|0;m=1;do{a[j+(64-m)|0]=(((ga(k,m)|0)+32|0)>>>6)+g;a[j+(m+64)|0]=(((ga(l,m)|0)+32|0)>>>6)+g;m=m+1|0;}while((m|0)<64)}else{m=b-1|0;g=1-b|0;if((g|0)>(m|0)){break}l=g;k=a[e+g|0]|0;while(1){g=l+1|0;o=a[e+g|0]|0;a[j+(l+64)|0]=((o&255)+2+((k&255)<<1)+(d[e+(l-1)|0]|0)|0)>>>2;if((l|0)<(m|0)){l=g;k=o}else{break}}}}while(0);xs(e+(-b|0)|0,j+(64-b)|0,f<<2|1)|0;i=h;return}function bg(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;l=i;i=i+136|0;m=l|0;n=(j|0)==0;o=c[(n?b+36|0:b+40|0)>>2]|0;p=c[b+4+(j<<2)>>2]|0;j=(ga(o,f)|0)+e|0;e=c[64+(g<<2)>>2]|0;f=(h|0)<0;if((g|0)>17){if(!f){xs(m+64|0,k|0,h+1|0)|0}b=g-11|0;do{if(b>>>0<15>>>0){q=c[25328+(b<<2)>>2]|0;r=(ga(e,h)|0)>>5;if((r|0)<-1){s=r}else{break}do{a[m+(s+64)|0]=a[k+(-((ga(s,q)|0)+128>>8)|0)|0]|0;s=s+1|0;}while((s|0)<0)}else{if((h<<1|0)<=(h|0)){break}xs(m+(h+65)|0,k+(h+1)|0,h)|0}}while(0);s=(h|0)>0;if(s){b=0;while(1){q=b+1|0;r=ga(q,e)|0;t=r>>5;u=r&31;r=t+65|0;v=(ga(b,o)|0)+j|0;w=32-u|0;if((u|0)==0){x=0;do{a[p+(v+x)|0]=a[m+(r+x)|0]|0;x=x+1|0;}while((x|0)<(h|0))}else{x=0;do{r=x+t|0;y=ga(d[m+(r+65)|0]|0,w)|0;a[p+(v+x)|0]=(y+16+(ga(d[m+(r+66)|0]|0,u)|0)|0)>>>5;x=x+1|0;}while((x|0)<(h|0))}if((q|0)<(h|0)){b=q}else{break}}}if(!((g|0)==26&n&(h|0)<32&s)){z=129;A=0;i=l;return}s=k+1|0;b=0;do{x=((d[k+~b|0]|0)-(d[k]|0)>>1)+(d[s]|0)|0;if((x|0)<0){B=0}else{B=(x|0)>255?-1:x&255}a[p+((ga(b,o)|0)+j)|0]=B;b=b+1|0;}while((b|0)<(h|0));z=129;A=0;i=l;return}if(!f){f=0;while(1){a[m+(f+64)|0]=a[k+(-f|0)|0]|0;if((f|0)<(h|0)){f=f+1|0}else{break}}}f=g-11|0;do{if(f>>>0<15>>>0){b=c[25328+(f<<2)>>2]|0;B=(ga(e,h)|0)>>5;if((B|0)<-1){C=B}else{break}do{a[m+(C+64)|0]=a[k+((ga(C,b)|0)+128>>8)|0]|0;C=C+1|0;}while((C|0)<0)}else{b=h<<1;if((b|0)>(h|0)){D=h}else{break}while(1){q=D+1|0;a[m+(D+65)|0]=a[k+~D|0]|0;if((q|0)<(b|0)){D=q}else{break}}}}while(0);D=(h|0)>0;if(D){C=0;do{f=C+65|0;b=(ga(C,o)|0)+j|0;q=0;while(1){B=q+1|0;s=ga(B,e)|0;x=s>>5;u=s&31;if((u|0)==0){a[p+(b+q)|0]=a[m+(f+x)|0]|0}else{s=x+C|0;x=ga(d[m+(s+65)|0]|0,32-u|0)|0;a[p+(b+q)|0]=(x+16+(ga(d[m+(s+66)|0]|0,u)|0)|0)>>>5}if((B|0)<(h|0)){q=B}else{break}}C=C+1|0;}while((C|0)<(h|0))}if(!((g|0)==10&n&(h|0)<32&D)){z=129;A=0;i=l;return}D=k-1|0;n=0;while(1){g=n+1|0;C=((d[k+g|0]|0)-(d[k]|0)>>1)+(d[D]|0)|0;if((C|0)<0){E=0}else{E=(C|0)>255?-1:C&255}a[p+(n+j)|0]=E;if((g|0)<(h|0)){n=g}else{break}}z=129;A=0;i=l;return}function cg(b,e,f,g,h,i){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=(h|0)==0;k=c[(j?b+36|0:b+40|0)>>2]|0;l=c[b+4+(h<<2)>>2]|0;h=(ga(k,f)|0)+e|0;b=l+h|0;m=(g|0)>1;if(m){n=g;o=0;while(1){p=n>>1;if((p|0)>1){n=p;o=o+1|0}else{break}}q=o+2|0}else{q=1}o=(g|0)>0;if(o){n=0;p=0;while(1){r=p+1|0;s=(d[i+r|0]|0)+n+(d[i+~p|0]|0)|0;if((r|0)<(g|0)){n=s;p=r}else{t=s;break}}}else{t=0}p=t+g>>q;if(!(j&(g|0)<32)){if(!o){return}o=p&255;j=0;do{ys(l+(h+(ga(k,j)|0))|0,o|0,g|0)|0;j=j+1|0;}while((j|0)<(g|0));return}a[b]=((p<<1)+2+(d[i-1|0]|0)+(d[i+1|0]|0)|0)>>>2;if(!m){return}b=(p*3|0)+2|0;j=1;while(1){o=j+1|0;a[l+(j+h)|0]=(b+(d[i+o|0]|0)|0)>>>2;if((o|0)<(g|0)){j=o}else{break}}if(!m){return}j=(p*3|0)+2|0;b=1;do{a[l+((ga(b,k)|0)+h)|0]=(j+(d[i+~b|0]|0)|0)>>>2;b=b+1|0;}while((b|0)<(g|0));if(!m){return}m=p&255;p=(ga(k,f+1|0)|0)+e+1|0;e=g-1|0;f=1;b=0;while(1){ys(l+(p+(ga(k,b)|0))|0,m|0,e|0)|0;i=f+1|0;if((i|0)<(g|0)){f=i;b=b+1|0}else{break}}return}function dg(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;k=i;i=i+136|0;l=k|0;m=l+64|0;$f(b,e,f,h,j,m);n=(j|0)==0;if(n){ag(b,m,h,g)}if((g|0)==1){cg(b,e,f,h,j,m);o=129;p=0;i=k;return}else if((g|0)==0){q=c[(n?b+36|0:b+40|0)>>2]|0;n=c[b+4+(j<<2)>>2]|0;if((h|0)>1){r=h;s=0;while(1){t=r>>1;if((t|0)>1){r=t;s=s+1|0}else{break}}u=s+2|0}else{u=1}if((h|0)<=0){o=129;p=0;i=k;return}s=h-1|0;r=d[l+(h+65)|0]|0;t=d[l+(63-h)|0]|0;v=0;while(1){w=s-v|0;x=v+1|0;y=ga(v+f|0,q)|0;z=d[l+(63-v)|0]|0;A=ga(t,x)|0;B=y+e|0;y=0;while(1){C=ga(z,s-y|0)|0;D=y+1|0;E=ga(r,D)|0;a[n+(B+y)|0]=C+h+E+(ga(d[l+(y+65)|0]|0,w)|0)+A>>u;if((D|0)<(h|0)){y=D}else{break}}if((x|0)<(h|0)){v=x}else{break}}o=129;p=0;i=k;return}else{bg(b,e,f,g,h,j,m);o=129;p=0;i=k;return}}function eg(a){a=a|0;c[a+8>>2]=1732584193;c[a+12>>2]=-271733879;c[a+16>>2]=-1732584194;c[a+20>>2]=271733878;c[a>>2]=0;c[a+4>>2]=0;return}function fg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=a|0;f=c[e>>2]|0;g=f+d&536870911;c[e>>2]=g;e=a+4|0;h=c[e>>2]|0;if(g>>>0<f>>>0){g=h+1|0;c[e>>2]=g;i=g}else{i=h}c[a+4>>2]=i+(d>>>29);i=f&63;do{if((i|0)==0){j=b;k=d}else{f=64-i|0;h=a+24+i|0;if(!(f>>>0>d>>>0)){xs(h|0,b|0,f)|0;gg(a,a+24|0,64)|0;j=b+f|0;k=d-f|0;break}xs(h|0,b|0,d)|0;return}}while(0);if(k>>>0>63>>>0){l=gg(a,j,k&-64)|0;m=k&63}else{l=j;m=k}xs(a+24|0,l|0,m)|0;return}



function dm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==64){t=8}else if((s|0)==8){t=16}else{t=10}s=k|0;pm(m,g,s,l);g=n;ys(g|0,0,12)|0;Nj(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Fc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){L=(C&255)>>>1}else{L=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(L|0)){if(F){M=(C&255)>>>1;N=(C&255)>>>1}else{C=c[y>>2]|0;M=C;N=C}Nj(n,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Nj(n,O,0);if((a[g]&1)==0){P=v}else{P=c[w>>2]|0}c[o>>2]=P+N;Q=P}else{Q=l}C=B+12|0;F=c[C>>2]|0;R=B+16|0;if((F|0)==(c[R>>2]|0)){S=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{S=c[F>>2]|0}if((lm(S,t,Q,o,r,z,m,k,q,s)|0)!=0){I=Q;J=H;break}F=c[C>>2]|0;if((F|0)==(c[R>>2]|0)){Fc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=Q;u=B;continue}else{c[C>>2]=F+4;l=Q;u=B;continue}}u=a[m]|0;if((u&1)==0){T=(u&255)>>>1}else{T=c[m+4>>2]|0}do{if((T|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}Q=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=Q}}while(0);r=fr(I,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=K;Co(m,k,c[q>>2]|0,h);do{if((B|0)==0){U=1;V=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){W=Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[q>>2]|0}if(!((W|0)==-1)){U=0;V=B;break}c[x>>2]=0;U=1;V=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){X=Fc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{X=c[x>>2]|0}if((X|0)==-1){c[e>>2]=0;E=67;break}if(!U){break}Y=b|0;c[Y>>2]=V;Z=160;_=0;Lj(n);Lj(m);$=104;aa=0;i=d;return}}while(0);do{if((E|0)==67){if(U){break}Y=b|0;c[Y>>2]=V;Z=160;_=0;Lj(n);Lj(m);$=104;aa=0;i=d;return}}while(0);c[h>>2]=c[h>>2]|2;Y=b|0;c[Y>>2]=V;Z=160;_=0;Lj(n);Lj(m);$=104;aa=0;i=d;return}function em(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];fm(a,0,j,k,f,g,h);i=b;return}function fm(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;qm(n,h,v,l,m);h=o;ys(h|0,0,12)|0;Nj(o,10,0);if((a[h]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=Fc[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[h]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}Nj(o,O<<1,0);if((a[h]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Nj(o,Q,0);if((a[h]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=Fc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((rm(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){Fc[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);g[k>>2]=+er(L,c[p>>2]|0,j);Co(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=Fc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=Fc[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(n);ba=128;ca=0;i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(n);ba=128;ca=0;i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(n);ba=128;ca=0;i=d;return}function gm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];hm(a,0,j,k,f,g,h);i=b;return}function hm(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;qm(n,g,v,l,m);g=o;ys(g|0,0,12)|0;Nj(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=Fc[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[g]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}Nj(o,O<<1,0);if((a[g]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Nj(o,Q,0);if((a[g]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=Fc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((rm(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){Fc[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);h[k>>3]=+dr(L,c[p>>2]|0,j);Co(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=Fc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=Fc[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(n);ba=128;ca=0;i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(n);ba=128;ca=0;i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(n);ba=128;ca=0;i=d;return}function im(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];jm(a,0,j,k,f,g,h);i=b;return}function jm(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;qm(n,g,v,l,m);g=o;ys(g|0,0,12)|0;Nj(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=Fc[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[g]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}Nj(o,O<<1,0);if((a[g]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Nj(o,Q,0);if((a[g]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=Fc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((rm(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){Fc[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);h[k>>3]=+cr(L,c[p>>2]|0,j);Co(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=Fc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=Fc[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(n);ba=128;ca=0;i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(n);ba=128;ca=0;i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(n);ba=128;ca=0;i=d;return}function km(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;d=i;i=i+344|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+120|0;n=d+136|0;o=d+144|0;p=d+160|0;q=d+168|0;r=d+328|0;s=d+336|0;ys(m|0,0,12)|0;dk(n,g);g=n|0;n=c[g>>2]|0;if(!((c[7382]|0)==-1)){c[k>>2]=29528;c[k+4>>2]=16;c[k+8>>2]=0;Gj(29528,k,116)}k=(c[7383]|0)-1|0;t=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-t>>2>>>0>k>>>0){u=c[t+(k<<2)>>2]|0;if((u|0)==0){break}v=l|0;Dc[c[(c[u>>2]|0)+48>>2]&15](u,21944,21970,v)|0;mj(c[g>>2]|0)|0;u=o;ys(u|0,0,12)|0;Nj(o,10,0);if((a[u]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;A=e|0;B=f|0;C=o|0;D=o+4|0;E=x;F=c[A>>2]|0;a:while(1){do{if((F|0)==0){G=1;H=0}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if(!((J|0)==-1)){G=0;H=F;break}c[A>>2]=0;G=1;H=0}}while(0);I=c[B>>2]|0;do{if((I|0)==0){K=26}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){M=Fc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{M=c[L>>2]|0}if((M|0)==-1){c[B>>2]=0;K=26;break}else{if(G){break}else{N=E;break a}}}}while(0);if((K|0)==26){K=0;if(G){N=E;break}}I=a[u]|0;L=(I&1)==0;if(L){O=(I&255)>>>1}else{O=c[D>>2]|0}if(((c[p>>2]|0)-E|0)==(O|0)){if(L){P=(I&255)>>>1;Q=(I&255)>>>1}else{I=c[D>>2]|0;P=I;Q=I}Nj(o,P<<1,0);if((a[u]&1)==0){R=10}else{R=(c[C>>2]&-2)-1|0}Nj(o,R,0);if((a[u]&1)==0){S=y}else{S=c[z>>2]|0}c[p>>2]=S+Q;T=S}else{T=E}I=H+12|0;L=c[I>>2]|0;U=H+16|0;if((L|0)==(c[U>>2]|0)){V=Fc[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{V=c[L>>2]|0}if((lm(V,16,T,p,s,0,m,w,r,v)|0)!=0){N=T;break}L=c[I>>2]|0;if((L|0)==(c[U>>2]|0)){Fc[c[(c[H>>2]|0)+40>>2]&255](H)|0;E=T;F=H;continue}else{c[I>>2]=L+4;E=T;F=H;continue}}a[N+3|0]=0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);F=Pl(N,c[6998]|0,7792,(E=i,i=i+8|0,c[E>>2]=j,E)|0)|0;i=E;if((F|0)!=1){c[h>>2]=4}F=c[A>>2]|0;do{if((F|0)==0){W=1;X=0}else{E=c[F+12>>2]|0;if((E|0)==(c[F+16>>2]|0)){Y=Fc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{Y=c[E>>2]|0}if(!((Y|0)==-1)){W=0;X=F;break}c[A>>2]=0;W=1;X=0}}while(0);A=c[B>>2]|0;do{if((A|0)==0){K=74}else{F=c[A+12>>2]|0;if((F|0)==(c[A+16>>2]|0)){Z=Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{Z=c[F>>2]|0}if((Z|0)==-1){c[B>>2]=0;K=74;break}if(!W){break}_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(m);ba=104;ca=0;i=d;return}}while(0);do{if((K|0)==74){if(W){break}_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(m);ba=104;ca=0;i=d;return}}while(0);c[h>>2]=c[h>>2]|2;_=b|0;c[_>>2]=X;$=160;aa=0;Lj(o);Lj(m);ba=104;ca=0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function lm(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;m=c[f>>2]|0;n=(m|0)==(e|0);do{if(n){o=(c[l+96>>2]|0)==(b|0);if(!o){if((c[l+100>>2]|0)!=(b|0)){break}}c[f>>2]=e+1;a[e]=o?43:45;c[g>>2]=0;p=0;return p|0}}while(0);o=a[i]|0;if((o&1)==0){q=(o&255)>>>1}else{q=c[i+4>>2]|0}if((q|0)!=0&(b|0)==(h|0)){h=c[k>>2]|0;if((h-j|0)>=160){p=0;return p|0}j=c[g>>2]|0;c[k>>2]=h+4;c[h>>2]=j;c[g>>2]=0;p=0;return p|0}j=l+104|0;h=l;while(1){k=h+4|0;if((c[h>>2]|0)==(b|0)){r=h;break}if((k|0)==(j|0)){r=j;break}else{h=k}}h=r-l|0;l=h>>2;if((h|0)>92){p=-1;return p|0}do{if((d|0)==8|(d|0)==10){if((l|0)<(d|0)){break}else{p=-1}return p|0}else if((d|0)==16){if((h|0)<88){break}if(n){p=-1;return p|0}if((m-e|0)>=3){p=-1;return p|0}if((a[m-1|0]|0)!=48){p=-1;return p|0}c[g>>2]=0;r=a[21944+l|0]|0;c[f>>2]=m+1;a[m]=r;p=0;return p|0}}while(0);e=a[21944+l|0]|0;c[f>>2]=m+1;a[m]=e;c[g>>2]=(c[g>>2]|0)+1;p=0;return p|0}function mm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;dk(k,d);d=k|0;k=c[d>>2]|0;if(!((c[7384]|0)==-1)){c[j>>2]=29536;c[j+4>>2]=16;c[j+8>>2]=0;Gj(29536,j,116)}j=(c[7385]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}Dc[c[(c[m>>2]|0)+32>>2]&15](m,21944,21970,e)|0;m=c[d>>2]|0;if(!((c[7288]|0)==-1)){c[h>>2]=29152;c[h+4>>2]=16;c[h+8>>2]=0;Gj(29152,h,116)}n=(c[7289]|0)-1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;a[f]=Fc[c[(c[p>>2]|0)+16>>2]&255](q)|0;Bc[c[(c[p>>2]|0)+20>>2]&127](b,q);mj(c[d>>2]|0)|0;i=g;return}}while(0);n=mc(4)|0;Gr(n);Db(n|0,20328,156)}}while(0);g=mc(4)|0;Gr(g);Db(g|0,20328,156)}function nm(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+40|0;j=h|0;k=h+16|0;l=h+32|0;dk(l,d);d=l|0;l=c[d>>2]|0;if(!((c[7384]|0)==-1)){c[k>>2]=29536;c[k+4>>2]=16;c[k+8>>2]=0;Gj(29536,k,116)}k=(c[7385]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}Dc[c[(c[n>>2]|0)+32>>2]&15](n,21944,21976,e)|0;n=c[d>>2]|0;if(!((c[7288]|0)==-1)){c[j>>2]=29152;c[j+4>>2]=16;c[j+8>>2]=0;Gj(29152,j,116)}o=(c[7289]|0)-1|0;p=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-p>>2>>>0>o>>>0){q=c[p+(o<<2)>>2]|0;if((q|0)==0){break}r=q;s=q;a[f]=Fc[c[(c[s>>2]|0)+12>>2]&255](r)|0;a[g]=Fc[c[(c[s>>2]|0)+16>>2]&255](r)|0;Bc[c[(c[q>>2]|0)+20>>2]&127](b,r);mj(c[d>>2]|0)|0;i=h;return}}while(0);o=mc(4)|0;Gr(o);Db(o|0,20328,156)}}while(0);h=mc(4)|0;Gr(h);Db(h|0,20328,156)}function om(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if(b<<24>>24==h<<24>>24){if((a[d]|0)==0){o=-1;return o|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[j]|0;if((h&1)==0){p=(h&255)>>>1}else{p=c[j+4>>2]|0}if((p|0)==0){o=0;return o|0}p=c[l>>2]|0;if((p-k|0)>=160){o=0;return o|0}h=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=h;o=0;return o|0}do{if(b<<24>>24==i<<24>>24){h=a[j]|0;if((h&1)==0){q=(h&255)>>>1}else{q=c[j+4>>2]|0}if((q|0)==0){break}if((a[d]|0)==0){o=-1;return o|0}h=c[l>>2]|0;if((h-k|0)>=160){o=0;return o|0}p=c[m>>2]|0;c[l>>2]=h+4;c[h>>2]=p;c[m>>2]=0;o=0;return o|0}}while(0);q=n+32|0;i=n;while(1){p=i+1|0;if((a[i]|0)==b<<24>>24){r=i;break}if((p|0)==(q|0)){r=q;break}else{i=p}}i=r-n|0;if((i|0)>31){o=-1;return o|0}n=a[21944+i|0]|0;if((i|0)==25|(i|0)==24){r=c[g>>2]|0;do{if((r|0)!=(f|0)){if((a[r-1|0]&95|0)==(a[e]&127|0)){break}else{o=-1}return o|0}}while(0);c[g>>2]=r+1;a[r]=n;o=0;return o|0}else if((i|0)==22|(i|0)==23){a[e]=80;r=c[g>>2]|0;c[g>>2]=r+1;a[r]=n;o=0;return o|0}else{r=a[e]|0;do{if((n&95|0)==(r<<24>>24|0)){a[e]=r|-128;if((a[d]|0)==0){break}a[d]=0;f=a[j]|0;if((f&1)==0){s=(f&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)==0){break}f=c[l>>2]|0;if((f-k|0)>=160){break}q=c[m>>2]|0;c[l>>2]=f+4;c[f>>2]=q}}while(0);l=c[g>>2]|0;c[g>>2]=l+1;a[l]=n;if((i|0)>21){o=0;return o|0}c[m>>2]=(c[m>>2]|0)+1;o=0;return o|0}return 0}function pm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+40|0;g=f|0;h=f+16|0;j=f+32|0;dk(j,b);b=j|0;j=c[b>>2]|0;if(!((c[7382]|0)==-1)){c[h>>2]=29528;c[h+4>>2]=16;c[h+8>>2]=0;Gj(29528,h,116)}h=(c[7383]|0)-1|0;k=c[j+8>>2]|0;do{if((c[j+12>>2]|0)-k>>2>>>0>h>>>0){l=c[k+(h<<2)>>2]|0;if((l|0)==0){break}Dc[c[(c[l>>2]|0)+48>>2]&15](l,21944,21970,d)|0;l=c[b>>2]|0;if(!((c[7286]|0)==-1)){c[g>>2]=29144;c[g+4>>2]=16;c[g+8>>2]=0;Gj(29144,g,116)}m=(c[7287]|0)-1|0;n=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-n>>2>>>0>m>>>0){o=c[n+(m<<2)>>2]|0;if((o|0)==0){break}p=o;c[e>>2]=Fc[c[(c[o>>2]|0)+16>>2]&255](p)|0;Bc[c[(c[o>>2]|0)+20>>2]&127](a,p);mj(c[b>>2]|0)|0;i=f;return}}while(0);m=mc(4)|0;Gr(m);Db(m|0,20328,156)}}while(0);f=mc(4)|0;Gr(f);Db(f|0,20328,156)}function qm(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;dk(k,b);b=k|0;k=c[b>>2]|0;if(!((c[7382]|0)==-1)){c[j>>2]=29528;c[j+4>>2]=16;c[j+8>>2]=0;Gj(29528,j,116)}j=(c[7383]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}Dc[c[(c[m>>2]|0)+48>>2]&15](m,21944,21976,d)|0;m=c[b>>2]|0;if(!((c[7286]|0)==-1)){c[h>>2]=29144;c[h+4>>2]=16;c[h+8>>2]=0;Gj(29144,h,116)}n=(c[7287]|0)-1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;r=p;c[e>>2]=Fc[c[(c[r>>2]|0)+12>>2]&255](q)|0;c[f>>2]=Fc[c[(c[r>>2]|0)+16>>2]&255](q)|0;Bc[c[(c[p>>2]|0)+20>>2]&127](a,q);mj(c[b>>2]|0)|0;i=g;return}}while(0);n=mc(4)|0;Gr(n);Db(n|0,20328,156)}}while(0);g=mc(4)|0;Gr(g);Db(g|0,20328,156)}function rm(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if((b|0)==(h|0)){if((a[d]|0)==0){o=-1;return o|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[j]|0;if((h&1)==0){p=(h&255)>>>1}else{p=c[j+4>>2]|0}if((p|0)==0){o=0;return o|0}p=c[l>>2]|0;if((p-k|0)>=160){o=0;return o|0}h=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=h;o=0;return o|0}do{if((b|0)==(i|0)){h=a[j]|0;if((h&1)==0){q=(h&255)>>>1}else{q=c[j+4>>2]|0}if((q|0)==0){break}if((a[d]|0)==0){o=-1;return o|0}h=c[l>>2]|0;if((h-k|0)>=160){o=0;return o|0}p=c[m>>2]|0;c[l>>2]=h+4;c[h>>2]=p;c[m>>2]=0;o=0;return o|0}}while(0);q=n+128|0;i=n;while(1){p=i+4|0;if((c[i>>2]|0)==(b|0)){r=i;break}if((p|0)==(q|0)){r=q;break}else{i=p}}i=r-n|0;n=i>>2;if((i|0)>124){o=-1;return o|0}r=a[21944+n|0]|0;do{if((n|0)==22|(n|0)==23){a[e]=80}else if((n|0)==25|(n|0)==24){q=c[g>>2]|0;do{if((q|0)!=(f|0)){if((a[q-1|0]&95|0)==(a[e]&127|0)){break}else{o=-1}return o|0}}while(0);c[g>>2]=q+1;a[q]=r;o=0;return o|0}else{b=a[e]|0;if((r&95|0)!=(b<<24>>24|0)){break}a[e]=b|-128;if((a[d]|0)==0){break}a[d]=0;b=a[j]|0;if((b&1)==0){s=(b&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)==0){break}b=c[l>>2]|0;if((b-k|0)>=160){break}p=c[m>>2]|0;c[l>>2]=b+4;c[b>>2]=p}}while(0);l=c[g>>2]|0;c[g>>2]=l+1;a[l]=r;if((i|0)>84){o=0;return o|0}c[m>>2]=(c[m>>2]|0)+1;o=0;return o|0}function sm(a){a=a|0;kj(a|0);is(a);return}function tm(a){a=a|0;kj(a|0);return}function um(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];Nc[o&63](b,d,l,f,g,h&1);i=j;return}dk(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7288]|0)==-1)){c[k>>2]=29152;c[k+4>>2]=16;c[k+8>>2]=0;Gj(29152,k,116)}k=(c[7289]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;mj(c[f>>2]|0)|0;o=c[l>>2]|0;if(h){Bc[c[o+24>>2]&127](n,d)}else{Bc[c[o+28>>2]&127](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+1|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+1|0;r=l}l=e|0;s=n+4|0;t=p;u=o;while(1){if((u&1)==0){v=(u&255)>>>1;w=q}else{v=c[s>>2]|0;w=c[r>>2]|0}if((t|0)==(w+v|0)){break}o=a[t]|0;x=c[l>>2]|0;do{if((x|0)!=0){y=x+24|0;z=c[y>>2]|0;if((z|0)!=(c[x+28>>2]|0)){c[y>>2]=z+1;a[z]=o;break}if(!((Oc[c[(c[x>>2]|0)+52>>2]&31](x,o&255)|0)==-1)){break}c[l>>2]=0}}while(0);t=t+1|0;u=a[d]|0}c[b>>2]=c[l>>2];Lj(n);i=j;return}}while(0);j=mc(4)|0;Gr(j);Db(j|0,20328,156)}function vm(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[14336]|0;a[q+1|0]=a[14337]|0;a[q+2|0]=a[14338]|0;a[q+3|0]=a[14339]|0;a[q+4|0]=a[14340]|0;a[q+5|0]=a[14341]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=k|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);t=wm(u,12,c[6998]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;dk(o,f);xm(u,w,q,x,m,n,o);mj(c[o>>2]|0)|0;c[p>>2]=c[e>>2];ym(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function wm(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=h;c[j>>2]=f;c[j+4>>2]=0;j=_b(d|0)|0;d=$b(a|0,b|0,e|0,h|0)|0;if((j|0)==0){i=g;return d|0}_b(j|0)|0;i=g;return d|0}function xm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[7384]|0)==-1)){c[m>>2]=29536;c[m+4>>2]=16;c[m+8>>2]=0;Gj(29536,m,116)}m=(c[7385]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=mc(4)|0;r=q;Gr(r);Db(q|0,20328,156)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=mc(4)|0;r=q;Gr(r);Db(q|0,20328,156)}q=j;r=c[o>>2]|0;if(!((c[7288]|0)==-1)){c[l>>2]=29152;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29152,l,116)}l=(c[7289]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=mc(4)|0;t=s;Gr(t);Db(s|0,20328,156)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=mc(4)|0;t=s;Gr(t);Db(s|0,20328,156)}s=r;Bc[c[(c[r>>2]|0)+20>>2]&127](n,s);t=n;l=a[t]|0;if((l&1)==0){u=(l&255)>>>1}else{u=c[n+4>>2]|0}do{if((u|0)==0){Dc[c[(c[j>>2]|0)+32>>2]&15](q,b,e,f)|0;c[h>>2]=f+(e-b)}else{c[h>>2]=f;l=a[b]|0;if((l<<24>>24|0)==45|(l<<24>>24|0)==43){o=Oc[c[(c[j>>2]|0)+28>>2]&31](q,l)|0;l=c[h>>2]|0;c[h>>2]=l+1;a[l]=o;v=b+1|0}else{v=b}do{if((e-v|0)>1){if((a[v]|0)!=48){w=v;break}o=v+1|0;l=a[o]|0;if(!((l<<24>>24|0)==120|(l<<24>>24|0)==88)){w=v;break}l=j;m=Oc[c[(c[l>>2]|0)+28>>2]&31](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;m=Oc[c[(c[l>>2]|0)+28>>2]&31](q,a[o]|0)|0;o=c[h>>2]|0;c[h>>2]=o+1;a[o]=m;w=v+2|0}else{w=v}}while(0);do{if((w|0)!=(e|0)){m=e-1|0;if(m>>>0>w>>>0){x=w;y=m}else{break}do{m=a[x]|0;a[x]=a[y]|0;a[y]=m;x=x+1|0;y=y-1|0;}while(x>>>0<y>>>0)}}while(0);m=Fc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(w>>>0<e>>>0){o=n+1|0;l=j;p=n+4|0;z=n+8|0;A=0;B=0;C=w;while(1){D=(a[t]&1)==0;do{if((a[(D?o:c[z>>2]|0)+B|0]|0)==0){E=B;F=A}else{if((A|0)!=(a[(D?o:c[z>>2]|0)+B|0]|0)){E=B;F=A;break}G=c[h>>2]|0;c[h>>2]=G+1;a[G]=m;G=a[t]|0;if((G&1)==0){H=(G&255)>>>1}else{H=c[p>>2]|0}E=(B>>>0<(H-1|0)>>>0)+B|0;F=0}}while(0);D=Oc[c[(c[l>>2]|0)+28>>2]&31](q,a[C]|0)|0;G=c[h>>2]|0;c[h>>2]=G+1;a[G]=D;D=C+1|0;if(D>>>0<e>>>0){A=F+1|0;B=E;C=D}else{break}}}C=f+(w-b)|0;B=c[h>>2]|0;if((C|0)==(B|0)){break}A=B-1|0;if(A>>>0>C>>>0){I=C;J=A}else{break}do{A=a[I]|0;a[I]=a[J]|0;a[J]=A;I=I+1|0;J=J-1|0;}while(I>>>0<J>>>0)}}while(0);if((d|0)==(e|0)){K=c[h>>2]|0;c[g>>2]=K;Lj(n);i=k;return}else{K=f+(d-b)|0;c[g>>2]=K;Lj(n);i=k;return}}function ym(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;do{if((h|0)>0){if((Gc[c[(c[d>>2]|0)+48>>2]&63](d,e,h)|0)==(h|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){Kj(l,q,j);if((a[l]&1)==0){r=l+1|0}else{r=c[l+8>>2]|0}if((Gc[c[(c[d>>2]|0)+48>>2]&63](d,r,q)|0)==(q|0)){Lj(l);break}c[m>>2]=0;c[b>>2]=0;Lj(l);i=k;return}}while(0);l=n-o|0;do{if((l|0)>0){if((Gc[c[(c[d>>2]|0)+48>>2]&63](d,f,l)|0)==(l|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function zm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=l|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);t=wm(u,22,c[6998]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else if((j|0)==32){w=r}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;dk(p,f);xm(u,w,r,x,n,o,p);mj(c[p>>2]|0)|0;c[q>>2]=c[e>>2];ym(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Am(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[14336]|0;a[q+1|0]=a[14337]|0;a[q+2|0]=a[14338]|0;a[q+3|0]=a[14339]|0;a[q+4|0]=a[14340]|0;a[q+5|0]=a[14341]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=k|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);v=wm(u,12,c[6998]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;dk(o,f);xm(u,w,q,x,m,n,o);mj(c[o>>2]|0)|0;c[p>>2]=c[e>>2];ym(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Bm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=l|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);t=wm(u,23,c[6998]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;dk(p,f);xm(u,w,r,x,n,o,p);mj(c[p>>2]|0)|0;c[q>>2]=c[e>>2];ym(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Cm(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=c[6998]|0;if(y){w=wm(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=wm(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[46464]|0)==0;if(y){do{if(w){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=Dm(m,c[6998]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);w=Dm(m,c[6998]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}ns();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else if((B|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=$r(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}ns();H=0;I=0;J=c[m>>2]|0}}while(0);dk(q,f);Em(J,F,A,H,o,p,q);mj(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];ym(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){as(I)}if((D|0)==0){i=d;return}as(D);i=d;return}function Dm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=_b(b|0)|0;b=nc(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}_b(h|0)|0;i=f;return b|0}function Em(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[7384]|0)==-1)){c[m>>2]=29536;c[m+4>>2]=16;c[m+8>>2]=0;Gj(29536,m,116)}m=(c[7385]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=mc(4)|0;r=q;Gr(r);Db(q|0,20328,156)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=mc(4)|0;r=q;Gr(r);Db(q|0,20328,156)}q=j;r=c[o>>2]|0;if(!((c[7288]|0)==-1)){c[l>>2]=29152;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29152,l,116)}l=(c[7289]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=mc(4)|0;t=s;Gr(t);Db(s|0,20328,156)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=mc(4)|0;t=s;Gr(t);Db(s|0,20328,156)}s=r;Bc[c[(c[r>>2]|0)+20>>2]&127](n,s);c[h>>2]=f;t=a[b]|0;if((t<<24>>24|0)==45|(t<<24>>24|0)==43){l=Oc[c[(c[j>>2]|0)+28>>2]&31](q,t)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t]=l;u=b+1|0}else{u=b}l=e;a:do{if((l-u|0)>1){if((a[u]|0)!=48){v=21;break}t=u+1|0;o=a[t]|0;if(!((o<<24>>24|0)==120|(o<<24>>24|0)==88)){v=21;break}o=j;m=Oc[c[(c[o>>2]|0)+28>>2]&31](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;m=u+2|0;p=Oc[c[(c[o>>2]|0)+28>>2]&31](q,a[t]|0)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t]=p;if(m>>>0<e>>>0){w=m}else{x=m;y=m;break}while(1){p=a[w]|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);t=w+1|0;if((Sa(p<<24>>24|0,c[6998]|0)|0)==0){x=m;y=w;break a}if(t>>>0<e>>>0){w=t}else{x=m;y=t;break}}}else{v=21}}while(0);b:do{if((v|0)==21){if(u>>>0<e>>>0){z=u}else{x=u;y=u;break}while(1){w=a[z]|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);p=z+1|0;if((gb(w<<24>>24|0,c[6998]|0)|0)==0){x=u;y=z;break b}if(p>>>0<e>>>0){z=p}else{x=u;y=p;break}}}}while(0);u=n;z=a[u]|0;if((z&1)==0){A=(z&255)>>>1}else{A=c[n+4>>2]|0}do{if((A|0)==0){Dc[c[(c[j>>2]|0)+32>>2]&15](q,x,y,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(y-x)}else{do{if((x|0)!=(y|0)){z=y-1|0;if(z>>>0>x>>>0){B=x;C=z}else{break}do{z=a[B]|0;a[B]=a[C]|0;a[C]=z;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);w=Fc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<y>>>0){z=n+1|0;v=n+4|0;p=n+8|0;m=j;t=0;o=0;D=x;while(1){E=(a[u]&1)==0;do{if((a[(E?z:c[p>>2]|0)+o|0]|0)>0){if((t|0)!=(a[(E?z:c[p>>2]|0)+o|0]|0)){F=o;G=t;break}H=c[h>>2]|0;c[h>>2]=H+1;a[H]=w;H=a[u]|0;if((H&1)==0){I=(H&255)>>>1}else{I=c[v>>2]|0}F=(o>>>0<(I-1|0)>>>0)+o|0;G=0}else{F=o;G=t}}while(0);E=Oc[c[(c[m>>2]|0)+28>>2]&31](q,a[D]|0)|0;H=c[h>>2]|0;c[h>>2]=H+1;a[H]=E;E=D+1|0;if(E>>>0<y>>>0){t=G+1|0;o=F;D=E}else{break}}}D=f+(x-b)|0;o=c[h>>2]|0;if((D|0)==(o|0)){break}t=o-1|0;if(t>>>0>D>>>0){J=D;K=t}else{break}do{t=a[J]|0;a[J]=a[K]|0;a[K]=t;J=J+1|0;K=K-1|0;}while(J>>>0<K>>>0)}}while(0);c:do{if(y>>>0<e>>>0){K=j;J=y;while(1){x=a[J]|0;if(x<<24>>24==46){break}F=Oc[c[(c[K>>2]|0)+28>>2]&31](q,x)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x]=F;F=J+1|0;if(F>>>0<e>>>0){J=F}else{L=F;break c}}K=Fc[c[(c[r>>2]|0)+12>>2]&255](s)|0;F=c[h>>2]|0;c[h>>2]=F+1;a[F]=K;L=J+1|0}else{L=y}}while(0);Dc[c[(c[j>>2]|0)+32>>2]&15](q,L,e,c[h>>2]|0)|0;q=(c[h>>2]|0)+(l-L)|0;c[h>>2]=q;if((d|0)==(e|0)){M=q;c[g>>2]=M;Lj(n);i=k;return}M=f+(d-b)|0;c[g>>2]=M;Lj(n);i=k;return}function Fm(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=c[6998]|0;if(y){w=wm(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=wm(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[46464]|0)==0;if(y){do{if(w){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=Dm(m,c[6998]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);w=Dm(m,c[6998]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}ns();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=$r(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}ns();H=0;I=0;J=c[m>>2]|0}}while(0);dk(q,f);Em(J,F,A,H,o,p,q);mj(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];ym(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){as(I)}if((D|0)==0){i=d;return}as(D);i=d;return}function Gm(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+104|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+88|0;n=d+96|0;o=d+16|0;a[o]=a[14344]|0;a[o+1|0]=a[14345]|0;a[o+2|0]=a[14346]|0;a[o+3|0]=a[14347]|0;a[o+4|0]=a[14348]|0;a[o+5|0]=a[14349]|0;p=k|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);q=wm(p,20,c[6998]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=12;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=12;break}s=k+2|0}else if((h|0)==32){s=o}else{t=12}}while(0);if((t|0)==12){s=p}t=l|0;dk(m,f);h=m|0;m=c[h>>2]|0;if(!((c[7384]|0)==-1)){c[j>>2]=29536;c[j+4>>2]=16;c[j+8>>2]=0;Gj(29536,j,116)}j=(c[7385]|0)-1|0;r=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-r>>2>>>0>j>>>0){u=c[r+(j<<2)>>2]|0;if((u|0)==0){break}mj(c[h>>2]|0)|0;Dc[c[(c[u>>2]|0)+32>>2]&15](u,p,o,t)|0;u=l+q|0;if((s|0)==(o|0)){v=u;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;ym(b,n,t,v,u,f,g);z=37;A=0;i=d;return}v=l+(s-k)|0;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;ym(b,n,t,v,u,f,g);z=37;A=0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function Hm(a){a=a|0;kj(a|0);is(a);return}function Im(a){a=a|0;kj(a|0);return}function Jm(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];Nc[o&63](b,d,l,f,g,h&1);i=j;return}dk(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7286]|0)==-1)){c[k>>2]=29144;c[k+4>>2]=16;c[k+8>>2]=0;Gj(29144,k,116)}k=(c[7287]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;mj(c[f>>2]|0)|0;o=c[l>>2]|0;if(h){Bc[c[o+24>>2]&127](n,d)}else{Bc[c[o+28>>2]&127](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+4|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+4|0;r=l}l=e|0;s=p;t=o;while(1){if((t&1)==0){u=(t&255)>>>1;v=q}else{u=c[q>>2]|0;v=c[r>>2]|0}if((s|0)==(v+(u<<2)|0)){break}o=c[s>>2]|0;w=c[l>>2]|0;do{if((w|0)!=0){x=w+24|0;y=c[x>>2]|0;if((y|0)==(c[w+28>>2]|0)){z=Oc[c[(c[w>>2]|0)+52>>2]&31](w,o)|0}else{c[x>>2]=y+4;c[y>>2]=o;z=o}if(!((z|0)==-1)){break}c[l>>2]=0}}while(0);s=s+4|0;t=a[d]|0}c[b>>2]=c[l>>2];Wj(n);i=j;return}}while(0);j=mc(4)|0;Gr(j);Db(j|0,20328,156)}function Km(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[14336]|0;a[q+1|0]=a[14337]|0;a[q+2|0]=a[14338]|0;a[q+3|0]=a[14339]|0;a[q+4|0]=a[14340]|0;a[q+5|0]=a[14341]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=k|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);v=wm(u,12,c[6998]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;dk(o,f);Lm(u,w,q,x,m,n,o);mj(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Mm(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Lm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[7382]|0)==-1)){c[m>>2]=29528;c[m+4>>2]=16;c[m+8>>2]=0;Gj(29528,m,116)}m=(c[7383]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=mc(4)|0;r=q;Gr(r);Db(q|0,20328,156)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=mc(4)|0;r=q;Gr(r);Db(q|0,20328,156)}q=j;r=c[o>>2]|0;if(!((c[7286]|0)==-1)){c[l>>2]=29144;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29144,l,116)}l=(c[7287]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=mc(4)|0;t=s;Gr(t);Db(s|0,20328,156)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=mc(4)|0;t=s;Gr(t);Db(s|0,20328,156)}s=r;Bc[c[(c[r>>2]|0)+20>>2]&127](n,s);t=n;l=a[t]|0;if((l&1)==0){u=(l&255)>>>1}else{u=c[n+4>>2]|0}do{if((u|0)==0){Dc[c[(c[j>>2]|0)+48>>2]&15](q,b,e,f)|0;l=f+(e-b<<2)|0;c[h>>2]=l;v=l}else{c[h>>2]=f;l=a[b]|0;if((l<<24>>24|0)==45|(l<<24>>24|0)==43){o=Oc[c[(c[j>>2]|0)+44>>2]&31](q,l)|0;l=c[h>>2]|0;c[h>>2]=l+4;c[l>>2]=o;w=b+1|0}else{w=b}do{if((e-w|0)>1){if((a[w]|0)!=48){x=w;break}o=w+1|0;l=a[o]|0;if(!((l<<24>>24|0)==120|(l<<24>>24|0)==88)){x=w;break}l=j;m=Oc[c[(c[l>>2]|0)+44>>2]&31](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;m=Oc[c[(c[l>>2]|0)+44>>2]&31](q,a[o]|0)|0;o=c[h>>2]|0;c[h>>2]=o+4;c[o>>2]=m;x=w+2|0}else{x=w}}while(0);do{if((x|0)!=(e|0)){m=e-1|0;if(m>>>0>x>>>0){y=x;z=m}else{break}do{m=a[y]|0;a[y]=a[z]|0;a[z]=m;y=y+1|0;z=z-1|0;}while(y>>>0<z>>>0)}}while(0);m=Fc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<e>>>0){o=n+1|0;l=j;p=n+4|0;A=n+8|0;B=0;C=0;D=x;while(1){E=(a[t]&1)==0;do{if((a[(E?o:c[A>>2]|0)+C|0]|0)==0){F=C;G=B}else{if((B|0)!=(a[(E?o:c[A>>2]|0)+C|0]|0)){F=C;G=B;break}H=c[h>>2]|0;c[h>>2]=H+4;c[H>>2]=m;H=a[t]|0;if((H&1)==0){I=(H&255)>>>1}else{I=c[p>>2]|0}F=(C>>>0<(I-1|0)>>>0)+C|0;G=0}}while(0);E=Oc[c[(c[l>>2]|0)+44>>2]&31](q,a[D]|0)|0;H=c[h>>2]|0;J=H+4|0;c[h>>2]=J;c[H>>2]=E;E=D+1|0;if(E>>>0<e>>>0){B=G+1|0;C=F;D=E}else{K=J;break}}}else{K=c[h>>2]|0}D=f+(x-b<<2)|0;if((D|0)==(K|0)){v=K;break}C=K-4|0;if(C>>>0>D>>>0){L=D;M=C}else{v=K;break}while(1){C=c[L>>2]|0;c[L>>2]=c[M>>2];c[M>>2]=C;C=L+4|0;D=M-4|0;if(C>>>0<D>>>0){L=C;M=D}else{v=K;break}}}}while(0);if((d|0)==(e|0)){N=v;c[g>>2]=N;Lj(n);i=k;return}N=f+(d-b<<2)|0;c[g>>2]=N;Lj(n);i=k;return}function Mm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;do{if((h|0)>0){if((Gc[c[(c[d>>2]|0)+48>>2]&63](d,e,g)|0)==(g|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){Vj(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}if((Gc[c[(c[d>>2]|0)+48>>2]&63](d,r,q)|0)==(q|0)){Wj(l);break}c[m>>2]=0;c[b>>2]=0;Wj(l);i=k;return}}while(0);l=n-o|0;o=l>>2;do{if((l|0)>0){if((Gc[c[(c[d>>2]|0)+48>>2]&63](d,f,o)|0)==(o|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function Nm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+200|0;o=d+208|0;p=d+216|0;q=d+224|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=l|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);t=wm(u,22,c[6998]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;dk(p,f);Lm(u,w,r,x,n,o,p);mj(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Mm(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Om(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[14336]|0;a[q+1|0]=a[14337]|0;a[q+2|0]=a[14338]|0;a[q+3|0]=a[14339]|0;a[q+4|0]=a[14340]|0;a[q+5|0]=a[14341]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);t=wm(u,12,c[6998]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;dk(o,f);Lm(u,w,q,x,m,n,o);mj(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Mm(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Pm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+240|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+208|0;o=d+216|0;p=d+224|0;q=d+232|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=l|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);t=wm(u,23,c[6998]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else if((j|0)==32){w=r}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;dk(p,f);Lm(u,w,r,x,n,o,p);mj(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Mm(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Qm(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=c[6998]|0;if(y){w=wm(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=wm(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[46464]|0)==0;if(y){do{if(w){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=Dm(m,c[6998]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);w=Dm(m,c[6998]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}ns();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else if((B|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=$r(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}ns();H=B;I=B;J=c[m>>2]|0}}while(0);dk(q,f);Rm(J,F,A,H,o,p,q);mj(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Mm(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){as(I)}if((D|0)==0){i=d;return}as(D);i=d;return}function Rm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[7382]|0)==-1)){c[m>>2]=29528;c[m+4>>2]=16;c[m+8>>2]=0;Gj(29528,m,116)}m=(c[7383]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=mc(4)|0;r=q;Gr(r);Db(q|0,20328,156)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=mc(4)|0;r=q;Gr(r);Db(q|0,20328,156)}q=j;r=c[o>>2]|0;if(!((c[7286]|0)==-1)){c[l>>2]=29144;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29144,l,116)}l=(c[7287]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=mc(4)|0;t=s;Gr(t);Db(s|0,20328,156)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=mc(4)|0;t=s;Gr(t);Db(s|0,20328,156)}s=r;Bc[c[(c[r>>2]|0)+20>>2]&127](n,s);c[h>>2]=f;t=a[b]|0;if((t<<24>>24|0)==45|(t<<24>>24|0)==43){l=Oc[c[(c[j>>2]|0)+44>>2]&31](q,t)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=l;u=b+1|0}else{u=b}l=e;a:do{if((l-u|0)>1){if((a[u]|0)!=48){v=21;break}t=u+1|0;o=a[t]|0;if(!((o<<24>>24|0)==120|(o<<24>>24|0)==88)){v=21;break}o=j;m=Oc[c[(c[o>>2]|0)+44>>2]&31](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;m=u+2|0;p=Oc[c[(c[o>>2]|0)+44>>2]&31](q,a[t]|0)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=p;if(m>>>0<e>>>0){w=m}else{x=m;y=m;break}while(1){p=a[w]|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);t=w+1|0;if((Sa(p<<24>>24|0,c[6998]|0)|0)==0){x=m;y=w;break a}if(t>>>0<e>>>0){w=t}else{x=m;y=t;break}}}else{v=21}}while(0);b:do{if((v|0)==21){if(u>>>0<e>>>0){z=u}else{x=u;y=u;break}while(1){w=a[z]|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);p=z+1|0;if((gb(w<<24>>24|0,c[6998]|0)|0)==0){x=u;y=z;break b}if(p>>>0<e>>>0){z=p}else{x=u;y=p;break}}}}while(0);u=n;z=a[u]|0;if((z&1)==0){A=(z&255)>>>1}else{A=c[n+4>>2]|0}do{if((A|0)==0){Dc[c[(c[j>>2]|0)+48>>2]&15](q,x,y,c[h>>2]|0)|0;z=(c[h>>2]|0)+(y-x<<2)|0;c[h>>2]=z;B=z}else{do{if((x|0)!=(y|0)){z=y-1|0;if(z>>>0>x>>>0){C=x;D=z}else{break}do{z=a[C]|0;a[C]=a[D]|0;a[D]=z;C=C+1|0;D=D-1|0;}while(C>>>0<D>>>0)}}while(0);w=Fc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<y>>>0){z=n+1|0;v=n+4|0;p=n+8|0;m=j;t=0;o=0;E=x;while(1){F=(a[u]&1)==0;do{if((a[(F?z:c[p>>2]|0)+o|0]|0)>0){if((t|0)!=(a[(F?z:c[p>>2]|0)+o|0]|0)){G=o;H=t;break}I=c[h>>2]|0;c[h>>2]=I+4;c[I>>2]=w;I=a[u]|0;if((I&1)==0){J=(I&255)>>>1}else{J=c[v>>2]|0}G=(o>>>0<(J-1|0)>>>0)+o|0;H=0}else{G=o;H=t}}while(0);F=Oc[c[(c[m>>2]|0)+44>>2]&31](q,a[E]|0)|0;I=c[h>>2]|0;K=I+4|0;c[h>>2]=K;c[I>>2]=F;F=E+1|0;if(F>>>0<y>>>0){t=H+1|0;o=G;E=F}else{L=K;break}}}else{L=c[h>>2]|0}E=f+(x-b<<2)|0;if((E|0)==(L|0)){B=L;break}o=L-4|0;if(o>>>0>E>>>0){M=E;N=o}else{B=L;break}while(1){o=c[M>>2]|0;c[M>>2]=c[N>>2];c[N>>2]=o;o=M+4|0;E=N-4|0;if(o>>>0<E>>>0){M=o;N=E}else{B=L;break}}}}while(0);c:do{if(y>>>0<e>>>0){L=j;N=y;while(1){M=a[N]|0;if(M<<24>>24==46){break}x=Oc[c[(c[L>>2]|0)+44>>2]&31](q,M)|0;M=c[h>>2]|0;G=M+4|0;c[h>>2]=G;c[M>>2]=x;x=N+1|0;if(x>>>0<e>>>0){N=x}else{O=x;P=G;break c}}L=Fc[c[(c[r>>2]|0)+12>>2]&255](s)|0;G=c[h>>2]|0;x=G+4|0;c[h>>2]=x;c[G>>2]=L;O=N+1|0;P=x}else{O=y;P=B}}while(0);Dc[c[(c[j>>2]|0)+48>>2]&15](q,O,e,P)|0;P=(c[h>>2]|0)+(l-O<<2)|0;c[h>>2]=P;if((d|0)==(e|0)){Q=P;c[g>>2]=Q;Lj(n);i=k;return}Q=f+(d-b<<2)|0;c[g>>2]=Q;Lj(n);i=k;return}function Sm(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=c[6998]|0;if(y){w=wm(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=wm(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[46464]|0)==0;if(y){do{if(w){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);l=Dm(m,c[6998]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);w=Dm(m,c[6998]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}ns();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else if((B|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=$r(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}ns();H=B;I=B;J=c[m>>2]|0}}while(0);dk(q,f);Rm(J,F,A,H,o,p,q);mj(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Mm(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){as(I)}if((D|0)==0){i=d;return}as(D);i=d;return}function Tm(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+216|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+200|0;n=d+208|0;o=d+16|0;a[o]=a[14344]|0;a[o+1|0]=a[14345]|0;a[o+2|0]=a[14346]|0;a[o+3|0]=a[14347]|0;a[o+4|0]=a[14348]|0;a[o+5|0]=a[14349]|0;p=k|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);q=wm(p,20,c[6998]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=12;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=12;break}s=k+2|0}else if((h|0)==32){s=o}else{t=12}}while(0);if((t|0)==12){s=p}dk(m,f);t=m|0;m=c[t>>2]|0;if(!((c[7382]|0)==-1)){c[j>>2]=29528;c[j+4>>2]=16;c[j+8>>2]=0;Gj(29528,j,116)}j=(c[7383]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}mj(c[t>>2]|0)|0;u=l|0;Dc[c[(c[r>>2]|0)+48>>2]&15](r,p,o,u)|0;r=l+(q<<2)|0;if((s|0)==(o|0)){v=r;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Mm(b,n,u,v,r,f,g);z=148;A=0;i=d;return}v=l+(s-k<<2)|0;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Mm(b,n,u,v,r,f,g);z=148;A=0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function Um(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;n=i;i=i+48|0;o=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[o>>2];o=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[o>>2];o=n|0;p=n+16|0;q=n+24|0;r=n+32|0;s=n+40|0;dk(p,h);t=p|0;p=c[t>>2]|0;if(!((c[7384]|0)==-1)){c[o>>2]=29536;c[o+4>>2]=16;c[o+8>>2]=0;Gj(29536,o,116)}o=(c[7385]|0)-1|0;u=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-u>>2>>>0>o>>>0){v=c[u+(o<<2)>>2]|0;if((v|0)==0){break}w=v;mj(c[t>>2]|0)|0;c[j>>2]=0;x=f|0;a:do{if((l|0)==(m|0)){y=67}else{z=g|0;A=v;B=v+8|0;C=v;D=e;E=r|0;F=s|0;G=q|0;H=l;I=0;b:while(1){J=I;while(1){if((J|0)!=0){y=67;break a}K=c[x>>2]|0;do{if((K|0)==0){L=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){L=K;break}if(!((Fc[c[(c[K>>2]|0)+36>>2]&255](K)|0)==-1)){L=K;break}c[x>>2]=0;L=0}}while(0);K=(L|0)==0;M=c[z>>2]|0;c:do{if((M|0)==0){y=20}else{do{if((c[M+12>>2]|0)==(c[M+16>>2]|0)){if(!((Fc[c[(c[M>>2]|0)+36>>2]&255](M)|0)==-1)){break}c[z>>2]=0;y=20;break c}}while(0);if(K){N=M}else{y=21;break b}}}while(0);if((y|0)==20){y=0;if(K){y=21;break b}else{N=0}}if((Gc[c[(c[A>>2]|0)+36>>2]&63](w,a[H]|0,0)|0)<<24>>24==37){y=24;break}M=a[H]|0;if(M<<24>>24>-1){O=c[B>>2]|0;if(!((b[O+(M<<24>>24<<1)>>1]&8192)==0)){P=H;y=35;break}}Q=L+12|0;M=c[Q>>2]|0;R=L+16|0;if((M|0)==(c[R>>2]|0)){S=(Fc[c[(c[L>>2]|0)+36>>2]&255](L)|0)&255}else{S=a[M]|0}M=Oc[c[(c[C>>2]|0)+12>>2]&31](w,S)|0;if(M<<24>>24==(Oc[c[(c[C>>2]|0)+12>>2]&31](w,a[H]|0)|0)<<24>>24){y=62;break}c[j>>2]=4;J=4}d:do{if((y|0)==24){y=0;J=H+1|0;if((J|0)==(m|0)){y=25;break b}M=Gc[c[(c[A>>2]|0)+36>>2]&63](w,a[J]|0,0)|0;if((M<<24>>24|0)==69|(M<<24>>24|0)==48){T=H+2|0;if((T|0)==(m|0)){y=28;break b}U=M;V=Gc[c[(c[A>>2]|0)+36>>2]&63](w,a[T]|0,0)|0;W=T}else{U=0;V=M;W=J}J=c[(c[D>>2]|0)+36>>2]|0;c[E>>2]=L;c[F>>2]=N;Lc[J&15](q,e,r,s,h,j,k,V,U);c[x>>2]=c[G>>2];X=W+1|0}else if((y|0)==35){while(1){y=0;J=P+1|0;if((J|0)==(m|0)){Y=m;break}M=a[J]|0;if(!(M<<24>>24>-1)){Y=J;break}if((b[O+(M<<24>>24<<1)>>1]&8192)==0){Y=J;break}else{P=J;y=35}}K=L;J=N;M=N;while(1){do{if((K|0)==0){Z=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){Z=K;break}if(!((Fc[c[(c[K>>2]|0)+36>>2]&255](K)|0)==-1)){Z=K;break}c[x>>2]=0;Z=0}}while(0);T=(Z|0)==0;do{if((J|0)==0){_=M;y=48}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(T){$=J;aa=M;break}else{X=Y;break d}}if((Fc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[z>>2]=0;_=0;y=48;break}else{if(T^(M|0)==0){$=M;aa=M;break}else{X=Y;break d}}}}while(0);if((y|0)==48){y=0;if(T){X=Y;break d}else{$=0;aa=_}}ba=Z+12|0;ca=c[ba>>2]|0;da=Z+16|0;if((ca|0)==(c[da>>2]|0)){ea=(Fc[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)&255}else{ea=a[ca]|0}if(!(ea<<24>>24>-1)){X=Y;break d}if((b[(c[B>>2]|0)+(ea<<24>>24<<1)>>1]&8192)==0){X=Y;break d}ca=c[ba>>2]|0;if((ca|0)==(c[da>>2]|0)){Fc[c[(c[Z>>2]|0)+40>>2]&255](Z)|0;K=Z;J=$;M=aa;continue}else{c[ba>>2]=ca+1;K=Z;J=$;M=aa;continue}}}else if((y|0)==62){y=0;M=c[Q>>2]|0;if((M|0)==(c[R>>2]|0)){Fc[c[(c[L>>2]|0)+40>>2]&255](L)|0}else{c[Q>>2]=M+1}X=H+1|0}}while(0);if((X|0)==(m|0)){y=67;break a}H=X;I=c[j>>2]|0}if((y|0)==21){c[j>>2]=4;fa=L;break}else if((y|0)==25){c[j>>2]=4;fa=L;break}else if((y|0)==28){c[j>>2]=4;fa=L;break}}}while(0);if((y|0)==67){fa=c[x>>2]|0}w=f|0;do{if((fa|0)==0){ga=0}else{if((c[fa+12>>2]|0)!=(c[fa+16>>2]|0)){ga=fa;break}if(!((Fc[c[(c[fa>>2]|0)+36>>2]&255](fa)|0)==-1)){ga=fa;break}c[w>>2]=0;ga=0}}while(0);w=(ga|0)==0;x=g|0;v=c[x>>2]|0;e:do{if((v|0)==0){y=77}else{do{if((c[v+12>>2]|0)==(c[v+16>>2]|0)){if(!((Fc[c[(c[v>>2]|0)+36>>2]&255](v)|0)==-1)){break}c[x>>2]=0;y=77;break e}}while(0);if(!w){break}ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);do{if((y|0)==77){if(w){break}ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);c[j>>2]=c[j>>2]|2;ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);n=mc(4)|0;Gr(n);Db(n|0,20328,156)}function Vm(a){a=a|0;kj(a|0);is(a);return}function Wm(a){a=a|0;kj(a|0);return}function Xm(a){a=a|0;return 2}function Ym(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];Um(a,b,k,l,f,g,h,14328,14336);i=j;return}function Zm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=Fc[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=(f&255)>>>1;q=o+1|0;r=o+1|0}else{f=c[o+8>>2]|0;p=c[o+4>>2]|0;q=f;r=f}Um(b,d,l,m,g,h,j,q,r+p|0);i=k;return}function _m(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;dk(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7384]|0)==-1)){c[l>>2]=29536;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29536,l,116)}l=(c[7385]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}mj(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Fc[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=p;p=(ul(d,k,r,r+168|0,o,g,0)|0)-r|0;if((p|0)>=168){s=4;t=0;u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=j;return}c[h+24>>2]=((p|0)/12|0|0)%7|0;s=4;t=0;u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=j;return}}while(0);j=mc(4)|0;Gr(j);Db(j|0,20328,156)}function $m(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;dk(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7384]|0)==-1)){c[l>>2]=29536;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29536,l,116)}l=(c[7385]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}mj(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Fc[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=p;p=(ul(d,k,r,r+288|0,o,g,0)|0)-r|0;if((p|0)>=288){s=4;t=0;u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=j;return}c[h+16>>2]=((p|0)/12|0|0)%12|0;s=4;t=0;u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=j;return}}while(0);j=mc(4)|0;Gr(j);Db(j|0,20328,156)}function an(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;dk(l,f);f=l|0;l=c[f>>2]|0;if(!((c[7384]|0)==-1)){c[k>>2]=29536;c[k+4>>2]=16;c[k+8>>2]=0;Gj(29536,k,116)}k=(c[7385]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}mj(c[f>>2]|0)|0;c[j>>2]=c[e>>2];o=fn(d,j,g,n,4)|0;if((c[g>>2]&4|0)!=0){p=4;q=0;r=d|0;s=c[r>>2]|0;t=a|0;c[t>>2]=s;i=b;return}if((o|0)<69){u=o+2e3|0}else{u=(o-69|0)>>>0<31>>>0?o+1900|0:o}c[h+20>>2]=u-1900;p=4;q=0;r=d|0;s=c[r>>2]|0;t=a|0;c[t>>2]=s;i=b;return}}while(0);b=mc(4)|0;Gr(b);Db(b|0,20328,156)}function bn(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;dk(z,g);_=z|0;z=c[_>>2]|0;if(!((c[7384]|0)==-1)){c[y>>2]=29536;c[y+4>>2]=16;c[y+8>>2]=0;Gj(29536,y,116)}y=(c[7385]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ba=aa;mj(c[_>>2]|0)|0;a:do{switch(k<<24>>24|0){case 84:{aa=e|0;c[S>>2]=c[aa>>2];c[T>>2]=c[f>>2];Um(R,d,S,T,g,h,j,14280,14288);c[aa>>2]=c[R>>2];break};case 119:{c[o>>2]=c[f>>2];aa=fn(e,o,h,ba,1)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(aa|0)<7){c[j+24>>2]=aa;break a}else{c[h>>2]=ca|4;break a}break};case 106:{c[s>>2]=c[f>>2];ca=fn(e,s,h,ba,3)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ca|0)<366){c[j+28>>2]=ca;break a}else{c[h>>2]=aa|4;break a}break};case 120:{aa=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];zc[aa&127](b,d,U,V,g,h,j);i=l;return};case 82:{aa=e|0;c[P>>2]=c[aa>>2];c[Q>>2]=c[f>>2];Um(O,d,P,Q,g,h,j,14288,14293);c[aa>>2]=c[O>>2];break};case 100:case 101:{aa=j+12|0;c[v>>2]=c[f>>2];ca=fn(e,v,h,ba,2)|0;da=c[h>>2]|0;do{if((da&4|0)==0){if(!((ca-1|0)>>>0<31>>>0)){break}c[aa>>2]=ca;break a}}while(0);c[h>>2]=da|4;break};case 72:{c[u>>2]=c[f>>2];ca=fn(e,u,h,ba,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ca|0)<24){c[j+8>>2]=ca;break a}else{c[h>>2]=aa|4;break a}break};case 73:{aa=j+8|0;c[t>>2]=c[f>>2];ca=fn(e,t,h,ba,2)|0;ea=c[h>>2]|0;do{if((ea&4|0)==0){if(!((ca-1|0)>>>0<12>>>0)){break}c[aa>>2]=ca;break a}}while(0);c[h>>2]=ea|4;break};case 68:{ca=e|0;c[E>>2]=c[ca>>2];c[F>>2]=c[f>>2];Um(D,d,E,F,g,h,j,14320,14328);c[ca>>2]=c[D>>2];break};case 70:{ca=e|0;c[H>>2]=c[ca>>2];c[I>>2]=c[f>>2];Um(G,d,H,I,g,h,j,14312,14320);c[ca>>2]=c[G>>2];break};case 110:case 116:{c[J>>2]=c[f>>2];cn(0,e,J,h,ba);break};case 114:{ca=e|0;c[M>>2]=c[ca>>2];c[N>>2]=c[f>>2];Um(L,d,M,N,g,h,j,14296,14307);c[ca>>2]=c[L>>2];break};case 109:{c[r>>2]=c[f>>2];ca=fn(e,r,h,ba,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ca|0)<13){c[j+16>>2]=ca-1;break a}else{c[h>>2]=aa|4;break a}break};case 97:case 65:{aa=c[f>>2]|0;ca=d+8|0;da=Fc[c[c[ca>>2]>>2]&255](ca)|0;c[x>>2]=aa;aa=(ul(e,x,da,da+168|0,ba,h,0)|0)-da|0;if((aa|0)>=168){break a}c[j+24>>2]=((aa|0)/12|0|0)%7|0;break};case 88:{aa=d+8|0;da=Fc[c[(c[aa>>2]|0)+24>>2]&255](aa)|0;aa=e|0;c[X>>2]=c[aa>>2];c[Y>>2]=c[f>>2];ca=a[da]|0;if((ca&1)==0){fa=(ca&255)>>>1;ga=da+1|0;ha=da+1|0}else{ca=c[da+8>>2]|0;fa=c[da+4>>2]|0;ga=ca;ha=ca}Um(W,d,X,Y,g,h,j,ga,ha+fa|0);c[aa>>2]=c[W>>2];break};case 121:{c[n>>2]=c[f>>2];aa=fn(e,n,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}if((aa|0)<69){ia=aa+2e3|0}else{ia=(aa-69|0)>>>0<31>>>0?aa+1900|0:aa}c[j+20>>2]=ia-1900;break};case 112:{c[K>>2]=c[f>>2];dn(d,j+8|0,e,K,h,ba);break};case 99:{aa=d+8|0;ca=Fc[c[(c[aa>>2]|0)+12>>2]&255](aa)|0;aa=e|0;c[B>>2]=c[aa>>2];c[C>>2]=c[f>>2];da=a[ca]|0;if((da&1)==0){ja=(da&255)>>>1;ka=ca+1|0;la=ca+1|0}else{da=c[ca+8>>2]|0;ja=c[ca+4>>2]|0;ka=da;la=da}Um(A,d,B,C,g,h,j,ka,la+ja|0);c[aa>>2]=c[A>>2];break};case 77:{c[q>>2]=c[f>>2];aa=fn(e,q,h,ba,2)|0;da=c[h>>2]|0;if((da&4|0)==0&(aa|0)<60){c[j+4>>2]=aa;break a}else{c[h>>2]=da|4;break a}break};case 98:case 66:case 104:{da=c[f>>2]|0;aa=d+8|0;ca=Fc[c[(c[aa>>2]|0)+4>>2]&255](aa)|0;c[w>>2]=da;da=(ul(e,w,ca,ca+288|0,ba,h,0)|0)-ca|0;if((da|0)>=288){break a}c[j+16>>2]=((da|0)/12|0|0)%12|0;break};case 83:{c[p>>2]=c[f>>2];da=fn(e,p,h,ba,2)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<61){c[j>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};case 37:{c[Z>>2]=c[f>>2];en(0,e,Z,h,ba);break};case 89:{c[m>>2]=c[f>>2];ca=fn(e,m,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}c[j+20>>2]=ca-1900;break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=mc(4)|0;Gr(l);Db(l|0,20328,156)}function cn(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;j=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[j>>2];j=e|0;e=f|0;f=h+8|0;a:while(1){h=c[j>>2]|0;do{if((h|0)==0){k=0}else{if((c[h+12>>2]|0)!=(c[h+16>>2]|0)){k=h;break}if((Fc[c[(c[h>>2]|0)+36>>2]&255](h)|0)==-1){c[j>>2]=0;k=0;break}else{k=c[j>>2]|0;break}}}while(0);h=(k|0)==0;l=c[e>>2]|0;do{if((l|0)==0){m=12}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(h){n=l;break}else{o=l;break a}}if((Fc[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1){c[e>>2]=0;m=12;break}else{if(h){n=l;break}else{o=l;break a}}}}while(0);if((m|0)==12){m=0;if(h){o=0;break}else{n=0}}l=c[j>>2]|0;p=c[l+12>>2]|0;if((p|0)==(c[l+16>>2]|0)){q=(Fc[c[(c[l>>2]|0)+36>>2]&255](l)|0)&255}else{q=a[p]|0}if(!(q<<24>>24>-1)){o=n;break}if((b[(c[f>>2]|0)+(q<<24>>24<<1)>>1]&8192)==0){o=n;break}p=c[j>>2]|0;l=p+12|0;r=c[l>>2]|0;if((r|0)==(c[p+16>>2]|0)){Fc[c[(c[p>>2]|0)+40>>2]&255](p)|0;continue}else{c[l>>2]=r+1;continue}}n=c[j>>2]|0;do{if((n|0)==0){s=0}else{if((c[n+12>>2]|0)!=(c[n+16>>2]|0)){s=n;break}if((Fc[c[(c[n>>2]|0)+36>>2]&255](n)|0)==-1){c[j>>2]=0;s=0;break}else{s=c[j>>2]|0;break}}}while(0);j=(s|0)==0;b:do{if((o|0)==0){m=32}else{do{if((c[o+12>>2]|0)==(c[o+16>>2]|0)){if(!((Fc[c[(c[o>>2]|0)+36>>2]&255](o)|0)==-1)){break}c[e>>2]=0;m=32;break b}}while(0);if(!j){break}i=d;return}}while(0);do{if((m|0)==32){if(j){break}i=d;return}}while(0);c[g>>2]=c[g>>2]|2;i=d;return}function dn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=b+8|0;b=Fc[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=a[b]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[b+4>>2]|0}l=a[b+12|0]|0;if((l&1)==0){n=(l&255)>>>1}else{n=c[b+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=ul(e,k,b,b+24|0,h,g,0)|0;g=f-b|0;do{if((f|0)==(b|0)){if((c[d>>2]|0)!=12){break}c[d>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[d>>2]|0;if((g|0)>=12){i=j;return}c[d>>2]=g+12;i=j;return}function en(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;b=i;h=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[h>>2];h=d|0;d=c[h>>2]|0;do{if((d|0)==0){j=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){j=d;break}if((Fc[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[h>>2]=0;j=0;break}else{j=c[h>>2]|0;break}}}while(0);d=(j|0)==0;j=e|0;e=c[j>>2]|0;a:do{if((e|0)==0){k=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if(!((Fc[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1)){break}c[j>>2]=0;k=11;break a}}while(0);if(d){l=e}else{k=12}}}while(0);if((k|0)==11){if(d){k=12}else{l=0}}if((k|0)==12){c[f>>2]=c[f>>2]|6;i=b;return}d=c[h>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){m=(Fc[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{m=a[e]|0}if(!((Gc[c[(c[g>>2]|0)+36>>2]&63](g,m,0)|0)<<24>>24==37)){c[f>>2]=c[f>>2]|4;i=b;return}m=c[h>>2]|0;g=m+12|0;e=c[g>>2]|0;if((e|0)==(c[m+16>>2]|0)){Fc[c[(c[m>>2]|0)+40>>2]&255](m)|0}else{c[g>>2]=e+1}e=c[h>>2]|0;do{if((e|0)==0){n=0}else{if((c[e+12>>2]|0)!=(c[e+16>>2]|0)){n=e;break}if((Fc[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1){c[h>>2]=0;n=0;break}else{n=c[h>>2]|0;break}}}while(0);h=(n|0)==0;b:do{if((l|0)==0){k=31}else{do{if((c[l+12>>2]|0)==(c[l+16>>2]|0)){if(!((Fc[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1)){break}c[j>>2]=0;k=31;break b}}while(0);if(!h){break}i=b;return}}while(0);do{if((k|0)==31){if(h){break}i=b;return}}while(0);c[f>>2]=c[f>>2]|2;i=b;return}function fn(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){l=d;break}if((Fc[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[k>>2]=0;l=0;break}else{l=c[k>>2]|0;break}}}while(0);d=(l|0)==0;l=e|0;e=c[l>>2]|0;a:do{if((e|0)==0){m=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if(!((Fc[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1)){break}c[l>>2]=0;m=11;break a}}while(0);if(d){n=e}else{m=12}}}while(0);if((m|0)==11){if(d){m=12}else{n=0}}if((m|0)==12){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}d=c[k>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){p=(Fc[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{p=a[e]|0}do{if(p<<24>>24>-1){e=g+8|0;if((b[(c[e>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){break}d=g;q=(Gc[c[(c[d>>2]|0)+36>>2]&63](g,p,0)|0)<<24>>24;r=c[k>>2]|0;s=r+12|0;t=c[s>>2]|0;if((t|0)==(c[r+16>>2]|0)){Fc[c[(c[r>>2]|0)+40>>2]&255](r)|0;u=q;v=h;w=n;x=n}else{c[s>>2]=t+1;u=q;v=h;w=n;x=n}while(1){y=u-48|0;q=v-1|0;t=c[k>>2]|0;do{if((t|0)==0){z=0}else{if((c[t+12>>2]|0)!=(c[t+16>>2]|0)){z=t;break}if((Fc[c[(c[t>>2]|0)+36>>2]&255](t)|0)==-1){c[k>>2]=0;z=0;break}else{z=c[k>>2]|0;break}}}while(0);t=(z|0)==0;do{if((w|0)==0){A=0;B=x}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){A=w;B=x;break}if(!((Fc[c[(c[w>>2]|0)+36>>2]&255](w)|0)==-1)){A=x;B=x;break}c[l>>2]=0;A=0;B=0}}while(0);C=c[k>>2]|0;if(!((t^(A|0)==0)&(q|0)>0)){m=40;break}s=c[C+12>>2]|0;if((s|0)==(c[C+16>>2]|0)){D=(Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0)&255}else{D=a[s]|0}if(!(D<<24>>24>-1)){o=y;m=52;break}if((b[(c[e>>2]|0)+(D<<24>>24<<1)>>1]&2048)==0){o=y;m=52;break}s=((Gc[c[(c[d>>2]|0)+36>>2]&63](g,D,0)|0)<<24>>24)+(y*10|0)|0;r=c[k>>2]|0;E=r+12|0;F=c[E>>2]|0;if((F|0)==(c[r+16>>2]|0)){Fc[c[(c[r>>2]|0)+40>>2]&255](r)|0;u=s;v=q;w=A;x=B;continue}else{c[E>>2]=F+1;u=s;v=q;w=A;x=B;continue}}if((m|0)==40){do{if((C|0)==0){G=0}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){G=C;break}if((Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[k>>2]=0;G=0;break}else{G=c[k>>2]|0;break}}}while(0);d=(G|0)==0;b:do{if((B|0)==0){m=50}else{do{if((c[B+12>>2]|0)==(c[B+16>>2]|0)){if(!((Fc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){break}c[l>>2]=0;m=50;break b}}while(0);if(d){o=y}else{break}i=j;return o|0}}while(0);do{if((m|0)==50){if(d){break}else{o=y}i=j;return o|0}}while(0);c[f>>2]=c[f>>2]|2;o=y;i=j;return o|0}else if((m|0)==52){i=j;return o|0}}}while(0);c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function gn(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;l=i;i=i+48|0;m=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[m>>2];m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=l|0;n=l+16|0;o=l+24|0;p=l+32|0;q=l+40|0;dk(n,f);r=n|0;n=c[r>>2]|0;if(!((c[7382]|0)==-1)){c[m>>2]=29528;c[m+4>>2]=16;c[m+8>>2]=0;Gj(29528,m,116)}m=(c[7383]|0)-1|0;s=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-s>>2>>>0>m>>>0){t=c[s+(m<<2)>>2]|0;if((t|0)==0){break}u=t;mj(c[r>>2]|0)|0;c[g>>2]=0;v=d|0;a:do{if((j|0)==(k|0)){w=71}else{x=e|0;y=t;z=t;A=t;B=b;C=p|0;D=q|0;E=o|0;F=j;G=0;b:while(1){H=G;while(1){if((H|0)!=0){w=71;break a}I=c[v>>2]|0;do{if((I|0)==0){J=1;K=0}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){M=Fc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{M=c[L>>2]|0}if(!((M|0)==-1)){J=0;K=I;break}c[v>>2]=0;J=1;K=0}}while(0);I=c[x>>2]|0;do{if((I|0)==0){w=23}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){N=Fc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{N=c[L>>2]|0}if((N|0)==-1){c[x>>2]=0;w=23;break}else{if(J){O=I;break}else{w=25;break b}}}}while(0);if((w|0)==23){w=0;if(J){w=25;break b}else{O=0}}if((Gc[c[(c[y>>2]|0)+52>>2]&63](u,c[F>>2]|0,0)|0)<<24>>24==37){w=28;break}if(Gc[c[(c[z>>2]|0)+12>>2]&63](u,8192,c[F>>2]|0)|0){P=F;w=38;break}Q=K+12|0;I=c[Q>>2]|0;R=K+16|0;if((I|0)==(c[R>>2]|0)){S=Fc[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{S=c[I>>2]|0}I=Oc[c[(c[A>>2]|0)+28>>2]&31](u,S)|0;if((I|0)==(Oc[c[(c[A>>2]|0)+28>>2]&31](u,c[F>>2]|0)|0)){w=66;break}c[g>>2]=4;H=4}c:do{if((w|0)==28){w=0;H=F+4|0;if((H|0)==(k|0)){w=29;break b}I=Gc[c[(c[y>>2]|0)+52>>2]&63](u,c[H>>2]|0,0)|0;if((I<<24>>24|0)==69|(I<<24>>24|0)==48){L=F+8|0;if((L|0)==(k|0)){w=32;break b}T=I;U=Gc[c[(c[y>>2]|0)+52>>2]&63](u,c[L>>2]|0,0)|0;V=L}else{T=0;U=I;V=H}H=c[(c[B>>2]|0)+36>>2]|0;c[C>>2]=K;c[D>>2]=O;Lc[H&15](o,b,p,q,f,g,h,U,T);c[v>>2]=c[E>>2];W=V+4|0}else if((w|0)==38){while(1){w=0;H=P+4|0;if((H|0)==(k|0)){X=k;break}if(Gc[c[(c[z>>2]|0)+12>>2]&63](u,8192,c[H>>2]|0)|0){P=H;w=38}else{X=H;break}}H=K;I=O;L=O;while(1){do{if((H|0)==0){Y=1;Z=0}else{_=c[H+12>>2]|0;if((_|0)==(c[H+16>>2]|0)){$=Fc[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{$=c[_>>2]|0}if(!(($|0)==-1)){Y=0;Z=H;break}c[v>>2]=0;Y=1;Z=0}}while(0);do{if((I|0)==0){aa=L;w=53}else{_=c[I+12>>2]|0;if((_|0)==(c[I+16>>2]|0)){ba=Fc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{ba=c[_>>2]|0}if((ba|0)==-1){c[x>>2]=0;aa=0;w=53;break}else{if(Y^(L|0)==0){ca=L;da=L;break}else{W=X;break c}}}}while(0);if((w|0)==53){w=0;if(Y){W=X;break c}else{ca=0;da=aa}}_=Z+12|0;ea=c[_>>2]|0;fa=Z+16|0;if((ea|0)==(c[fa>>2]|0)){ga=Fc[c[(c[Z>>2]|0)+36>>2]&255](Z)|0}else{ga=c[ea>>2]|0}if(!(Gc[c[(c[z>>2]|0)+12>>2]&63](u,8192,ga)|0)){W=X;break c}ea=c[_>>2]|0;if((ea|0)==(c[fa>>2]|0)){Fc[c[(c[Z>>2]|0)+40>>2]&255](Z)|0;H=Z;I=ca;L=da;continue}else{c[_>>2]=ea+4;H=Z;I=ca;L=da;continue}}}else if((w|0)==66){w=0;L=c[Q>>2]|0;if((L|0)==(c[R>>2]|0)){Fc[c[(c[K>>2]|0)+40>>2]&255](K)|0}else{c[Q>>2]=L+4}W=F+4|0}}while(0);if((W|0)==(k|0)){w=71;break a}F=W;G=c[g>>2]|0}if((w|0)==25){c[g>>2]=4;ha=K;break}else if((w|0)==29){c[g>>2]=4;ha=K;break}else if((w|0)==32){c[g>>2]=4;ha=K;break}}}while(0);if((w|0)==71){ha=c[v>>2]|0}u=d|0;do{if((ha|0)==0){ia=1;ja=0}else{t=c[ha+12>>2]|0;if((t|0)==(c[ha+16>>2]|0)){ka=Fc[c[(c[ha>>2]|0)+36>>2]&255](ha)|0}else{ka=c[t>>2]|0}if(!((ka|0)==-1)){ia=0;ja=ha;break}c[u>>2]=0;ia=1;ja=0}}while(0);u=e|0;v=c[u>>2]|0;do{if((v|0)==0){w=84}else{t=c[v+12>>2]|0;if((t|0)==(c[v+16>>2]|0)){la=Fc[c[(c[v>>2]|0)+36>>2]&255](v)|0}else{la=c[t>>2]|0}if((la|0)==-1){c[u>>2]=0;w=84;break}if(!ia){break}ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);do{if((w|0)==84){if(ia){break}ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);c[g>>2]=c[g>>2]|2;ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);l=mc(4)|0;Gr(l);Db(l|0,20328,156)}function hn(a){a=a|0;kj(a|0);is(a);return}function jn(a){a=a|0;kj(a|0);return}function kn(a){a=a|0;return 2}function ln(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];gn(a,b,k,l,f,g,h,14248,14280);i=j;return}function mn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=Fc[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=(f&255)>>>1;q=o+4|0;r=o+4|0}else{f=c[o+8>>2]|0;p=c[o+4>>2]|0;q=f;r=f}gn(b,d,l,m,g,h,j,q,r+(p<<2)|0);i=k;return}function nn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;dk(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7382]|0)==-1)){c[l>>2]=29528;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29528,l,116)}l=(c[7383]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}mj(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Fc[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=p;p=(Tl(d,k,r,r+168|0,o,g,0)|0)-r|0;if((p|0)>=168){s=4;t=0;u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=j;return}c[h+24>>2]=((p|0)/12|0|0)%7|0;s=4;t=0;u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=j;return}}while(0);j=mc(4)|0;Gr(j);Db(j|0,20328,156)}function on(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;dk(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7382]|0)==-1)){c[l>>2]=29528;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29528,l,116)}l=(c[7383]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}mj(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Fc[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=p;p=(Tl(d,k,r,r+288|0,o,g,0)|0)-r|0;if((p|0)>=288){s=4;t=0;u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=j;return}c[h+16>>2]=((p|0)/12|0|0)%12|0;s=4;t=0;u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=j;return}}while(0);j=mc(4)|0;Gr(j);Db(j|0,20328,156)}function pn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;dk(l,f);f=l|0;l=c[f>>2]|0;if(!((c[7382]|0)==-1)){c[k>>2]=29528;c[k+4>>2]=16;c[k+8>>2]=0;Gj(29528,k,116)}k=(c[7383]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}mj(c[f>>2]|0)|0;c[j>>2]=c[e>>2];o=un(d,j,g,n,4)|0;if((c[g>>2]&4|0)!=0){p=4;q=0;r=d|0;s=c[r>>2]|0;t=a|0;c[t>>2]=s;i=b;return}if((o|0)<69){u=o+2e3|0}else{u=(o-69|0)>>>0<31>>>0?o+1900|0:o}c[h+20>>2]=u-1900;p=4;q=0;r=d|0;s=c[r>>2]|0;t=a|0;c[t>>2]=s;i=b;return}}while(0);b=mc(4)|0;Gr(b);Db(b|0,20328,156)}function qn(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;dk(z,g);_=z|0;z=c[_>>2]|0;if(!((c[7382]|0)==-1)){c[y>>2]=29528;c[y+4>>2]=16;c[y+8>>2]=0;Gj(29528,y,116)}y=(c[7383]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ba=aa;mj(c[_>>2]|0)|0;a:do{switch(k<<24>>24|0){case 84:{aa=e|0;c[S>>2]=c[aa>>2];c[T>>2]=c[f>>2];gn(R,d,S,T,g,h,j,14112,14144);c[aa>>2]=c[R>>2];break};case 119:{c[o>>2]=c[f>>2];aa=un(e,o,h,ba,1)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(aa|0)<7){c[j+24>>2]=aa;break a}else{c[h>>2]=ca|4;break a}break};case 112:{c[K>>2]=c[f>>2];sn(d,j+8|0,e,K,h,ba);break};case 114:{ca=e|0;c[M>>2]=c[ca>>2];c[N>>2]=c[f>>2];gn(L,d,M,N,g,h,j,14168,14212);c[ca>>2]=c[L>>2];break};case 37:{c[Z>>2]=c[f>>2];tn(0,e,Z,h,ba);break};case 120:{ca=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];zc[ca&127](b,d,U,V,g,h,j);i=l;return};case 100:case 101:{ca=j+12|0;c[v>>2]=c[f>>2];aa=un(e,v,h,ba,2)|0;da=c[h>>2]|0;do{if((da&4|0)==0){if(!((aa-1|0)>>>0<31>>>0)){break}c[ca>>2]=aa;break a}}while(0);c[h>>2]=da|4;break};case 89:{c[m>>2]=c[f>>2];aa=un(e,m,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}c[j+20>>2]=aa-1900;break};case 73:{aa=j+8|0;c[t>>2]=c[f>>2];ca=un(e,t,h,ba,2)|0;ea=c[h>>2]|0;do{if((ea&4|0)==0){if(!((ca-1|0)>>>0<12>>>0)){break}c[aa>>2]=ca;break a}}while(0);c[h>>2]=ea|4;break};case 88:{ca=d+8|0;aa=Fc[c[(c[ca>>2]|0)+24>>2]&255](ca)|0;ca=e|0;c[X>>2]=c[ca>>2];c[Y>>2]=c[f>>2];da=a[aa]|0;if((da&1)==0){fa=(da&255)>>>1;ga=aa+4|0;ha=aa+4|0}else{da=c[aa+8>>2]|0;fa=c[aa+4>>2]|0;ga=da;ha=da}gn(W,d,X,Y,g,h,j,ga,ha+(fa<<2)|0);c[ca>>2]=c[W>>2];break};case 83:{c[p>>2]=c[f>>2];ca=un(e,p,h,ba,2)|0;da=c[h>>2]|0;if((da&4|0)==0&(ca|0)<61){c[j>>2]=ca;break a}else{c[h>>2]=da|4;break a}break};case 106:{c[s>>2]=c[f>>2];da=un(e,s,h,ba,3)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<366){c[j+28>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};case 77:{c[q>>2]=c[f>>2];ca=un(e,q,h,ba,2)|0;da=c[h>>2]|0;if((da&4|0)==0&(ca|0)<60){c[j+4>>2]=ca;break a}else{c[h>>2]=da|4;break a}break};case 68:{da=e|0;c[E>>2]=c[da>>2];c[F>>2]=c[f>>2];gn(D,d,E,F,g,h,j,14216,14248);c[da>>2]=c[D>>2];break};case 70:{da=e|0;c[H>>2]=c[da>>2];c[I>>2]=c[f>>2];gn(G,d,H,I,g,h,j,14080,14112);c[da>>2]=c[G>>2];break};case 72:{c[u>>2]=c[f>>2];da=un(e,u,h,ba,2)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<24){c[j+8>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};case 110:case 116:{c[J>>2]=c[f>>2];rn(0,e,J,h,ba);break};case 98:case 66:case 104:{ca=c[f>>2]|0;da=d+8|0;aa=Fc[c[(c[da>>2]|0)+4>>2]&255](da)|0;c[w>>2]=ca;ca=(Tl(e,w,aa,aa+288|0,ba,h,0)|0)-aa|0;if((ca|0)>=288){break a}c[j+16>>2]=((ca|0)/12|0|0)%12|0;break};case 82:{ca=e|0;c[P>>2]=c[ca>>2];c[Q>>2]=c[f>>2];gn(O,d,P,Q,g,h,j,14144,14164);c[ca>>2]=c[O>>2];break};case 121:{c[n>>2]=c[f>>2];ca=un(e,n,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}if((ca|0)<69){ia=ca+2e3|0}else{ia=(ca-69|0)>>>0<31>>>0?ca+1900|0:ca}c[j+20>>2]=ia-1900;break};case 99:{ca=d+8|0;aa=Fc[c[(c[ca>>2]|0)+12>>2]&255](ca)|0;ca=e|0;c[B>>2]=c[ca>>2];c[C>>2]=c[f>>2];da=a[aa]|0;if((da&1)==0){ja=(da&255)>>>1;ka=aa+4|0;la=aa+4|0}else{da=c[aa+8>>2]|0;ja=c[aa+4>>2]|0;ka=da;la=da}gn(A,d,B,C,g,h,j,ka,la+(ja<<2)|0);c[ca>>2]=c[A>>2];break};case 97:case 65:{ca=c[f>>2]|0;da=d+8|0;aa=Fc[c[c[da>>2]>>2]&255](da)|0;c[x>>2]=ca;ca=(Tl(e,x,aa,aa+168|0,ba,h,0)|0)-aa|0;if((ca|0)>=168){break a}c[j+24>>2]=((ca|0)/12|0|0)%7|0;break};case 109:{c[r>>2]=c[f>>2];ca=un(e,r,h,ba,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ca|0)<13){c[j+16>>2]=ca-1;break a}else{c[h>>2]=aa|4;break a}break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=mc(4)|0;Gr(l);Db(l|0,20328,156)}function rn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=d|0;d=f;a:while(1){h=c[g>>2]|0;do{if((h|0)==0){j=1}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){l=Fc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[g>>2]=0;j=1;break}else{j=(c[g>>2]|0)==0;break}}}while(0);h=c[b>>2]|0;do{if((h|0)==0){m=15}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){n=Fc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{n=c[k>>2]|0}if((n|0)==-1){c[b>>2]=0;m=15;break}else{if(j){o=h;break}else{p=h;break a}}}}while(0);if((m|0)==15){m=0;if(j){p=0;break}else{o=0}}h=c[g>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){q=Fc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{q=c[k>>2]|0}if(!(Gc[c[(c[d>>2]|0)+12>>2]&63](f,8192,q)|0)){p=o;break}k=c[g>>2]|0;h=k+12|0;r=c[h>>2]|0;if((r|0)==(c[k+16>>2]|0)){Fc[c[(c[k>>2]|0)+40>>2]&255](k)|0;continue}else{c[h>>2]=r+4;continue}}o=c[g>>2]|0;do{if((o|0)==0){s=1}else{q=c[o+12>>2]|0;if((q|0)==(c[o+16>>2]|0)){t=Fc[c[(c[o>>2]|0)+36>>2]&255](o)|0}else{t=c[q>>2]|0}if((t|0)==-1){c[g>>2]=0;s=1;break}else{s=(c[g>>2]|0)==0;break}}}while(0);do{if((p|0)==0){m=37}else{g=c[p+12>>2]|0;if((g|0)==(c[p+16>>2]|0)){u=Fc[c[(c[p>>2]|0)+36>>2]&255](p)|0}else{u=c[g>>2]|0}if((u|0)==-1){c[b>>2]=0;m=37;break}if(!s){break}i=a;return}}while(0);do{if((m|0)==37){if(s){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function sn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=b+8|0;b=Fc[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=a[b]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[b+4>>2]|0}l=a[b+12|0]|0;if((l&1)==0){n=(l&255)>>>1}else{n=c[b+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=Tl(e,k,b,b+24|0,h,g,0)|0;g=f-b|0;do{if((f|0)==(b|0)){if((c[d>>2]|0)!=12){break}c[d>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[d>>2]|0;if((g|0)>=12){i=j;return}c[d>>2]=g+12;i=j;return}function tn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=c[g>>2]|0;do{if((b|0)==0){h=1}else{j=c[b+12>>2]|0;if((j|0)==(c[b+16>>2]|0)){k=Fc[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[g>>2]=0;h=1;break}else{h=(c[g>>2]|0)==0;break}}}while(0);k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=14}else{b=c[d+12>>2]|0;if((b|0)==(c[d+16>>2]|0)){m=Fc[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{m=c[b>>2]|0}if((m|0)==-1){c[k>>2]=0;l=14;break}else{if(h){n=d;break}else{l=16;break}}}}while(0);if((l|0)==14){if(h){l=16}else{n=0}}if((l|0)==16){c[e>>2]=c[e>>2]|6;i=a;return}h=c[g>>2]|0;d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0)){o=Fc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{o=c[d>>2]|0}if(!((Gc[c[(c[f>>2]|0)+52>>2]&63](f,o,0)|0)<<24>>24==37)){c[e>>2]=c[e>>2]|4;i=a;return}o=c[g>>2]|0;f=o+12|0;d=c[f>>2]|0;if((d|0)==(c[o+16>>2]|0)){Fc[c[(c[o>>2]|0)+40>>2]&255](o)|0}else{c[f>>2]=d+4}d=c[g>>2]|0;do{if((d|0)==0){p=1}else{f=c[d+12>>2]|0;if((f|0)==(c[d+16>>2]|0)){q=Fc[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{q=c[f>>2]|0}if((q|0)==-1){c[g>>2]=0;p=1;break}else{p=(c[g>>2]|0)==0;break}}}while(0);do{if((n|0)==0){l=38}else{g=c[n+12>>2]|0;if((g|0)==(c[n+16>>2]|0)){r=Fc[c[(c[n>>2]|0)+36>>2]&255](n)|0}else{r=c[g>>2]|0}if((r|0)==-1){c[k>>2]=0;l=38;break}if(!p){break}i=a;return}}while(0);do{if((l|0)==38){if(p){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function un(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;h=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[h>>2];h=a|0;a=c[h>>2]|0;do{if((a|0)==0){j=1}else{k=c[a+12>>2]|0;if((k|0)==(c[a+16>>2]|0)){l=Fc[c[(c[a>>2]|0)+36>>2]&255](a)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[h>>2]=0;j=1;break}else{j=(c[h>>2]|0)==0;break}}}while(0);l=b|0;b=c[l>>2]|0;do{if((b|0)==0){m=14}else{a=c[b+12>>2]|0;if((a|0)==(c[b+16>>2]|0)){n=Fc[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{n=c[a>>2]|0}if((n|0)==-1){c[l>>2]=0;m=14;break}else{if(j){o=b;break}else{m=16;break}}}}while(0);if((m|0)==14){if(j){m=16}else{o=0}}if((m|0)==16){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}j=c[h>>2]|0;b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0)){q=Fc[c[(c[j>>2]|0)+36>>2]&255](j)|0}else{q=c[b>>2]|0}b=e;if(!(Gc[c[(c[b>>2]|0)+12>>2]&63](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}j=e;n=(Gc[c[(c[j>>2]|0)+52>>2]&63](e,q,0)|0)<<24>>24;q=c[h>>2]|0;a=q+12|0;k=c[a>>2]|0;if((k|0)==(c[q+16>>2]|0)){Fc[c[(c[q>>2]|0)+40>>2]&255](q)|0;r=n;s=f;t=o;u=o}else{c[a>>2]=k+4;r=n;s=f;t=o;u=o}while(1){v=r-48|0;o=s-1|0;f=c[h>>2]|0;do{if((f|0)==0){w=1}else{n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0)){x=Fc[c[(c[f>>2]|0)+36>>2]&255](f)|0}else{x=c[n>>2]|0}if((x|0)==-1){c[h>>2]=0;w=1;break}else{w=(c[h>>2]|0)==0;break}}}while(0);do{if((t|0)==0){y=1;z=0;A=u}else{f=c[t+12>>2]|0;if((f|0)==(c[t+16>>2]|0)){B=Fc[c[(c[t>>2]|0)+36>>2]&255](t)|0}else{B=c[f>>2]|0}if((B|0)==-1){c[l>>2]=0;y=1;z=0;A=0;break}else{y=(u|0)==0;z=u;A=u;break}}}while(0);C=c[h>>2]|0;if(!((w^y)&(o|0)>0)){break}f=c[C+12>>2]|0;if((f|0)==(c[C+16>>2]|0)){D=Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{D=c[f>>2]|0}if(!(Gc[c[(c[b>>2]|0)+12>>2]&63](e,2048,D)|0)){p=v;m=63;break}f=((Gc[c[(c[j>>2]|0)+52>>2]&63](e,D,0)|0)<<24>>24)+(v*10|0)|0;n=c[h>>2]|0;k=n+12|0;a=c[k>>2]|0;if((a|0)==(c[n+16>>2]|0)){Fc[c[(c[n>>2]|0)+40>>2]&255](n)|0;r=f;s=o;t=z;u=A;continue}else{c[k>>2]=a+4;r=f;s=o;t=z;u=A;continue}}if((m|0)==63){i=g;return p|0}do{if((C|0)==0){E=1}else{u=c[C+12>>2]|0;if((u|0)==(c[C+16>>2]|0)){F=Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{F=c[u>>2]|0}if((F|0)==-1){c[h>>2]=0;E=1;break}else{E=(c[h>>2]|0)==0;break}}}while(0);do{if((A|0)==0){m=60}else{h=c[A+12>>2]|0;if((h|0)==(c[A+16>>2]|0)){G=Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{G=c[h>>2]|0}if((G|0)==-1){c[l>>2]=0;m=60;break}if(E){p=v}else{break}i=g;return p|0}}while(0);do{if((m|0)==60){if(E){break}else{p=v}i=g;return p|0}}while(0);c[d>>2]=c[d>>2]|2;p=v;i=g;return p|0}function vn(b){b=b|0;var d=0,e=0;d=b+8|0;e=c[d>>2]|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);if((e|0)!=(c[6998]|0)){nb(c[d>>2]|0)}kj(b|0);is(b);return}function wn(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);if((e|0)==(c[6998]|0)){f=b|0;kj(f);return}nb(c[d>>2]|0);f=b|0;kj(f);return}function xn(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=i;i=i+112|0;f=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[f>>2];f=g|0;l=g+8|0;m=l|0;n=f|0;a[n]=37;o=f+1|0;a[o]=j;p=f+2|0;a[p]=k;a[f+3|0]=0;if(!(k<<24>>24==0)){a[o]=k;a[p]=j}j=dc(m|0,100,n|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;l=c[e>>2]|0;if((j|0)==0){q=l;r=b|0;c[r>>2]=q;s=100;t=0;i=g;return}else{u=m;v=l;w=l}while(1){l=a[u]|0;do{if((v|0)==0){x=0;y=w}else{m=v+24|0;j=c[m>>2]|0;if((j|0)==(c[v+28>>2]|0)){e=(Oc[c[(c[v>>2]|0)+52>>2]&31](v,l&255)|0)==-1;x=e?0:v;y=e?0:w;break}else{c[m>>2]=j+1;a[j]=l;x=v;y=w;break}}}while(0);l=u+1|0;if((l|0)==(d|0)){q=y;break}else{u=l;v=x;w=y}}r=b|0;c[r>>2]=q;s=100;t=0;i=g;return}function yn(b){b=b|0;var d=0,e=0;d=b+8|0;e=c[d>>2]|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);if((e|0)!=(c[6998]|0)){nb(c[d>>2]|0)}kj(b|0);is(b);return}function zn(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[46464]|0)==0){if((sb(46464)|0)==0){break}c[6998]=Va(2147483647,10088,0)|0}}while(0);if((e|0)==(c[6998]|0)){f=b|0;kj(f);return}nb(c[d>>2]|0);f=b|0;kj(f);return}function An(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;i=i+408|0;e=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[e>>2];e=f|0;k=f+400|0;l=e|0;c[k>>2]=e+400;Bn(b+8|0,l,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((l|0)==(j|0)){m=k;n=a|0;c[n>>2]=m;o=400;p=0;i=f;return}else{q=l;r=k;s=k}while(1){k=c[q>>2]|0;if((r|0)==0){t=0;u=s}else{l=r+24|0;d=c[l>>2]|0;if((d|0)==(c[r+28>>2]|0)){v=Oc[c[(c[r>>2]|0)+52>>2]&31](r,k)|0}else{c[l>>2]=d+4;c[d>>2]=k;v=k}k=(v|0)==-1;t=k?0:r;u=k?0:s}k=q+4|0;if((k|0)==(j|0)){m=u;break}else{q=k;r=t;s=u}}n=a|0;c[n>>2]=m;o=400;p=0;i=f;return}function Bn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+120|0;k=j|0;l=j+112|0;m=i;i=i+4|0;i=i+7&-8;n=j+8|0;o=k|0;a[o]=37;p=k+1|0;a[p]=g;q=k+2|0;a[q]=h;a[k+3|0]=0;if(!(h<<24>>24==0)){a[p]=h;a[q]=g}g=b|0;dc(n|0,100,o|0,f|0,c[g>>2]|0)|0;c[l>>2]=0;c[l+4>>2]=0;c[m>>2]=n;n=(c[e>>2]|0)-d>>2;f=_b(c[g>>2]|0)|0;g=wr(d,m,n,l)|0;if((f|0)!=0){_b(f|0)|0}if((g|0)==-1){yo(5080)}else{c[e>>2]=d+(g<<2);i=j;return}}function Cn(a){a=a|0;kj(a|0);is(a);return}function Dn(a){a=a|0;kj(a|0);return}function En(a){a=a|0;return 127}function Fn(a){a=a|0;return 127}function Gn(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function Hn(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function In(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function Jn(a,b){a=a|0;b=b|0;Kj(a,1,45);return}function Kn(a){a=a|0;return 0}function Ln(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function Mn(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function Nn(a){a=a|0;kj(a|0);is(a);return}function On(a){a=a|0;kj(a|0);return}function Pn(a){a=a|0;return 127}function Qn(a){a=a|0;return 127}function Rn(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function Sn(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function Tn(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function Un(a,b){a=a|0;b=b|0;Kj(a,1,45);return}function Vn(a){a=a|0;return 0}function Wn(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function Xn(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function Yn(a){a=a|0;kj(a|0);is(a);return}function Zn(a){a=a|0;kj(a|0);return}function _n(a){a=a|0;return 2147483647}function $n(a){a=a|0;return 2147483647}function ao(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function bo(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function co(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function eo(a,b){a=a|0;b=b|0;Vj(a,1,45);return}function fo(a){a=a|0;return 0}function go(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function ho(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function io(a){a=a|0;kj(a|0);is(a);return}function jo(a){a=a|0;kj(a|0);return}function ko(a){a=a|0;return 2147483647}function lo(a){a=a|0;return 2147483647}function mo(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function no(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function oo(a,b){a=a|0;b=b|0;ys(a|0,0,12)|0;return}function po(a,b){a=a|0;b=b|0;Vj(a,1,45);return}function qo(a){a=a|0;return 0}function ro(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function so(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function to(a){a=a|0;kj(a|0);is(a);return}function uo(a){a=a|0;kj(a|0);return}function vo(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=d+160|0;t=d+176|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=192;w=m+100|0;dk(p,h);m=p|0;x=c[m>>2]|0;if(!((c[7384]|0)==-1)){c[l>>2]=29536;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29536,l,116)}l=(c[7385]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(xo(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;Dc[c[(c[z>>2]|0)+32>>2]&15](A,14064,14074,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>98){H=$r(G+2|0)|0;if((H|0)!=0){I=H;J=H;break}ns();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]|0)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+10|0;H=s;L=K;M=F;while(1){N=a[M]|0;O=C;while(1){P=O+1|0;if((a[O]|0)==N<<24>>24){Q=O;break}if((P|0)==(G|0)){Q=G;break}else{O=P}}a[L]=a[14064+(Q-H)|0]|0;O=M+1|0;N=L+1|0;if(O>>>0<(c[o>>2]|0)>>>0){L=N;M=O}else{R=N;break}}}else{R=K}a[R]=0;M=ac(D|0,11144,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}as(J);break}M=mc(8)|0;sj(M,10888);Db(M|0,20344,30)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){S=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){S=z;break}if(!((Fc[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1)){S=z;break}c[A>>2]=0;S=0}}while(0);A=(S|0)==0;z=c[B>>2]|0;do{if((z|0)==0){T=45}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(A){break}else{T=47;break}}if((Fc[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1){c[B>>2]=0;T=45;break}else{if(A){break}else{T=47;break}}}}while(0);if((T|0)==45){if(A){T=47}}if((T|0)==47){c[j>>2]=c[j>>2]|2}c[b>>2]=S;mj(c[m>>2]|0)|0;B=c[u>>2]|0;c[u>>2]=0;if((B|0)==0){U=100;V=0;i=d;return}Ac[c[v>>2]&511](B);U=100;V=0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function wo(a){a=a|0;return}function xo(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0;q=i;i=i+408|0;r=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[r>>2];r=q|0;s=q+400|0;t=i;i=i+1|0;i=i+7&-8;u=i;i=i+1|0;i=i+7&-8;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=r|0;c[s>>2]=0;D=v;ys(D|0,0,12)|0;E=w;ys(E|0,0,12)|0;F=x;ys(F|0,0,12)|0;G=y;ys(G|0,0,12)|0;H=z;ys(H|0,0,12)|0;Bo(g,h,s,t,u,v,w,x,y,A);h=n|0;c[o>>2]=c[h>>2];g=e|0;e=f|0;f=s;s=m+8|0;m=y+1|0;I=y+4|0;J=y+8|0;K=x+1|0;L=x+4|0;M=x+8|0;N=(j&512|0)!=0;j=w+1|0;O=w+8|0;P=w+4|0;Q=z;R=Q+1|0;S=z+8|0;T=z+4|0;U=f+3|0;V=n+4|0;n=v+4|0;W=p;p=192;X=C;Y=C;C=r+400|0;r=0;Z=0;a:while(1){_=c[g>>2]|0;do{if((_|0)==0){$=0}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){$=_;break}if((Fc[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[g>>2]=0;$=0;break}else{$=c[g>>2]|0;break}}}while(0);_=($|0)==0;aa=c[e>>2]|0;do{if((aa|0)==0){ba=15}else{if((c[aa+12>>2]|0)!=(c[aa+16>>2]|0)){if(_){ca=aa;break}else{da=p;ea=X;fa=Y;ga=Z;ba=310;break a}}if((Fc[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)==-1){c[e>>2]=0;ba=15;break}else{if(_){ca=aa;break}else{da=p;ea=X;fa=Y;ga=Z;ba=310;break a}}}}while(0);if((ba|0)==15){ba=0;if(_){da=p;ea=X;fa=Y;ga=Z;ba=310;break}else{ca=0}}b:do{switch(a[f+r|0]|0){case 1:{if((r|0)==3){da=p;ea=X;fa=Y;ga=Z;ba=310;break a}aa=c[g>>2]|0;ha=c[aa+12>>2]|0;if((ha|0)==(c[aa+16>>2]|0)){ia=(Fc[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)&255}else{ia=a[ha]|0}if(!(ia<<24>>24>-1)){ba=41;break a}if((b[(c[s>>2]|0)+(ia<<24>>24<<1)>>1]&8192)==0){ba=41;break a}ha=c[g>>2]|0;aa=ha+12|0;ja=c[aa>>2]|0;if((ja|0)==(c[ha+16>>2]|0)){ka=(Fc[c[(c[ha>>2]|0)+40>>2]&255](ha)|0)&255}else{c[aa>>2]=ja+1;ka=a[ja]|0}Qj(z,ka);ba=42;break};case 0:{ba=42;break};case 3:{ja=a[F]|0;aa=(ja&1)==0;if(aa){la=(ja&255)>>>1}else{la=c[L>>2]|0}ha=a[G]|0;ma=(ha&1)==0;if(ma){na=(ha&255)>>>1}else{na=c[I>>2]|0}if((la|0)==(-na|0)){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break b}if(aa){ua=(ja&255)>>>1}else{ua=c[L>>2]|0}do{if((ua|0)!=0){if(ma){va=(ha&255)>>>1}else{va=c[I>>2]|0}if((va|0)==0){break}wa=c[g>>2]|0;xa=c[wa+12>>2]|0;ya=c[wa+16>>2]|0;if((xa|0)==(ya|0)){za=(Fc[c[(c[wa>>2]|0)+36>>2]&255](wa)|0)&255;Aa=c[g>>2]|0;Ba=za;Ca=a[F]|0;Da=Aa;Ea=c[Aa+12>>2]|0;Fa=c[Aa+16>>2]|0}else{Ba=a[xa]|0;Ca=ja;Da=wa;Ea=xa;Fa=ya}ya=Da+12|0;xa=(Ea|0)==(Fa|0);if(Ba<<24>>24==(a[(Ca&1)==0?K:c[M>>2]|0]|0)){if(xa){Fc[c[(c[Da>>2]|0)+40>>2]&255](Da)|0}else{c[ya>>2]=Ea+1}ya=a[F]|0;if((ya&1)==0){Ga=(ya&255)>>>1}else{Ga=c[L>>2]|0}oa=Ga>>>0>1>>>0?x:Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break b}if(xa){Ha=(Fc[c[(c[Da>>2]|0)+36>>2]&255](Da)|0)&255}else{Ha=a[Ea]|0}if(!(Ha<<24>>24==(a[(a[G]&1)==0?m:c[J>>2]|0]|0))){ba=136;break a}xa=c[g>>2]|0;ya=xa+12|0;wa=c[ya>>2]|0;if((wa|0)==(c[xa+16>>2]|0)){Fc[c[(c[xa>>2]|0)+40>>2]&255](xa)|0}else{c[ya>>2]=wa+1}a[l]=1;wa=a[G]|0;if((wa&1)==0){Ia=(wa&255)>>>1}else{Ia=c[I>>2]|0}oa=Ia>>>0>1>>>0?y:Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break b}}while(0);if(aa){Ja=(ja&255)>>>1}else{Ja=c[L>>2]|0}ma=c[g>>2]|0;wa=c[ma+12>>2]|0;ya=(wa|0)==(c[ma+16>>2]|0);if((Ja|0)==0){if(ya){xa=(Fc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)&255;Ka=xa;La=a[G]|0}else{Ka=a[wa]|0;La=ha}if(!(Ka<<24>>24==(a[(La&1)==0?m:c[J>>2]|0]|0))){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break b}xa=c[g>>2]|0;Aa=xa+12|0;za=c[Aa>>2]|0;if((za|0)==(c[xa+16>>2]|0)){Fc[c[(c[xa>>2]|0)+40>>2]&255](xa)|0}else{c[Aa>>2]=za+1}a[l]=1;za=a[G]|0;if((za&1)==0){Ma=(za&255)>>>1}else{Ma=c[I>>2]|0}oa=Ma>>>0>1>>>0?y:Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break b}if(ya){ya=(Fc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)&255;Na=ya;Oa=a[F]|0}else{Na=a[wa]|0;Oa=ja}if(!(Na<<24>>24==(a[(Oa&1)==0?K:c[M>>2]|0]|0))){a[l]=1;oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break b}wa=c[g>>2]|0;ya=wa+12|0;ma=c[ya>>2]|0;if((ma|0)==(c[wa+16>>2]|0)){Fc[c[(c[wa>>2]|0)+40>>2]&255](wa)|0}else{c[ya>>2]=ma+1}ma=a[F]|0;if((ma&1)==0){Pa=(ma&255)>>>1}else{Pa=c[L>>2]|0}oa=Pa>>>0>1>>>0?x:Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break};case 2:{if(!((Z|0)!=0|r>>>0<2>>>0)){if((r|0)==2){Qa=(a[U]|0)!=0}else{Qa=0}if(!(N|Qa)){oa=0;pa=C;qa=Y;ra=X;sa=p;ta=W;break b}}ma=a[E]|0;ya=(ma&1)==0;wa=ya?j:c[O>>2]|0;c:do{if((r|0)==0){Ra=wa;Sa=ma;Ta=ca;Ua=ca}else{if(!((d[f+(r-1)|0]|0)>>>0<2>>>0)){Ra=wa;Sa=ma;Ta=ca;Ua=ca;break}za=wa+(ya?(ma&255)>>>1:c[P>>2]|0)|0;Aa=wa;while(1){if((Aa|0)==(za|0)){Va=za;break}xa=a[Aa]|0;if(!(xa<<24>>24>-1)){Va=Aa;break}if((b[(c[s>>2]|0)+(xa<<24>>24<<1)>>1]&8192)==0){Va=Aa;break}else{Aa=Aa+1|0}}Aa=Va-wa|0;za=a[H]|0;xa=(za&1)==0;if(xa){Wa=(za&255)>>>1}else{Wa=c[T>>2]|0}if(Aa>>>0>Wa>>>0){Ra=wa;Sa=ma;Ta=ca;Ua=ca;break}if(xa){xa=(za&255)>>>1;Xa=xa;Ya=R;Za=xa-Aa+(Q+1)|0}else{xa=c[S>>2]|0;za=c[T>>2]|0;Xa=za;Ya=xa;Za=xa+(za-Aa)|0}Aa=Ya+Xa|0;if((Za|0)==(Aa|0)){Ra=Va;Sa=ma;Ta=ca;Ua=ca;break}else{_a=Za;$a=wa}while(1){if((a[_a]|0)!=(a[$a]|0)){Ra=wa;Sa=ma;Ta=ca;Ua=ca;break c}za=_a+1|0;if((za|0)==(Aa|0)){Ra=Va;Sa=ma;Ta=ca;Ua=ca;break}else{_a=za;$a=$a+1|0}}}}while(0);d:while(1){if((Sa&1)==0){ab=(Sa&255)>>>1;bb=j}else{ab=c[P>>2]|0;bb=c[O>>2]|0}if((Ra|0)==(bb+ab|0)){break}ma=c[g>>2]|0;do{if((ma|0)==0){cb=0}else{if((c[ma+12>>2]|0)!=(c[ma+16>>2]|0)){cb=ma;break}if((Fc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)==-1){c[g>>2]=0;cb=0;break}else{cb=c[g>>2]|0;break}}}while(0);ma=(cb|0)==0;do{if((Ta|0)==0){db=Ua;ba=173}else{if((c[Ta+12>>2]|0)!=(c[Ta+16>>2]|0)){if(ma){eb=Ta;fb=Ua;break}else{break d}}if((Fc[c[(c[Ta>>2]|0)+36>>2]&255](Ta)|0)==-1){c[e>>2]=0;db=0;ba=173;break}else{if(ma^(Ua|0)==0){eb=Ua;fb=Ua;break}else{break d}}}}while(0);if((ba|0)==173){ba=0;if(ma){break}else{eb=0;fb=db}}wa=c[g>>2]|0;ya=c[wa+12>>2]|0;if((ya|0)==(c[wa+16>>2]|0)){gb=(Fc[c[(c[wa>>2]|0)+36>>2]&255](wa)|0)&255}else{gb=a[ya]|0}if(!(gb<<24>>24==(a[Ra]|0))){break}ya=c[g>>2]|0;wa=ya+12|0;ja=c[wa>>2]|0;if((ja|0)==(c[ya+16>>2]|0)){Fc[c[(c[ya>>2]|0)+40>>2]&255](ya)|0}else{c[wa>>2]=ja+1}Ra=Ra+1|0;Sa=a[E]|0;Ta=eb;Ua=fb}if(!N){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break b}ja=a[E]|0;if((ja&1)==0){hb=(ja&255)>>>1;ib=j}else{hb=c[P>>2]|0;ib=c[O>>2]|0}if((Ra|0)==(ib+hb|0)){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W}else{ba=189;break a}break};case 4:{ja=0;wa=C;ya=Y;ha=X;aa=p;Aa=W;e:while(1){za=c[g>>2]|0;do{if((za|0)==0){jb=0}else{if((c[za+12>>2]|0)!=(c[za+16>>2]|0)){jb=za;break}if((Fc[c[(c[za>>2]|0)+36>>2]&255](za)|0)==-1){c[g>>2]=0;jb=0;break}else{jb=c[g>>2]|0;break}}}while(0);za=(jb|0)==0;ma=c[e>>2]|0;do{if((ma|0)==0){ba=202}else{if((c[ma+12>>2]|0)!=(c[ma+16>>2]|0)){if(za){break}else{break e}}if((Fc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)==-1){c[e>>2]=0;ba=202;break}else{if(za){break}else{break e}}}}while(0);if((ba|0)==202){ba=0;if(za){break}}ma=c[g>>2]|0;xa=c[ma+12>>2]|0;if((xa|0)==(c[ma+16>>2]|0)){kb=(Fc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)&255}else{kb=a[xa]|0}do{if(kb<<24>>24>-1){if((b[(c[s>>2]|0)+(kb<<24>>24<<1)>>1]&2048)==0){ba=221;break}xa=c[o>>2]|0;if((xa|0)==(Aa|0)){ma=(c[V>>2]|0)!=192;lb=c[h>>2]|0;mb=Aa-lb|0;nb=mb>>>0<2147483647>>>0?mb<<1:-1;ob=bs(ma?lb:0,nb)|0;if((ob|0)==0){ns()}do{if(ma){c[h>>2]=ob;pb=ob}else{lb=c[h>>2]|0;c[h>>2]=ob;if((lb|0)==0){pb=ob;break}Ac[c[V>>2]&511](lb);pb=c[h>>2]|0}}while(0);c[V>>2]=90;ob=pb+mb|0;c[o>>2]=ob;qb=(c[h>>2]|0)+nb|0;rb=ob}else{qb=Aa;rb=xa}c[o>>2]=rb+1;a[rb]=kb;sb=ja+1|0;tb=wa;ub=ya;vb=ha;wb=aa;xb=qb}else{ba=221}}while(0);if((ba|0)==221){ba=0;za=a[D]|0;if((za&1)==0){yb=(za&255)>>>1}else{yb=c[n>>2]|0}if((yb|0)==0|(ja|0)==0){break}if(!(kb<<24>>24==(a[u]|0))){break}if((ya|0)==(wa|0)){za=ya-ha|0;ob=za>>>0<2147483647>>>0?za<<1:-1;if((aa|0)==192){zb=0}else{zb=ha}ma=bs(zb,ob)|0;lb=ma;if((ma|0)==0){ns()}Ab=lb+(ob>>>2<<2)|0;Bb=lb+(za>>2<<2)|0;Cb=lb;Db=90}else{Ab=wa;Bb=ya;Cb=ha;Db=aa}c[Bb>>2]=ja;sb=0;tb=Ab;ub=Bb+4|0;vb=Cb;wb=Db;xb=Aa}lb=c[g>>2]|0;za=lb+12|0;ob=c[za>>2]|0;if((ob|0)==(c[lb+16>>2]|0)){Fc[c[(c[lb>>2]|0)+40>>2]&255](lb)|0;ja=sb;wa=tb;ya=ub;ha=vb;aa=wb;Aa=xb;continue}else{c[za>>2]=ob+1;ja=sb;wa=tb;ya=ub;ha=vb;aa=wb;Aa=xb;continue}}if((ha|0)==(ya|0)|(ja|0)==0){Eb=wa;Fb=ya;Gb=ha;Hb=aa}else{if((ya|0)==(wa|0)){ob=ya-ha|0;za=ob>>>0<2147483647>>>0?ob<<1:-1;if((aa|0)==192){Ib=0}else{Ib=ha}lb=bs(Ib,za)|0;ma=lb;if((lb|0)==0){ns()}Jb=ma+(za>>>2<<2)|0;Kb=ma+(ob>>2<<2)|0;Lb=ma;Mb=90}else{Jb=wa;Kb=ya;Lb=ha;Mb=aa}c[Kb>>2]=ja;Eb=Jb;Fb=Kb+4|0;Gb=Lb;Hb=Mb}if((c[A>>2]|0)>0){ma=c[g>>2]|0;do{if((ma|0)==0){Nb=0}else{if((c[ma+12>>2]|0)!=(c[ma+16>>2]|0)){Nb=ma;break}if((Fc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)==-1){c[g>>2]=0;Nb=0;break}else{Nb=c[g>>2]|0;break}}}while(0);ma=(Nb|0)==0;ja=c[e>>2]|0;do{if((ja|0)==0){ba=257}else{if((c[ja+12>>2]|0)!=(c[ja+16>>2]|0)){if(ma){Ob=ja;break}else{ba=264;break a}}if((Fc[c[(c[ja>>2]|0)+36>>2]&255](ja)|0)==-1){c[e>>2]=0;ba=257;break}else{if(ma){Ob=ja;break}else{ba=264;break a}}}}while(0);if((ba|0)==257){ba=0;if(ma){ba=264;break a}else{Ob=0}}ja=c[g>>2]|0;aa=c[ja+12>>2]|0;if((aa|0)==(c[ja+16>>2]|0)){Pb=(Fc[c[(c[ja>>2]|0)+36>>2]&255](ja)|0)&255}else{Pb=a[aa]|0}if(!(Pb<<24>>24==(a[t]|0))){ba=264;break a}aa=c[g>>2]|0;ja=aa+12|0;ha=c[ja>>2]|0;if((ha|0)==(c[aa+16>>2]|0)){Fc[c[(c[aa>>2]|0)+40>>2]&255](aa)|0;Qb=Aa;Rb=Ob;Sb=Ob}else{c[ja>>2]=ha+1;Qb=Aa;Rb=Ob;Sb=Ob}while(1){ha=c[g>>2]|0;do{if((ha|0)==0){Tb=0}else{if((c[ha+12>>2]|0)!=(c[ha+16>>2]|0)){Tb=ha;break}if((Fc[c[(c[ha>>2]|0)+36>>2]&255](ha)|0)==-1){c[g>>2]=0;Tb=0;break}else{Tb=c[g>>2]|0;break}}}while(0);ha=(Tb|0)==0;do{if((Rb|0)==0){Ub=Sb;ba=280}else{if((c[Rb+12>>2]|0)!=(c[Rb+16>>2]|0)){if(ha){Vb=Sb;Wb=Rb;break}else{ba=288;break a}}if((Fc[c[(c[Rb>>2]|0)+36>>2]&255](Rb)|0)==-1){c[e>>2]=0;Ub=0;ba=280;break}else{if(ha^(Sb|0)==0){Vb=Sb;Wb=Sb;break}else{ba=288;break a}}}}while(0);if((ba|0)==280){ba=0;if(ha){ba=288;break a}else{Vb=Ub;Wb=0}}ja=c[g>>2]|0;aa=c[ja+12>>2]|0;if((aa|0)==(c[ja+16>>2]|0)){Xb=(Fc[c[(c[ja>>2]|0)+36>>2]&255](ja)|0)&255}else{Xb=a[aa]|0}if(!(Xb<<24>>24>-1)){ba=288;break a}if((b[(c[s>>2]|0)+(Xb<<24>>24<<1)>>1]&2048)==0){ba=288;break a}aa=c[o>>2]|0;if((aa|0)==(Qb|0)){ja=(c[V>>2]|0)!=192;ya=c[h>>2]|0;wa=Qb-ya|0;ob=wa>>>0<2147483647>>>0?wa<<1:-1;za=bs(ja?ya:0,ob)|0;if((za|0)==0){ns()}do{if(ja){c[h>>2]=za;Yb=za}else{ya=c[h>>2]|0;c[h>>2]=za;if((ya|0)==0){Yb=za;break}Ac[c[V>>2]&511](ya);Yb=c[h>>2]|0}}while(0);c[V>>2]=90;za=Yb+wa|0;c[o>>2]=za;Zb=(c[h>>2]|0)+ob|0;_b=za}else{Zb=Qb;_b=aa}za=c[g>>2]|0;ja=c[za+12>>2]|0;if((ja|0)==(c[za+16>>2]|0)){ha=(Fc[c[(c[za>>2]|0)+36>>2]&255](za)|0)&255;$b=ha;ac=c[o>>2]|0}else{$b=a[ja]|0;ac=_b}c[o>>2]=ac+1;a[ac]=$b;ja=(c[A>>2]|0)-1|0;c[A>>2]=ja;ha=c[g>>2]|0;za=ha+12|0;ya=c[za>>2]|0;if((ya|0)==(c[ha+16>>2]|0)){Fc[c[(c[ha>>2]|0)+40>>2]&255](ha)|0}else{c[za>>2]=ya+1}if((ja|0)>0){Qb=Zb;Rb=Wb;Sb=Vb}else{bc=Zb;break}}}else{bc=Aa}if((c[o>>2]|0)==(c[h>>2]|0)){ba=308;break a}else{oa=Z;pa=Eb;qa=Fb;ra=Gb;sa=Hb;ta=bc}break};default:{oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W}}}while(0);f:do{if((ba|0)==42){ba=0;if((r|0)==3){da=p;ea=X;fa=Y;ga=Z;ba=310;break a}else{cc=ca;dc=ca}while(1){_=c[g>>2]|0;do{if((_|0)==0){ec=0}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){ec=_;break}if((Fc[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[g>>2]=0;ec=0;break}else{ec=c[g>>2]|0;break}}}while(0);_=(ec|0)==0;do{if((cc|0)==0){fc=dc;ba=55}else{if((c[cc+12>>2]|0)!=(c[cc+16>>2]|0)){if(_){gc=cc;hc=dc;break}else{oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break f}}if((Fc[c[(c[cc>>2]|0)+36>>2]&255](cc)|0)==-1){c[e>>2]=0;fc=0;ba=55;break}else{if(_^(dc|0)==0){gc=dc;hc=dc;break}else{oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break f}}}}while(0);if((ba|0)==55){ba=0;if(_){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break f}else{gc=0;hc=fc}}aa=c[g>>2]|0;ob=c[aa+12>>2]|0;if((ob|0)==(c[aa+16>>2]|0)){ic=(Fc[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)&255}else{ic=a[ob]|0}if(!(ic<<24>>24>-1)){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break f}if((b[(c[s>>2]|0)+(ic<<24>>24<<1)>>1]&8192)==0){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=W;break f}ob=c[g>>2]|0;aa=ob+12|0;wa=c[aa>>2]|0;if((wa|0)==(c[ob+16>>2]|0)){jc=(Fc[c[(c[ob>>2]|0)+40>>2]&255](ob)|0)&255}else{c[aa>>2]=wa+1;jc=a[wa]|0}Qj(z,jc);cc=gc;dc=hc}}}while(0);Aa=r+1|0;if(Aa>>>0<4>>>0){W=ta;p=sa;X=ra;Y=qa;C=pa;r=Aa;Z=oa}else{da=sa;ea=ra;fa=qa;ga=oa;ba=310;break}}g:do{if((ba|0)==41){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==136){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==189){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==264){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==288){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==308){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==310){h:do{if((ga|0)!=0){oa=ga;qa=ga+1|0;ra=ga+8|0;sa=ga+4|0;Z=1;i:while(1){r=a[oa]|0;if((r&1)==0){nc=(r&255)>>>1}else{nc=c[sa>>2]|0}if(!(Z>>>0<nc>>>0)){break h}r=c[g>>2]|0;do{if((r|0)==0){oc=0}else{if((c[r+12>>2]|0)!=(c[r+16>>2]|0)){oc=r;break}if((Fc[c[(c[r>>2]|0)+36>>2]&255](r)|0)==-1){c[g>>2]=0;oc=0;break}else{oc=c[g>>2]|0;break}}}while(0);r=(oc|0)==0;_=c[e>>2]|0;do{if((_|0)==0){ba=328}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){if(r){break}else{break i}}if((Fc[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[e>>2]=0;ba=328;break}else{if(r){break}else{break i}}}}while(0);if((ba|0)==328){ba=0;if(r){break}}_=c[g>>2]|0;pa=c[_+12>>2]|0;if((pa|0)==(c[_+16>>2]|0)){pc=(Fc[c[(c[_>>2]|0)+36>>2]&255](_)|0)&255}else{pc=a[pa]|0}if((a[oa]&1)==0){qc=qa}else{qc=c[ra>>2]|0}if(!(pc<<24>>24==(a[qc+Z|0]|0))){break}pa=Z+1|0;_=c[g>>2]|0;C=_+12|0;Y=c[C>>2]|0;if((Y|0)==(c[_+16>>2]|0)){Fc[c[(c[_>>2]|0)+40>>2]&255](_)|0;Z=pa;continue}else{c[C>>2]=Y+1;Z=pa;continue}}c[k>>2]=c[k>>2]|4;kc=0;lc=ea;mc=da;break g}}while(0);if((ea|0)==(fa|0)){kc=1;lc=fa;mc=da;break}c[B>>2]=0;Co(v,ea,fa,B);if((c[B>>2]|0)==0){kc=1;lc=ea;mc=da;break}c[k>>2]=c[k>>2]|4;kc=0;lc=ea;mc=da}}while(0);Lj(z);Lj(y);Lj(x);Lj(w);Lj(v);if((lc|0)==0){rc=400;sc=0;i=q;return kc|0}Ac[mc&511](lc);rc=400;sc=0;i=q;return kc|0}function yo(a){a=a|0;var b=0;b=mc(8)|0;sj(b,a);Db(b|0,20344,30)}function zo(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+160|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=192;u=m+100|0;dk(p,h);m=p|0;v=c[m>>2]|0;if(!((c[7384]|0)==-1)){c[l>>2]=29536;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29536,l,116)}l=(c[7385]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(xo(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){a[k+1|0]=0;a[B]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}B=x;if((a[q]|0)!=0){Qj(k,Oc[c[(c[B>>2]|0)+28>>2]&31](y,45)|0)}x=Oc[c[(c[B>>2]|0)+28>>2]&31](y,48)|0;y=c[s>>2]|0;B=c[o>>2]|0;C=B-1|0;a:do{if(y>>>0<C>>>0){D=y;while(1){E=D+1|0;if(!((a[D]|0)==x<<24>>24)){F=D;break a}if(E>>>0<C>>>0){D=E}else{F=E;break}}}else{F=y}}while(0);Ao(k,F,B)|0}y=e|0;C=c[y>>2]|0;do{if((C|0)==0){G=0}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){G=C;break}if(!((Fc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1)){G=C;break}c[y>>2]=0;G=0}}while(0);y=(G|0)==0;do{if((A|0)==0){H=33}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(y){break}else{H=35;break}}if((Fc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[z>>2]=0;H=33;break}else{if(y^(A|0)==0){break}else{H=35;break}}}}while(0);if((H|0)==33){if(y){H=35}}if((H|0)==35){c[j>>2]=c[j>>2]|2}c[b>>2]=G;mj(c[m>>2]|0)|0;A=c[s>>2]|0;c[s>>2]=0;if((A|0)==0){I=100;J=0;i=d;return}Ac[c[t>>2]&511](A);I=100;J=0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}function Ao(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;g=d;h=a[f]|0;if((h&1)==0){i=10;j=h;k=(h&255)>>>1}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255;k=c[b+4>>2]|0}h=e-g|0;if((e|0)==(d|0)){return b|0}if((i-k|0)>>>0<h>>>0){Tj(b,i,k+h-i|0,k,k,0,0);l=a[f]|0}else{l=j}if((l&1)==0){m=b+1|0}else{m=c[b+8>>2]|0}l=e+(k-g)|0;g=d;d=m+k|0;while(1){a[d]=a[g]|0;j=g+1|0;if((j|0)==(e|0)){break}else{g=j;d=d+1|0}}a[m+l|0]=0;l=k+h|0;if((a[f]&1)==0){a[f]=l<<1;return b|0}else{c[b+4>>2]=l;return b|0}return 0}function Bo(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;t=n+72|0;u=n+88|0;v=n+104|0;w=n+112|0;x=n+128|0;y=n+144|0;z=n+160|0;if(b){b=c[d>>2]|0;if(!((c[7502]|0)==-1)){c[p>>2]=30008;c[p+4>>2]=16;c[p+8>>2]=0;Gj(30008,p,116)}p=(c[7503]|0)-1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>p>>>0)){B=mc(4)|0;D=B;Gr(D);Db(B|0,20328,156)}b=c[A+(p<<2)>>2]|0;if((b|0)==0){B=mc(4)|0;D=B;Gr(D);Db(B|0,20328,156)}B=b;Bc[c[(c[b>>2]|0)+44>>2]&127](q,B);D=e;C=c[q>>2]|0;a[D]=C;C=C>>8;a[D+1|0]=C;C=C>>8;a[D+2|0]=C;C=C>>8;a[D+3|0]=C;D=b;Bc[c[(c[D>>2]|0)+32>>2]&127](r,B);q=l;if((a[q]&1)==0){a[l+1|0]=0;a[q]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Pj(l,0);p=r;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];ys(p|0,0,12)|0;Lj(r);Bc[c[(c[D>>2]|0)+28>>2]&127](s,B);r=k;if((a[r]&1)==0){a[k+1|0]=0;a[r]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Pj(k,0);p=s;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];ys(p|0,0,12)|0;Lj(s);s=b;a[f]=Fc[c[(c[s>>2]|0)+12>>2]&255](B)|0;a[g]=Fc[c[(c[s>>2]|0)+16>>2]&255](B)|0;Bc[c[(c[D>>2]|0)+20>>2]&127](t,B);s=h;if((a[s]&1)==0){a[h+1|0]=0;a[s]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Pj(h,0);p=t;c[s>>2]=c[p>>2];c[s+4>>2]=c[p+4>>2];c[s+8>>2]=c[p+8>>2];ys(p|0,0,12)|0;Lj(t);Bc[c[(c[D>>2]|0)+24>>2]&127](u,B);D=j;if((a[D]&1)==0){a[j+1|0]=0;a[D]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Pj(j,0);t=u;c[D>>2]=c[t>>2];c[D+4>>2]=c[t+4>>2];c[D+8>>2]=c[t+8>>2];ys(t|0,0,12)|0;Lj(u);E=Fc[c[(c[b>>2]|0)+36>>2]&255](B)|0;c[m>>2]=E;i=n;return}else{B=c[d>>2]|0;if(!((c[7504]|0)==-1)){c[o>>2]=30016;c[o+4>>2]=16;c[o+8>>2]=0;Gj(30016,o,116)}o=(c[7505]|0)-1|0;d=c[B+8>>2]|0;if(!((c[B+12>>2]|0)-d>>2>>>0>o>>>0)){F=mc(4)|0;G=F;Gr(G);Db(F|0,20328,156)}B=c[d+(o<<2)>>2]|0;if((B|0)==0){F=mc(4)|0;G=F;Gr(G);Db(F|0,20328,156)}F=B;Bc[c[(c[B>>2]|0)+44>>2]&127](v,F);G=e;C=c[v>>2]|0;a[G]=C;C=C>>8;a[G+1|0]=C;C=C>>8;a[G+2|0]=C;C=C>>8;a[G+3|0]=C;G=B;Bc[c[(c[G>>2]|0)+32>>2]&127](w,F);v=l;if((a[v]&1)==0){a[l+1|0]=0;a[v]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Pj(l,0);l=w;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];ys(l|0,0,12)|0;Lj(w);Bc[c[(c[G>>2]|0)+28>>2]&127](x,F);w=k;if((a[w]&1)==0){a[k+1|0]=0;a[w]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Pj(k,0);k=x;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];ys(k|0,0,12)|0;Lj(x);x=B;a[f]=Fc[c[(c[x>>2]|0)+12>>2]&255](F)|0;a[g]=Fc[c[(c[x>>2]|0)+16>>2]&255](F)|0;Bc[c[(c[G>>2]|0)+20>>2]&127](y,F);x=h;if((a[x]&1)==0){a[h+1|0]=0;a[x]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Pj(h,0);h=y;c[x>>2]=c[h>>2];c[x+4>>2]=c[h+4>>2];c[x+8>>2]=c[h+8>>2];ys(h|0,0,12)|0;Lj(y);Bc[c[(c[G>>2]|0)+24>>2]&127](z,F);G=j;if((a[G]&1)==0){a[j+1|0]=0;a[G]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Pj(j,0);j=z;c[G>>2]=c[j>>2];c[G+4>>2]=c[j+4>>2];c[G+8>>2]=c[j+8>>2];ys(j|0,0,12)|0;Lj(z);E=Fc[c[(c[B>>2]|0)+36>>2]&255](F)|0;c[m>>2]=E;i=n;return}}function Co(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=b;h=a[g]|0;if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}if((i|0)==0){return}do{if((d|0)==(e|0)){j=h}else{i=e-4|0;if(i>>>0>d>>>0){k=d;l=i}else{j=h;break}do{i=c[k>>2]|0;c[k>>2]=c[l>>2];c[l>>2]=i;k=k+4|0;l=l-4|0;}while(k>>>0<l>>>0);j=a[g]|0}}while(0);if((j&1)==0){m=(j&255)>>>1;n=b+1|0}else{m=c[b+4>>2]|0;n=c[b+8>>2]|0}b=e-4|0;e=a[n]|0;j=e<<24>>24<1|e<<24>>24==127;a:do{if(b>>>0>d>>>0){g=n+m|0;l=n;k=d;h=e;i=j;while(1){if(!i){if((h<<24>>24|0)!=(c[k>>2]|0)){break}}o=(g-l|0)>1?l+1|0:l;p=k+4|0;q=a[o]|0;r=q<<24>>24<1|q<<24>>24==127;if(p>>>0<b>>>0){l=o;k=p;h=q;i=r}else{s=q;t=r;break a}}c[f>>2]=4;return}else{s=e;t=j}}while(0);if(t){return}t=c[b>>2]|0;if(!(s<<24>>24>>>0<t>>>0|(t|0)==0)){return}c[f>>2]=4;return}function Do(a){a=a|0;kj(a|0);is(a);return}function Eo(a){a=a|0;kj(a|0);return}function Fo(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+600|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=d+456|0;t=d+496|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=192;w=m+400|0;dk(p,h);m=p|0;x=c[m>>2]|0;if(!((c[7382]|0)==-1)){c[l>>2]=29528;c[l+4>>2]=16;c[l+8>>2]=0;Gj(29528,l,116)}l=(c[7383]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(Go(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;Dc[c[(c[z>>2]|0)+48>>2]&15](A,14048,14058,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>392){H=$r((G>>2)+2|0)|0;if((H|0)!=0){I=H;J=H;break}ns();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]|0)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+40|0;H=s;L=K;M=F;while(1){N=c[M>>2]|0;O=C;while(1){P=O+4|0;if((c[O>>2]|0)==(N|0)){Q=O;break}if((P|0)==(G|0)){Q=G;break}else{O=P}}a[L]=a[14048+(Q-H>>2)|0]|0;O=M+4|0;N=L+1|0;if(O>>>0<(c[o>>2]|0)>>>0){L=N;M=O}else{R=N;break}}}else{R=K}a[R]=0;M=ac(D|0,11144,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}as(J);break}M=mc(8)|0;sj(M,10888);Db(M|0,20344,30)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){S=1}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){T=Fc[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{T=c[M>>2]|0}if((T|0)==-1){c[A>>2]=0;S=1;break}else{S=(c[A>>2]|0)==0;break}}}while(0);z=c[B>>2]|0;do{if((z|0)==0){U=47}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){V=Fc[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{V=c[M>>2]|0}if((V|0)==-1){c[B>>2]=0;U=47;break}else{if(S){break}else{U=49;break}}}}while(0);if((U|0)==47){if(S){U=49}}if((U|0)==49){c[j>>2]=c[j>>2]|2}c[b>>2]=c[A>>2];mj(c[m>>2]|0)|0;B=c[u>>2]|0;c[u>>2]=0;if((B|0)==0){W=400;X=0;i=d;return}Ac[c[v>>2]&511](B);W=400;X=0;i=d;return}}while(0);d=mc(4)|0;Gr(d);Db(d|0,20328,156)}



function gg(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;f=a+8|0;g=a+12|0;h=a+16|0;i=a+20|0;j=a+88|0;k=a+92|0;l=a+96|0;m=a+100|0;n=a+104|0;o=a+108|0;p=a+112|0;q=a+116|0;r=a+120|0;s=a+124|0;t=a+128|0;u=a+132|0;v=a+136|0;w=a+140|0;x=a+144|0;y=a+148|0;a=e;e=b;b=c[f>>2]|0;z=c[g>>2]|0;A=c[i>>2]|0;B=c[h>>2]|0;do{C=(d[e+1|0]|0)<<8|(d[e]|0)|(d[e+2|0]|0)<<16|(d[e+3|0]|0)<<24;c[j>>2]=C;D=b-680876936+(z&(A^B)^A)+C|0;C=(D<<7|D>>>25)+z|0;D=(d[e+5|0]|0)<<8|(d[e+4|0]|0)|(d[e+6|0]|0)<<16|(d[e+7|0]|0)<<24;c[k>>2]=D;E=A-389564586+D+(C&(z^B)^B)|0;D=(E<<12|E>>>20)+C|0;E=(d[e+9|0]|0)<<8|(d[e+8|0]|0)|(d[e+10|0]|0)<<16|(d[e+11|0]|0)<<24;c[l>>2]=E;F=B+606105819+E+(D&(C^z)^z)|0;E=(F<<17|F>>>15)+D|0;F=(d[e+13|0]|0)<<8|(d[e+12|0]|0)|(d[e+14|0]|0)<<16|(d[e+15|0]|0)<<24;c[m>>2]=F;G=z-1044525330+F+(E&(D^C)^C)|0;F=(G<<22|G>>>10)+E|0;G=(d[e+17|0]|0)<<8|(d[e+16|0]|0)|(d[e+18|0]|0)<<16|(d[e+19|0]|0)<<24;c[n>>2]=G;H=C-176418897+G+(F&(E^D)^D)|0;G=(H<<7|H>>>25)+F|0;H=(d[e+21|0]|0)<<8|(d[e+20|0]|0)|(d[e+22|0]|0)<<16|(d[e+23|0]|0)<<24;c[o>>2]=H;C=D+1200080426+H+(G&(F^E)^E)|0;H=(C<<12|C>>>20)+G|0;C=(d[e+25|0]|0)<<8|(d[e+24|0]|0)|(d[e+26|0]|0)<<16|(d[e+27|0]|0)<<24;c[p>>2]=C;D=E-1473231341+C+(H&(G^F)^F)|0;C=(D<<17|D>>>15)+H|0;D=(d[e+29|0]|0)<<8|(d[e+28|0]|0)|(d[e+30|0]|0)<<16|(d[e+31|0]|0)<<24;c[q>>2]=D;E=F-45705983+D+(C&(H^G)^G)|0;D=(E<<22|E>>>10)+C|0;E=(d[e+33|0]|0)<<8|(d[e+32|0]|0)|(d[e+34|0]|0)<<16|(d[e+35|0]|0)<<24;c[r>>2]=E;F=G+1770035416+E+(D&(C^H)^H)|0;E=(F<<7|F>>>25)+D|0;F=(d[e+37|0]|0)<<8|(d[e+36|0]|0)|(d[e+38|0]|0)<<16|(d[e+39|0]|0)<<24;c[s>>2]=F;G=H-1958414417+F+(E&(D^C)^C)|0;F=(G<<12|G>>>20)+E|0;G=(d[e+41|0]|0)<<8|(d[e+40|0]|0)|(d[e+42|0]|0)<<16|(d[e+43|0]|0)<<24;c[t>>2]=G;H=G-42063+C+(F&(E^D)^D)|0;C=(H<<17|H>>>15)+F|0;H=(d[e+45|0]|0)<<8|(d[e+44|0]|0)|(d[e+46|0]|0)<<16|(d[e+47|0]|0)<<24;c[u>>2]=H;G=H-1990404162+D+(C&(F^E)^E)|0;D=(G<<22|G>>>10)+C|0;G=(d[e+49|0]|0)<<8|(d[e+48|0]|0)|(d[e+50|0]|0)<<16|(d[e+51|0]|0)<<24;c[v>>2]=G;H=G+1804603682+E+(D&(C^F)^F)|0;E=(H<<7|H>>>25)+D|0;H=(d[e+53|0]|0)<<8|(d[e+52|0]|0)|(d[e+54|0]|0)<<16|(d[e+55|0]|0)<<24;c[w>>2]=H;G=H-40341101+F+(E&(D^C)^C)|0;F=(G<<12|G>>>20)+E|0;G=(d[e+57|0]|0)<<8|(d[e+56|0]|0)|(d[e+58|0]|0)<<16|(d[e+59|0]|0)<<24;c[x>>2]=G;H=G-1502002290+C+(F&(E^D)^D)|0;C=(H<<17|H>>>15)+F|0;H=(d[e+61|0]|0)<<8|(d[e+60|0]|0)|(d[e+62|0]|0)<<16|(d[e+63|0]|0)<<24;c[y>>2]=H;G=H+1236535329+D+(C&(F^E)^E)|0;D=(G<<22|G>>>10)+C|0;G=c[k>>2]|0;I=G-165796510+E+((D^C)&F^C)|0;E=(I<<5|I>>>27)+D|0;I=c[p>>2]|0;J=I-1069501632+F+((E^D)&C^D)|0;F=(J<<9|J>>>23)+E|0;J=c[u>>2]|0;K=J+643717713+C+((F^E)&D^E)|0;C=(K<<14|K>>>18)+F|0;K=c[j>>2]|0;L=K-373897302+D+((C^F)&E^F)|0;D=(L<<20|L>>>12)+C|0;L=c[o>>2]|0;M=L-701558691+E+((D^C)&F^C)|0;E=(M<<5|M>>>27)+D|0;M=c[t>>2]|0;N=M+38016083+F+((E^D)&C^D)|0;F=(N<<9|N>>>23)+E|0;N=H-660478335+C+((F^E)&D^E)|0;C=(N<<14|N>>>18)+F|0;N=c[n>>2]|0;O=N-405537848+D+((C^F)&E^F)|0;D=(O<<20|O>>>12)+C|0;O=c[s>>2]|0;P=O+568446438+E+((D^C)&F^C)|0;E=(P<<5|P>>>27)+D|0;P=c[x>>2]|0;Q=P-1019803690+F+((E^D)&C^D)|0;F=(Q<<9|Q>>>23)+E|0;Q=c[m>>2]|0;R=Q-187363961+C+((F^E)&D^E)|0;C=(R<<14|R>>>18)+F|0;R=c[r>>2]|0;S=R+1163531501+D+((C^F)&E^F)|0;D=(S<<20|S>>>12)+C|0;S=c[w>>2]|0;T=S-1444681467+E+((D^C)&F^C)|0;E=(T<<5|T>>>27)+D|0;T=c[l>>2]|0;U=T-51403784+F+((E^D)&C^D)|0;F=(U<<9|U>>>23)+E|0;U=c[q>>2]|0;V=U+1735328473+C+((F^E)&D^E)|0;C=(V<<14|V>>>18)+F|0;V=C^F;W=c[v>>2]|0;X=W-1926607734+D+(V&E^F)|0;D=(X<<20|X>>>12)+C|0;X=L-378558+E+(V^D)|0;V=(X<<4|X>>>28)+D|0;X=R-2022574463+F+(D^C^V)|0;F=(X<<11|X>>>21)+V|0;X=J+1839030562+C+(V^D^F)|0;C=(X<<16|X>>>16)+F|0;X=P-35309556+D+(F^V^C)|0;D=(X<<23|X>>>9)+C|0;X=G-1530992060+V+(C^F^D)|0;V=(X<<4|X>>>28)+D|0;X=N+1272893353+F+(D^C^V)|0;F=(X<<11|X>>>21)+V|0;X=U-155497632+C+(V^D^F)|0;C=(X<<16|X>>>16)+F|0;X=M-1094730640+D+(F^V^C)|0;D=(X<<23|X>>>9)+C|0;X=S+681279174+V+(C^F^D)|0;V=(X<<4|X>>>28)+D|0;X=K-358537222+F+(D^C^V)|0;F=(X<<11|X>>>21)+V|0;X=Q-722521979+C+(V^D^F)|0;C=(X<<16|X>>>16)+F|0;X=I+76029189+D+(F^V^C)|0;D=(X<<23|X>>>9)+C|0;X=O-640364487+V+(C^F^D)|0;V=(X<<4|X>>>28)+D|0;X=W-421815835+F+(D^C^V)|0;F=(X<<11|X>>>21)+V|0;X=H+530742520+C+(V^D^F)|0;C=(X<<16|X>>>16)+F|0;X=T-995338651+D+(F^V^C)|0;D=(X<<23|X>>>9)+C|0;X=K-198630844+V+((D|~F)^C)|0;V=(X<<6|X>>>26)+D|0;X=U+1126891415+F+((V|~C)^D)|0;F=(X<<10|X>>>22)+V|0;X=P-1416354905+C+((F|~D)^V)|0;C=(X<<15|X>>>17)+F|0;X=L-57434055+D+((C|~V)^F)|0;D=(X<<21|X>>>11)+C|0;X=W+1700485571+V+((D|~F)^C)|0;V=(X<<6|X>>>26)+D|0;X=Q-1894986606+F+((V|~C)^D)|0;F=(X<<10|X>>>22)+V|0;X=M-1051523+C+((F|~D)^V)|0;C=(X<<15|X>>>17)+F|0;X=G-2054922799+D+((C|~V)^F)|0;D=(X<<21|X>>>11)+C|0;X=R+1873313359+V+((D|~F)^C)|0;V=(X<<6|X>>>26)+D|0;X=H-30611744+F+((V|~C)^D)|0;F=(X<<10|X>>>22)+V|0;X=I-1560198380+C+((F|~D)^V)|0;C=(X<<15|X>>>17)+F|0;X=S+1309151649+D+((C|~V)^F)|0;D=(X<<21|X>>>11)+C|0;X=N-145523070+V+((D|~F)^C)|0;V=(X<<6|X>>>26)+D|0;X=J-1120210379+F+((V|~C)^D)|0;F=(X<<10|X>>>22)+V|0;X=T+718787259+C+((F|~D)^V)|0;C=(X<<15|X>>>17)+F|0;X=O-343485551+D+((C|~V)^F)|0;b=V+b|0;z=C+z+(X<<21|X>>>11)|0;B=C+B|0;A=F+A|0;e=e+64|0;a=a-64|0;}while((a|0)!=0);c[f>>2]=b;c[g>>2]=z;c[h>>2]=B;c[i>>2]=A;return e|0}function hg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=d|0;f=c[e>>2]&63;g=f+1|0;h=d+24|0;a[d+24+f|0]=-128;i=f^63;if(i>>>0<8>>>0){ys(d+24+g|0,0,i|0)|0;f=h|0;gg(d,f,64)|0;j=56;k=0;l=f}else{j=i-8|0;k=g;l=h|0}ys(d+24+k|0,0,j|0)|0;j=c[e>>2]|0;k=j<<3;c[e>>2]=k;a[d+80|0]=k;a[d+81|0]=j>>>5;a[d+82|0]=j>>>13;a[d+83|0]=j>>>21;j=c[d+4>>2]|0;a[d+84|0]=j;a[d+85|0]=j>>>8;a[d+86|0]=j>>>16;a[d+87|0]=j>>>24;gg(d,l,64)|0;l=d+8|0;a[b]=c[l>>2];a[b+1|0]=(c[l>>2]|0)>>>8;a[b+2|0]=(c[l>>2]|0)>>>16;a[b+3|0]=(c[l>>2]|0)>>>24;l=d+12|0;a[b+4|0]=c[l>>2];a[b+5|0]=(c[l>>2]|0)>>>8;a[b+6|0]=(c[l>>2]|0)>>>16;a[b+7|0]=(c[l>>2]|0)>>>24;l=d+16|0;a[b+8|0]=c[l>>2];a[b+9|0]=(c[l>>2]|0)>>>8;a[b+10|0]=(c[l>>2]|0)>>>16;a[b+11|0]=(c[l>>2]|0)>>>24;l=d+20|0;a[b+12|0]=c[l>>2];a[b+13|0]=(c[l>>2]|0)>>>8;a[b+14|0]=(c[l>>2]|0)>>>16;a[b+15|0]=(c[l>>2]|0)>>>24;ys(d|0,0,152)|0;return}function ig(a,b){a=a|0;b=b|0;id(a,1);c[b>>2]=hd(a,6)|0;c[b+4>>2]=hd(a,6)|0;c[b+8>>2]=(hd(a,3)|0)-1;return}function jg(a){a=a|0;return(a-19&255)>>>0<2>>>0|0}function kg(a){a=a|0;return(a-16&255)>>>0<3>>>0|0}function lg(a){a=a|0;return(a&-2)<<24>>24==8|0}function mg(a){a=a|0;return(a-16&255)>>>0<8>>>0|0}function ng(a){a=a|0;return(a&-2)<<24>>24==6|0}function og(a){a=a|0;if((a&255)>>>0>15>>>0|(a&1)==0){return(a-16&255)>>>0<8>>>0|0}else{return 1}return 0}function pg(b){b=b|0;a[b|0]=0;ys(b+216|0,0,60)|0;return}function qg(a){a=a|0;var b=0,d=0,e=0;b=c[a+264>>2]|0;if((b|0)!=0){d=a+268|0;e=c[d>>2]|0;if((e|0)!=(b|0)){c[d>>2]=e+(~((e-4+(-b|0)|0)>>>2)<<2)}is(b)}b=c[a+252>>2]|0;if((b|0)!=0){e=a+256|0;d=c[e>>2]|0;if((d|0)!=(b|0)){c[e>>2]=d+(~((d-4+(-b|0)|0)>>>2)<<2)}is(b)}b=c[a+240>>2]|0;if((b|0)!=0){d=a+244|0;e=c[d>>2]|0;if((e|0)!=(b|0)){c[d>>2]=e+(~((e-4+(-b|0)|0)>>>2)<<2)}is(b)}b=c[a+228>>2]|0;if((b|0)!=0){e=a+232|0;d=c[e>>2]|0;if((d|0)!=(b|0)){c[e>>2]=d+(~((d-4+(-b|0)|0)>>>2)<<2)}is(b)}b=c[a+216>>2]|0;if((b|0)==0){return}d=a+220|0;a=c[d>>2]|0;if((a|0)!=(b|0)){c[d>>2]=a+(~((a-4+(-b|0)|0)>>>2)<<2)}is(b);return}function rg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;f=i;g=b|0;a[g]=0;h=kd(d)|0;a[b+1|0]=h;if((h|0)>63|(h|0)==-99999){we(e|0,1009,0);j=0;i=f;return j|0}h=kd(d)|0;k=b+2|0;a[k]=h;if((h|0)>63|(h|0)==-99999){we(e|0,1010,0);j=0;i=f;return j|0}a[b+3|0]=hd(d,1)|0;a[b+31|0]=hd(d,1)|0;a[b+4368|0]=hd(d,3)|0;a[b+4|0]=hd(d,1)|0;a[b+5|0]=hd(d,1)|0;h=kd(d)|0;l=h&255;m=b+6|0;a[m]=l;if((h|0)==-99999){we(e|0,1006,0);j=0;i=f;return j|0}a[m]=l+1;l=kd(d)|0;m=l&255;h=b+7|0;a[h]=m;if((l|0)==-99999){we(e|0,1006,0);j=0;i=f;return j|0}a[h]=m+1;m=a[k]|0;k=e+1107516+(m*5036|0)|0;if((a[k|0]|0)==0){we(e|0,1010,0);j=0;i=f;return j|0}h=ld(d)|0;l=b+8|0;c[l>>2]=h;if((h|0)==-99999){we(e|0,1006,0);j=0;i=f;return j|0}c[l>>2]=h+26;a[b+12|0]=hd(d,1)|0;a[b+13|0]=hd(d,1)|0;h=(hd(d,1)|0)&255;a[b+14|0]=h;do{if(h<<24>>24==0){c[b+16>>2]=0}else{l=kd(d)|0;c[b+16>>2]=l;if(!((l|0)==-99999)){break}we(e|0,1006,0);j=0;i=f;return j|0}}while(0);h=ld(d)|0;c[b+20>>2]=h;if((h|0)==-99999){we(e|0,1006,0);j=0;i=f;return j|0}h=ld(d)|0;c[b+24>>2]=h;if((h|0)==-99999){we(e|0,1006,0);j=0;i=f;return j|0}a[b+28|0]=hd(d,1)|0;a[b+29|0]=hd(d,1)|0;a[b+30|0]=hd(d,1)|0;a[b+32|0]=hd(d,1)|0;h=b+34|0;a[h]=hd(d,1)|0;a[b+33|0]=hd(d,1)|0;do{if((a[h]|0)==0){c[b+36>>2]=1;c[b+40>>2]=1;a[b+44|0]=1;a[b+280|0]=0;n=39}else{l=kd(d)|0;o=b+36|0;c[o>>2]=l;if((l|0)==-99999|(l|0)>9){we(e|0,1006,0);j=0;i=f;return j|0}c[o>>2]=l+1;l=kd(d)|0;p=b+40|0;c[p>>2]=l;if((l|0)==-99999|(l|0)>9){we(e|0,1006,0);j=0;i=f;return j|0}c[p>>2]=l+1;l=(hd(d,1)|0)&255;q=b+44|0;a[q]=l;if(l<<24>>24==0){l=c[e+1107516+(m*5036|0)+4936>>2]|0;r=c[e+1107516+(m*5036|0)+4944>>2]|0;s=(c[o>>2]|0)-1|0;a:do{if((s|0)>0){t=0;u=l;while(1){v=kd(d)|0;w=b+48+(t<<2)|0;c[w>>2]=v;if((v|0)==-99999){break}x=v+1|0;c[w>>2]=x;w=u-x|0;x=t+1|0;v=(c[o>>2]|0)-1|0;if((x|0)<(v|0)){t=x;u=w}else{y=w;z=v;break a}}we(e|0,1006,0);j=0;i=f;return j|0}else{y=l;z=s}}while(0);c[b+48+(z<<2)>>2]=y;s=(c[p>>2]|0)-1|0;b:do{if((s|0)>0){l=0;o=r;while(1){u=kd(d)|0;t=b+88+(l<<2)|0;c[t>>2]=u;if((u|0)==-99999){break}v=u+1|0;c[t>>2]=v;t=o-v|0;v=l+1|0;u=(c[p>>2]|0)-1|0;if((v|0)<(u|0)){l=v;o=t}else{A=t;B=u;break b}}we(e|0,1006,0);j=0;i=f;return j|0}else{A=r;B=s}}while(0);c[b+88+(B<<2)>>2]=A}a[b+280|0]=hd(d,1)|0;if((a[q]|0)!=0){n=39;break}C=b+36|0}}while(0);do{if((n|0)==39){A=b+36|0;B=c[A>>2]|0;y=i;i=i+((B<<2)+4)|0;i=i+7&-8;z=y;do{if((B|0)>=0){y=c[e+1107516+(m*5036|0)+4936>>2]|0;h=0;while(1){c[z+(h<<2)>>2]=(ga(y,h)|0)/(B|0)|0;if((h|0)<(B|0)){h=h+1|0}else{break}}if((B|0)<=0){break}h=0;y=c[z>>2]|0;while(1){s=h+1|0;r=c[z+(s<<2)>>2]|0;c[b+48+(h<<2)>>2]=r-y;if((s|0)<(c[A>>2]|0)){h=s;y=r}else{break}}}}while(0);z=b+40|0;B=c[z>>2]|0;q=i;i=i+((B<<2)+4)|0;i=i+7&-8;y=q;if((B|0)<0){C=A;break}q=c[e+1107516+(m*5036|0)+4944>>2]|0;h=0;while(1){c[y+(h<<2)>>2]=(ga(q,h)|0)/(B|0)|0;if((h|0)<(B|0)){h=h+1|0}else{break}}if((B|0)<=0){C=A;break}h=0;q=c[y>>2]|0;while(1){r=h+1|0;s=c[y+(r<<2)>>2]|0;c[b+88+(h<<2)>>2]=s-q;if((r|0)<(c[z>>2]|0)){h=r;q=s}else{C=A;break}}}}while(0);c[b+128>>2]=0;if((c[C>>2]|0)>0){n=0;A=0;do{A=(c[b+48+(n<<2)>>2]|0)+A|0;n=n+1|0;c[b+128+(n<<2)>>2]=A;}while((n|0)<(c[C>>2]|0))}c[b+172>>2]=0;n=b+40|0;if((c[n>>2]|0)>0){A=0;q=0;do{q=(c[b+88+(A<<2)>>2]|0)+q|0;A=A+1|0;c[b+172+(A<<2)>>2]=q;}while((A|0)<(c[n>>2]|0))}A=b+216|0;q=e+1107516+(m*5036|0)+4952|0;h=c[q>>2]|0;z=b+220|0;y=c[z>>2]|0;B=A|0;s=c[B>>2]|0;r=y-s>>2;do{if(r>>>0<h>>>0){ug(A,h-r|0);D=c[q>>2]|0}else{if(!(r>>>0>h>>>0)){D=h;break}p=s+(h<<2)|0;if((y|0)==(p|0)){D=h;break}c[z>>2]=y+(~((y-4+(-p|0)|0)>>>2)<<2);D=h}}while(0);h=b+228|0;y=b+232|0;z=c[y>>2]|0;s=h|0;r=c[s>>2]|0;A=z-r>>2;do{if(A>>>0<D>>>0){ug(h,D-A|0);E=c[q>>2]|0}else{if(!(A>>>0>D>>>0)){E=D;break}p=r+(D<<2)|0;if((z|0)==(p|0)){E=D;break}c[y>>2]=z+(~((z-4+(-p|0)|0)>>>2)<<2);E=D}}while(0);D=b+240|0;z=b+244|0;y=c[z>>2]|0;r=D|0;A=c[r>>2]|0;h=y-A>>2;do{if(h>>>0<E>>>0){ug(D,E-h|0);F=c[q>>2]|0}else{if(!(h>>>0>E>>>0)){F=E;break}p=A+(E<<2)|0;if((y|0)==(p|0)){F=E;break}c[z>>2]=y+(~((y-4+(-p|0)|0)>>>2)<<2);F=E}}while(0);E=b+252|0;y=b+256|0;z=c[y>>2]|0;A=E|0;h=c[A>>2]|0;D=z-h>>2;do{if(D>>>0<F>>>0){ug(E,F-D|0)}else{if(!(D>>>0>F>>>0)){break}p=h+(F<<2)|0;if((z|0)==(p|0)){break}c[y>>2]=z+(~((z-4+(-p|0)|0)>>>2)<<2)}}while(0);z=b+264|0;y=c[e+1107516+(m*5036|0)+4976>>2]|0;F=b+268|0;h=c[F>>2]|0;D=z|0;E=c[D>>2]|0;p=h-E>>2;do{if(p>>>0<y>>>0){ug(z,y-p|0)}else{if(!(p>>>0>y>>>0)){break}o=E+(y<<2)|0;if((h|0)==(o|0)){break}c[F>>2]=h+(~((h-4+(-o|0)|0)>>>2)<<2)}}while(0);c:do{if((c[q>>2]|0)>0){h=e+1107516+(m*5036|0)+4936|0;F=0;while(1){y=c[h>>2]|0;E=(F|0)%(y|0)|0;p=(F|0)/(y|0)|0;y=c[C>>2]|0;if((y|0)>0){z=-1;o=0;while(1){l=(E|0)<(c[b+128+(o<<2)>>2]|0)?z:o;u=o+1|0;if((u|0)<(y|0)){z=l;o=u}else{G=l;break}}}else{G=-1}o=c[n>>2]|0;if((o|0)>0){z=-1;y=0;while(1){l=(p|0)<(c[b+172+(y<<2)>>2]|0)?z:y;u=y+1|0;if((u|0)<(o|0)){z=l;y=u}else{H=l;break}}}else{H=-1}y=(c[B>>2]|0)+(F<<2)|0;c[y>>2]=0;if((G|0)>0){z=b+88+(H<<2)|0;o=0;l=0;while(1){u=l+(ga(c[b+48+(o<<2)>>2]|0,c[z>>2]|0)|0)|0;c[y>>2]=u;t=o+1|0;if((t|0)<(G|0)){o=t;l=u}else{I=u;break}}}else{I=0}if((H|0)>0){l=0;o=I;while(1){z=o+(ga(c[b+88+(l<<2)>>2]|0,c[h>>2]|0)|0)|0;c[y>>2]=z;u=l+1|0;if((u|0)<(H|0)){l=u;o=z}else{J=z;break}}}else{J=I}if(!((H|G|0)>-1)){break}o=J+(ga(p-(c[b+172+(H<<2)>>2]|0)|0,c[b+48+(G<<2)>>2]|0)|0)|0;c[y>>2]=o;l=E-(c[b+128+(G<<2)>>2]|0)+o|0;c[y>>2]=l;c[(c[s>>2]|0)+(l<<2)>>2]=F;F=F+1|0;if((F|0)>=(c[q>>2]|0)){break c}}bc(8504,11416,269,12752);return 0}}while(0);q=c[n>>2]|0;if((q|0)>0){s=e+1107516+(m*5036|0)+4936|0;G=0;H=0;J=c[C>>2]|0;I=q;while(1){if((J|0)>0){q=b+172+(G<<2)|0;F=G+1|0;h=b+172+(F<<2)|0;l=H;o=0;z=c[h>>2]|0;u=J;while(1){t=c[q>>2]|0;if((t|0)<(z|0)){v=b+128+(o<<2)|0;w=o+1|0;x=b+128+(w<<2)|0;K=t;t=c[x>>2]|0;L=z;while(1){M=c[v>>2]|0;if((M|0)<(t|0)){N=c[B>>2]|0;O=c[r>>2]|0;P=c[A>>2]|0;Q=M;do{c[O+(c[N+((ga(c[s>>2]|0,K)|0)+Q<<2)>>2]<<2)>>2]=l;c[P+((ga(c[s>>2]|0,K)|0)+Q<<2)>>2]=l;Q=Q+1|0;R=c[x>>2]|0;}while((Q|0)<(R|0));S=R;T=c[h>>2]|0}else{S=t;T=L}Q=K+1|0;if((Q|0)<(T|0)){K=Q;t=S;L=T}else{break}}U=T;V=c[C>>2]|0;W=w}else{U=z;V=u;W=o+1|0}X=l+1|0;if((W|0)<(V|0)){l=X;o=W;z=U;u=V}else{break}}Y=X;Z=V;_=c[n>>2]|0;$=F}else{Y=H;Z=J;_=I;$=G+1|0}if(($|0)<(_|0)){G=$;H=Y;J=Z;I=_}else{break}}}_=e+1107516+(m*5036|0)+4972|0;I=c[_>>2]|0;if((I|0)>0){Z=e+1107516+(m*5036|0)+4968|0;J=e+1107516+(m*5036|0)+4980|0;Y=e+1107516+(m*5036|0)+4920|0;H=e+1107516+(m*5036|0)+4936|0;$=0;G=c[Z>>2]|0;n=I;while(1){if((G|0)>0){I=c[B>>2]|0;V=c[D>>2]|0;X=0;U=G;do{W=c[J>>2]|0;C=c[Y>>2]|0;c[V+((ga(U,$)|0)+X<<2)>>2]=c[I+((ga(c[H>>2]|0,$<<W>>C)|0)+(X<<W>>C)<<2)>>2]<<(C-W<<1);W=(c[Y>>2]|0)-(c[J>>2]|0)|0;if((W|0)>0){C=0;T=0;while(1){S=1<<T;if((S&$|0)==0){aa=0}else{aa=S<<1<<T}R=((S&X|0)==0?0:S<<T)+C+aa|0;S=T+1|0;if((S|0)<(W|0)){C=R;T=S}else{ba=R;break}}}else{ba=0}T=V+((ga(c[Z>>2]|0,$)|0)+X<<2)|0;c[T>>2]=(c[T>>2]|0)+ba;X=X+1|0;U=c[Z>>2]|0;}while((X|0)<(U|0));ca=U;da=c[_>>2]|0}else{ca=G;da=n}X=$+1|0;if((X|0)<(da|0)){$=X;G=ca;n=da}else{ea=Y;break}}}else{ea=e+1107516+(m*5036|0)+4920|0}c[b+276>>2]=(c[ea>>2]|0)-(c[b+16>>2]|0);ea=b+288|0;c[ea>>2]=0;Y=b+292|0;c[Y>>2]=0;a[b+281|0]=hd(d,1)|0;da=(hd(d,1)|0)&255;a[b+282|0]=da;do{if(da<<24>>24==0){a[b+283|0]=0;a[b+284|0]=0}else{a[b+283|0]=hd(d,1)|0;n=(hd(d,1)|0)&255;a[b+284|0]=n;if(!(n<<24>>24==0)){break}n=ld(d)|0;c[ea>>2]=n;if((n|0)==-99999){we(e|0,1006,0);j=0;i=f;return j|0}c[ea>>2]=n<<1;n=ld(d)|0;c[Y>>2]=n;if(!((n|0)==-99999)){c[Y>>2]=n<<1;break}we(e|0,1006,0);j=0;i=f;return j|0}}while(0);Y=(hd(d,1)|0)&255;a[b+296|0]=Y;ea=Y<<24>>24==0;if(!((a[e+1107516+(m*5036|0)+604|0]|0)!=0|ea)){we(e|0,1006,0);j=0;i=f;return j|0}do{if(ea){xs(b+297|0,e+1107516+(m*5036|0)+606|0,4064)|0}else{Y=kh(d,k,b+297|0,1)|0;if((Y|0)==0){break}we(e|0,Y,0);j=0;i=f;return j|0}}while(0);a[b+4361|0]=hd(d,1)|0;k=kd(d)|0;m=b+4364|0;c[m>>2]=k;if((k|0)==-99999){we(e|0,1006,0);j=0;i=f;return j|0}else{c[m>>2]=k+2;a[b+4369|0]=hd(d,1)|0;a[b+4370|0]=hd(d,1)|0;a[g]=1;j=1;i=f;return j|0}return 0}function sg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;if((d|0)==2){f=r}else if((d|0)==1){f=s}else{i=e;return}d=c[f>>2]|0;rh(d,8960,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f;rh(d,6752,(f=i,i=i+8|0,c[f>>2]=a[b+1|0]|0,f)|0);i=f;rh(d,4264,(f=i,i=i+8|0,c[f>>2]=a[b+2|0]|0,f)|0);i=f;rh(d,2752,(f=i,i=i+8|0,c[f>>2]=a[b+3|0]|0,f)|0);i=f;rh(d,1824,(f=i,i=i+8|0,c[f>>2]=a[b+4|0]|0,f)|0);i=f;rh(d,1240,(f=i,i=i+8|0,c[f>>2]=a[b+5|0]|0,f)|0);i=f;rh(d,848,(f=i,i=i+8|0,c[f>>2]=a[b+6|0]|0,f)|0);i=f;rh(d,488,(f=i,i=i+8|0,c[f>>2]=a[b+7|0]|0,f)|0);i=f;rh(d,12416,(f=i,i=i+8|0,c[f>>2]=c[b+8>>2],f)|0);i=f;rh(d,11960,(f=i,i=i+8|0,c[f>>2]=a[b+12|0]|0,f)|0);i=f;rh(d,11536,(f=i,i=i+8|0,c[f>>2]=a[b+13|0]|0,f)|0);i=f;g=b+14|0;rh(d,11152,(f=i,i=i+8|0,c[f>>2]=a[g]|0,f)|0);i=f;if((a[g]|0)!=0){rh(d,10904,(f=i,i=i+8|0,c[f>>2]=c[b+16>>2],f)|0);i=f}rh(d,10552,(f=i,i=i+8|0,c[f>>2]=c[b+20>>2],f)|0);i=f;rh(d,10336,(f=i,i=i+8|0,c[f>>2]=c[b+24>>2],f)|0);i=f;rh(d,10096,(f=i,i=i+8|0,c[f>>2]=a[b+28|0]|0,f)|0);i=f;rh(d,9880,(f=i,i=i+8|0,c[f>>2]=a[b+29|0]|0,f)|0);i=f;rh(d,9672,(f=i,i=i+8|0,c[f>>2]=a[b+30|0]|0,f)|0);i=f;rh(d,9488,(f=i,i=i+8|0,c[f>>2]=a[b+31|0]|0,f)|0);i=f;rh(d,9288,(f=i,i=i+8|0,c[f>>2]=a[b+32|0]|0,f)|0);i=f;g=b+34|0;rh(d,9088,(f=i,i=i+8|0,c[f>>2]=a[g]|0,f)|0);i=f;rh(d,8856,(f=i,i=i+8|0,c[f>>2]=a[b+33|0]|0,f)|0);i=f;if((a[g]|0)!=0){g=b+36|0;rh(d,8672,(f=i,i=i+8|0,c[f>>2]=c[g>>2],f)|0);i=f;h=b+40|0;rh(d,8440,(f=i,i=i+8|0,c[f>>2]=c[h>>2],f)|0);i=f;rh(d,8248,(f=i,i=i+8|0,c[f>>2]=a[b+44|0]|0,f)|0);i=f;rh(d,7992,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f;if((c[g>>2]|0)>=0){j=0;while(1){rh(d,7728,(f=i,i=i+8|0,c[f>>2]=c[b+128+(j<<2)>>2],f)|0);i=f;if((j|0)<(c[g>>2]|0)){j=j+1|0}else{break}}}rh(d,7560,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f;rh(d,7368,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f;if((c[h>>2]|0)>=0){j=0;while(1){rh(d,7728,(f=i,i=i+8|0,c[f>>2]=c[b+172+(j<<2)>>2],f)|0);i=f;if((j|0)<(c[h>>2]|0)){j=j+1|0}else{break}}}rh(d,7560,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f;rh(d,7096,(f=i,i=i+8|0,c[f>>2]=a[b+280|0]|0,f)|0);i=f}rh(d,6880,(f=i,i=i+8|0,c[f>>2]=a[b+281|0]|0,f)|0);i=f;j=b+282|0;rh(d,6624,(f=i,i=i+8|0,c[f>>2]=a[j]|0,f)|0);i=f;if((a[j]|0)!=0){rh(d,6376,(f=i,i=i+8|0,c[f>>2]=a[b+283|0]|0,f)|0);i=f;rh(d,5992,(f=i,i=i+8|0,c[f>>2]=a[b+284|0]|0,f)|0);i=f;rh(d,5752,(f=i,i=i+8|0,c[f>>2]=c[b+288>>2],f)|0);i=f;rh(d,5528,(f=i,i=i+8|0,c[f>>2]=c[b+292>>2],f)|0);i=f}rh(d,5280,(f=i,i=i+8|0,c[f>>2]=a[b+296|0]|0,f)|0);i=f;rh(d,5040,(f=i,i=i+8|0,c[f>>2]=a[b+4361|0]|0,f)|0);i=f;rh(d,4760,(f=i,i=i+8|0,c[f>>2]=c[b+4364>>2],f)|0);i=f;rh(d,4584,(f=i,i=i+8|0,c[f>>2]=a[b+4368|0]|0,f)|0);i=f;rh(d,4384,(f=i,i=i+8|0,c[f>>2]=a[b+4369|0]|0,f)|0);i=f;rh(d,4208,(f=i,i=i+8|0,c[f>>2]=a[b+4370|0]|0,f)|0);i=f;rh(d,4008,(f=i,i=i+8|0,c[f>>2]=c[b+276>>2],f)|0);i=f;i=e;return}function tg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if((a[b+34|0]|0)==0){f=(e|d|0)==0;return f|0}g=c[b+36>>2]|0;if((g|0)>0){h=0}else{f=0;return f|0}while(1){i=h+1|0;if((c[b+128+(h<<2)>>2]|0)==(d|0)){break}if((i|0)<(g|0)){h=i}else{f=0;j=9;break}}if((j|0)==9){return f|0}h=c[b+40>>2]|0;if((h|0)>0){k=0}else{f=0;return f|0}while(1){g=k+1|0;if((c[b+172+(k<<2)>>2]|0)==(e|0)){f=1;j=9;break}if((g|0)<(h|0)){k=g}else{f=0;j=9;break}}if((j|0)==9){return f|0}return 0}function ug(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=a+8|0;e=a+4|0;f=c[e>>2]|0;g=c[d>>2]|0;h=f;if(!(g-h>>2>>>0<b>>>0)){i=b;j=f;while(1){if((j|0)!=0){c[j>>2]=0}k=i-1|0;if((k|0)==0){break}else{i=k;j=j+4|0}}c[e>>2]=f+(b<<2);return}f=a|0;a=c[f>>2]|0;j=a;i=h-j|0;h=i>>2;k=h+b|0;if(k>>>0>1073741823>>>0){gp(0)}l=g-j|0;if(l>>2>>>0<536870911>>>0){j=l>>1;l=j>>>0<k>>>0?k:j;if((l|0)==0){m=0;n=0}else{o=l;p=10}}else{o=1073741823;p=10}if((p|0)==10){m=gs(o<<2)|0;n=o}o=b;b=m+(h<<2)|0;while(1){if((b|0)!=0){c[b>>2]=0}h=o-1|0;if((h|0)==0){break}else{o=h;b=b+4|0}}b=a;xs(m|0,b|0,i)|0;c[f>>2]=m;c[e>>2]=m+(k<<2);c[d>>2]=m+(n<<2);if((a|0)==0){return}is(b);return}function vg(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=b+14632|0;e=c[f>>2]|0;i=e+74336|0;j=b+14636|0;k=c[j>>2]|0;l=-1<<c[e+74612>>2];m=l&g;n=l&h;l=b+14424|0;o=b+14428|0;if((m|0)==(c[l>>2]|0)){if((n|0)!=(c[o>>2]|0)){p=3}}else{p=3}if((p|0)==3){c[b+14432>>2]=c[b+14420>>2];c[l>>2]=m;c[o>>2]=n}o=e+74220|0;if((m|0)==0){q=((1<<c[o>>2])-1&n|0)==0}else{q=0}l=c[k+792>>2]|0;r=c[e+74236>>2]|0;s=c[e+74228>>2]|0;if((ga(s,(l|0)%(r|0)|0)|0)==(m|0)){t=(ga((l|0)/(r|0)|0,s)|0)==(n|0)}else{t=0}do{if((a[e+74370|0]|0)==0){u=0}else{s=c[o>>2]|0;r=(1<<s)-1|0;if((r&m|0)!=0){u=0;break}if((r&n|0)!=0){u=0;break}u=tg(i,m>>s,n>>s)|0}}while(0);do{if(t|u){p=15}else{if(q){if((a[e+74369|0]|0)!=0){p=15;break}}v=b+14432|0}}while(0);if((p|0)==15){v=(c[j>>2]|0)+796|0}j=c[v>>2]|0;v=m-1|0;do{if(Zf(c[f>>2]|0,m,n,v,n)|0){p=c[e+74280>>2]|0;q=(ga(n>>p,c[e+74268>>2]|0)|0)+(v>>p)|0;if((c[(c[e+74600>>2]|0)+(q<<2)>>2]>>((c[o>>2]|0)-p<<1)|0)!=(c[b+4>>2]|0)){w=j;break}p=c[f>>2]|0;q=c[p+78740>>2]|0;u=(ga(n>>q,c[p+78744>>2]|0)|0)+(v>>q)|0;w=a[(c[p+78732>>2]|0)+(u*3|0)+2|0]|0}else{w=j}}while(0);v=n-1|0;do{if(Zf(c[f>>2]|0,m,n,m,v)|0){u=c[e+74280>>2]|0;p=(ga(v>>u,c[e+74268>>2]|0)|0)+(m>>u)|0;if((c[(c[e+74600>>2]|0)+(p<<2)>>2]>>((c[o>>2]|0)-u<<1)|0)!=(c[b+4>>2]|0)){x=j;break}u=c[f>>2]|0;p=c[u+78740>>2]|0;q=(ga(v>>p,c[u+78744>>2]|0)|0)+(m>>p)|0;x=a[(c[u+78732>>2]|0)+(q*3|0)+2|0]|0}else{x=j}}while(0);j=c[e+74180>>2]|0;m=((c[b+14416>>2]|0)+52+(w+1+x>>1)+(j<<1)|0)%(j+52|0)|0;x=m-j|0;c[b+14436>>2]=m;m=x+(c[e+74356>>2]|0)+(c[k+744>>2]|0)|0;j=e+74188|0;w=c[j>>2]|0;v=-w|0;if((m|0)<(v|0)){y=v}else{y=(m|0)>57?57:m}m=(c[e+74360>>2]|0)+x+(c[k+748>>2]|0)|0;if((m|0)<(v|0)){z=v}else{z=(m|0)>57?57:m}do{if((y|0)<30){A=y}else{if((y|0)>42){A=y-6|0;break}else{A=c[8+(y-30<<2)>>2]|0;break}}}while(0);do{if((z|0)<30){B=z}else{if((z|0)>42){B=z-6|0;break}else{B=c[8+(z-30<<2)>>2]|0;break}}}while(0);c[b+14440>>2]=w+A;c[b+14444>>2]=(c[j>>2]|0)+B;B=c[f>>2]|0;f=c[B+78740>>2]|0;j=g>>f;g=h>>f;h=B+78744|0;A=(ga(g,c[h>>2]|0)|0)+j|0;w=B+78732|0;B=(c[w>>2]|0)+(A*3|0)|0;A=1<<((d[B]|d[B+1|0]<<8)<<16>>16&255&7)-f;f=A+g|0;if((A|0)<=0){C=b+14420|0;c[C>>2]=x;return}B=A+j|0;A=x&255;z=g;do{g=j;do{y=(ga(c[h>>2]|0,z)|0)+g|0;a[(c[w>>2]|0)+(y*3|0)+2|0]=A;g=g+1|0;}while((g|0)<(B|0));z=z+1|0;}while((z|0)<(f|0));C=b+14420|0;c[C>>2]=x;return}function wg(e,f,g,h,i,j,k,l,m){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0;i=c[e+14632>>2]|0;if((k|0)==0){n=e+14436|0}else if((k|0)==1){n=e+14440|0}else if((k|0)==2){n=e+14444|0}else{bc(7240,11224,216,13744)}h=c[n>>2]|0;n=e+2112|0;o=c[n>>2]|0;p=(k|0)==0;q=c[(p?i+36|0:i+40|0)>>2]|0;r=(c[i+4+(k<<2)>>2]|0)+((ga(q,g)|0)+f)|0;a:do{if((a[e+36|0]|0)==0){s=c[(p?i+74176|0:i+74184|0)>>2]|0;if((j|0)>1){t=j;u=0;while(1){v=u+1|0;w=t>>1;if((w|0)>1){t=w;u=v}else{x=v;break}}}else{x=0}u=x+s|0;t=u-5|0;do{if((a[i+69904|0]|0)==0){v=u-9|0;w=1<<u-10;y=c[25672+(((h|0)%6|0)<<2)>>2]<<((h|0)/6|0);z=e+14404+(k<<1)|0;if((b[z>>1]|0)>0){A=0}else{break}do{B=(ga(b[e+2116+(k<<11)+(A<<1)>>1]|0,y)|0)+w>>v;if((B|0)<-32768){C=-32768}else{C=(B|0)>32767?32767:B&65535}b[o+(b[e+8260+(k<<11)+(A<<1)>>1]<<1)>>1]=C;A=A+1|0;}while((A|0)<(b[z>>1]|0))}else{z=1<<u-6;do{if(m){D=k}else{if((j|0)<32){D=k+3|0;break}else{D=k+1|0;break}}}while(0);if((j|0)==4){E=i+74633+(D<<4)|0}else if((j|0)==8){E=i+74729+(D<<6)|0}else if((j|0)==16){E=i+75113+(D<<8)|0}else if((j|0)==32){E=i+76649+(D<<10)|0}else{bc(7240,11224,310,13744)}v=e+14404+(k<<1)|0;if((b[v>>1]|0)<=0){break}w=c[25672+(((h|0)%6|0)<<2)>>2]|0;y=(h|0)/6|0;B=z;F=(z|0)<0|0?-1:0;G=t;H=0;do{I=b[e+8260+(k<<11)+(H<<1)>>1]|0;J=(ga(w,d[E+I|0]|0)|0)<<y;L=b[e+2116+(k<<11)+(H<<1)>>1]|0;M=Ls(L<<16>>16,L<<16>>16<0|0?-1:0,J,(J|0)<0|0?-1:0)|0;J=Bs(M,K,B,F)|0;M=Fs(J|0,K|0,G|0)|0;J=K;L=-1;if((J|0)<(L|0)|(J|0)==(L|0)&M>>>0<-32768>>>0){N=-32768}else{L=0;N=(J|0)>(L|0)|(J|0)==(L|0)&M>>>0>32767>>>0?32767:M&65535}b[o+(I<<1)>>1]=N;H=H+1|0;}while((H|0)<(b[v>>1]|0))}}while(0);if(l){Hc[c[(c[e+14628>>2]|0)+300>>2]&31](r,o,q);break}do{if(!((j|0)!=4|p^1)){t=c[i+78740>>2]|0;u=(ga(g>>t,c[i+78744>>2]|0)|0)+(f>>t)|0;t=(c[i+78732>>2]|0)+(u*3|0)|0;if(!(((d[t]|d[t+1|0]<<8)<<16>>16&768)==0)){break}Hc[c[(c[e+14628>>2]|0)+308>>2]&31](r,o,q);break a}}while(0);t=c[e+14628>>2]|0;if((j|0)==4){Hc[c[t+312>>2]&31](r,o,q);break}else if((j|0)==8){Hc[c[t+316>>2]&31](r,o,q);break}else if((j|0)==16){Hc[c[t+320>>2]&31](r,o,q);break}else{Hc[c[t+324>>2]&31](r,o,q);break}}else{t=e+14404+(k<<1)|0;if((b[t>>1]|0)>0){u=0;do{b[o+(b[e+8260+(k<<11)+(u<<1)>>1]<<1)>>1]=b[e+2116+(k<<11)+(u<<1)>>1]|0;u=u+1|0;}while((u|0)<(b[t>>1]|0))}Qc[c[(c[e+14628>>2]|0)+304>>2]&31](r,o,j,q)}}while(0);q=e+14404+(k<<1)|0;if((b[q>>1]|0)<=0){return}j=c[n>>2]|0;n=0;do{b[j+(b[e+8260+(k<<11)+(n<<1)>>1]<<1)>>1]=0;n=n+1|0;}while((n|0)<(b[q>>1]|0));return}function xg(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;m=i;do{if((j|0)==0){n=43}else{if(((hd(g,1)|0)&255)<<24>>24==0){n=43;break}if(l){o=(kd(g)|0)+1|0}else{o=1}p=j-o|0;if(!((p|0)>-1)){bc(7232,11208,101,13640);return 0}q=hd(g,1)|0;r=kd(g)|0;s=r+1|0;t=~r;r=k|0;u=d[(c[r>>2]|0)+(p*100|0)+2|0]|0;v=u+1|0;w=i;i=i+v|0;i=i+7&-8;x=i;i=i+v|0;i=i+7&-8;v=0;while(1){y=(hd(g,1)|0)&255;a[w+v|0]=y;if(y<<24>>24==0){a[x+v|0]=hd(g,1)|0}else{a[x+v|0]=1}if((v|0)<(u|0)){v=v+1|0}else{break}}v=(q|0)!=0?t:s;y=c[r>>2]|0;z=a[y+(p*100|0)|0]|0;A=z&255;B=a[y+(p*100|0)+1|0]|0;D=B&255;E=B<<24>>24==0;a:do{if(E){F=0}else{B=0;G=D;H=y;while(1){I=G;while(1){J=I-1|0;K=(b[H+(p*100|0)+36+(J<<1)>>1]|0)+v|0;if((K|0)<0){L=J+A|0;if((a[x+L|0]|0)!=0){break}}if((J|0)>0){I=J}else{F=B;break a}}b[h+4+(B<<1)>>1]=K;a[h+68+B|0]=a[w+L|0]|0;I=B+1|0;if((J|0)<=0){F=I;break a}B=I;G=J;H=c[r>>2]|0}}}while(0);do{if((v|0)<0){if((a[x+u|0]|0)==0){M=F;break}b[h+4+(F<<1)>>1]=v;a[h+68+F|0]=a[w+u|0]|0;M=F+1|0}else{M=F}}while(0);y=z<<24>>24==0;b:do{if(y){s=h|0;a[s]=M;N=0;O=s}else{s=0;t=M;while(1){q=(b[(c[r>>2]|0)+(p*100|0)+4+(s<<1)>>1]|0)+v|0;do{if((q|0)<0){if((a[x+s|0]|0)==0){P=t;break}b[h+4+(t<<1)>>1]=q;a[h+68+t|0]=a[w+s|0]|0;P=t+1|0}else{P=t}}while(0);q=s+1|0;if((q|0)<(A|0)){s=q;t=P}else{break}}t=h|0;a[t]=P;if(y){N=0;O=t;break}else{Q=0;R=A}while(1){s=c[r>>2]|0;q=R;while(1){S=q-1|0;T=(b[s+(p*100|0)+4+(S<<1)>>1]|0)+v|0;if((T|0)>0){if((a[x+S|0]|0)!=0){break}}if((S|0)>0){q=S}else{N=Q;O=t;break b}}b[h+36+(Q<<1)>>1]=T;a[h+84+Q|0]=a[w+S|0]|0;q=Q+1|0;if((S|0)>0){Q=q;R=S}else{N=q;O=t;break}}}}while(0);do{if((v|0)>0){if((a[x+u|0]|0)==0){U=N;break}b[h+36+(N<<1)>>1]=v;a[h+84+N|0]=a[w+u|0]|0;U=N+1|0}else{U=N}}while(0);if(E){V=U}else{u=0;y=U;while(1){z=(b[(c[r>>2]|0)+(p*100|0)+36+(u<<1)>>1]|0)+v|0;do{if((z|0)>0){t=u+A|0;if((a[x+t|0]|0)==0){W=y;break}b[h+36+(y<<1)>>1]=z;a[h+84+y|0]=a[w+t|0]|0;W=y+1|0}else{W=y}}while(0);z=u+1|0;if((z|0)<(D|0)){u=z;y=W}else{V=W;break}}}a[h+1|0]=V;y=a[O]|0;a[h+2|0]=(y&255)+V;X=y}}while(0);if((n|0)==43){n=kd(g)|0;V=kd(g)|0;O=V+n|0;if((O|0)>(c[f+496+((a[f+2|0]|0)-1<<2)>>2]|0)){f=h;C=0;a[f]=C;C=C>>8;a[f+1|0]=C;C=C>>8;a[f+2|0]=C;C=C>>8;a[f+3|0]=C;we(e|0,1018,0);Y=0;i=m;return Y|0}e=h|0;a[e]=n;a[h+1|0]=V;a[h+2|0]=O;if((n|0)>0){O=0;f=0;while(1){W=kd(g)|0;U=(hd(g,1)|0)&255;N=h+4+(f<<1)|0;b[N>>1]=O+65535-W;a[h+68+f|0]=U;U=f+1|0;if((U|0)<(n|0)){O=b[N>>1]|0;f=U}else{break}}}if((V|0)>0){f=0;O=0;while(1){n=kd(g)|0;U=(hd(g,1)|0)&255;N=h+36+(O<<1)|0;b[N>>1]=f+1+n;a[h+84+O|0]=U;U=O+1|0;if((U|0)<(V|0)){f=b[N>>1]|0;O=U}else{break}}}X=a[e]|0}e=h+3|0;a[e]=0;if(X<<24>>24==0){Z=0}else{O=X&255;X=0;f=0;while(1){if((a[h+68+X|0]|0)==0){_=f}else{V=f+1&255;a[e]=V;_=V}V=X+1|0;if((V|0)<(O|0)){X=V;f=_}else{Z=_;break}}}_=a[h+1|0]|0;if(_<<24>>24==0){Y=1;i=m;return Y|0}f=_&255;_=0;X=Z;while(1){if((a[h+84+_|0]|0)==0){$=X}else{Z=X+1&255;a[e]=Z;$=Z}Z=_+1|0;if((Z|0)<(f|0)){_=Z;X=$}else{Y=1;break}}i=m;return Y|0}function yg(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;h=e<<1;j=i;i=i+(h+2)|0;i=i+7&-8;k=h|1;a[j+k|0]=0;if((k|0)>0){ys(j|0,46,k|0)|0}a[j+e|0]=124;k=a[d|0]|0;if(!(k<<24>>24==0)){h=-e|0;l=k&255;do{l=l-1|0;k=b[d+4+(l<<1)>>1]|0;m=a[d+68+l|0]|0;do{if((k|0)<(h|0)){rh(f,824,(n=i,i=i+16|0,c[n>>2]=k,c[n+8>>2]=m<<24>>24!=0?88:111,n)|0);i=n}else{o=j+(k+e)|0;if(m<<24>>24==0){a[o]=111;break}else{a[o]=88;break}}}while(0);}while((l|0)>0)}l=a[d+1|0]|0;if(l<<24>>24==0){rh(f,464,(n=i,i=i+8|0,c[n>>2]=j,n)|0);i=n;i=g;return}h=l&255;do{h=h-1|0;l=b[d+36+(h<<1)>>1]|0;m=a[d+84+h|0]|0;do{if((l|0)>(e|0)){rh(f,824,(n=i,i=i+16|0,c[n>>2]=l,c[n+8>>2]=m<<24>>24!=0?88:111,n)|0);i=n}else{k=j+(l+e)|0;if(m<<24>>24==0){a[k]=111;break}else{a[k]=88;break}}}while(0);}while((h|0)>0);rh(f,464,(n=i,i=i+8|0,c[n>>2]=j,n)|0);i=n;i=g;return}function zg(b,f,g,h,j,k,l,m,n,o){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0;h=i;i=i+152|0;p=h|0;q=h+8|0;r=h+16|0;s=h+24|0;t=b+78724|0;u=c[t>>2]|0;v=(ga(u,g)|0)+f|0;w=b+78712|0;x=c[w>>2]|0;y=j<<1;z=(d[x+(v*24|0)+4|0]|0)>>>(y>>>0)&3;if((z|0)==0){i=h;return}A=(j|0)==0;B=c[(A?b+74176|0:b+74184|0)>>2]|0;C=ga(k,f)|0;f=ga(k,g)|0;g=c[(A?b+20|0:b+28|0)>>2]|0;D=c[(A?b+24|0:b+32|0)>>2]|0;A=b+78720|0;E=c[A>>2]|0;F=e[x+(((ga(f>>E,u)|0)+(C>>E)|0)*24|0)+2>>1]|0;E=b+44|0;u=c[(c[(c[E>>2]|0)+(F<<2)>>2]|0)+792>>2]|0;F=c[b+74236>>2]|0;G=(j|0)>0|0;H=(1<<B)-1|0;I=(c[b+74220>>2]|0)-G|0;J=(C+k|0)>(g|0)?g-C|0:k;K=(f+k|0)>(D|0)?D-f|0:k;if((a[x+(v*24|0)+22|0]|0)==0){L=(a[x+(v*24|0)+23|0]|0)!=0}else{L=1}if((z|0)!=2){z=d[x+(v*24|0)+6+j|0]|0;ys(s|0,0,128)|0;c[s+((z&31)<<2)>>2]=1;c[s+((z+1&31)<<2)>>2]=2;c[s+((z+2&31)<<2)>>2]=3;c[s+((z+3&31)<<2)>>2]=4;z=B-5|0;B=(K|0)>0;if(!L){if(!B){i=h;return}k=(J|0)>0;M=0;do{if(k){N=M+f|0;O=ga(N,m)|0;P=ga(N,o)|0;N=0;do{Q=N+C|0;R=d[l+(Q+O)|0]|0;S=c[s+(R>>>(z>>>0)<<2)>>2]|0;if((S|0)>0){T=(a[S-1+(x+(v*24|0)+9+(j<<2))|0]|0)+R|0;if((T|0)<0){U=0}else{U=((T|0)>(H|0)?H:T)&255}a[n+(Q+P)|0]=U}N=N+1|0;}while((N|0)<(J|0))}M=M+1|0;}while((M|0)<(K|0));i=h;return}if(!B){i=h;return}B=b+73984|0;M=b+78740|0;U=b+78744|0;k=b+78732|0;if((J|0)>0){V=0}else{i=h;return}do{N=V+f|0;P=N<<G;O=ga(N,m)|0;Q=ga(N,o)|0;N=0;do{if((a[B]|0)==0){T=N+C|0;W=c[M>>2]|0;X=c[U>>2]|0;Y=c[k>>2]|0;Z=T;_=T<<G;$=45}else{T=N+C|0;R=T<<G;S=c[M>>2]|0;aa=c[U>>2]|0;ba=(ga(P>>S,aa)|0)+(R>>S)|0;ca=c[k>>2]|0;da=ca+(ba*3|0)|0;if(((d[da]|d[da+1|0]<<8)<<16>>16&1024)==0){W=S;X=aa;Y=ca;Z=T;_=R;$=45}}do{if(($|0)==45){$=0;R=Y+(((ga(P>>W,X)|0)+(_>>W)|0)*3|0)|0;if(!(((d[R]|d[R+1|0]<<8)<<16>>16&2048)==0)){break}R=d[l+(Z+O)|0]|0;T=c[s+(R>>>(z>>>0)<<2)>>2]|0;if((T|0)<=0){break}ca=(a[T-1+(x+(v*24|0)+9+(j<<2))|0]|0)+R|0;if((ca|0)<0){ea=0}else{ea=((ca|0)>(H|0)?H:ca)&255}a[n+(Z+Q)|0]=ea}}while(0);N=N+1|0;}while((N|0)<(J|0));V=V+1|0;}while((V|0)<(K|0));i=h;return}V=(d[x+(v*24|0)+5|0]|0)>>>(y>>>0)&3;if((V|0)==2){c[p>>2]=-1;c[p+4>>2]=1;c[q>>2]=-1;c[q+4>>2]=1;fa=-1;ha=1;ia=-1;ja=1}else if((V|0)==3){c[p>>2]=1;c[p+4>>2]=-1;c[q>>2]=-1;c[q+4>>2]=1;fa=-1;ha=1;ia=1;ja=-1}else if((V|0)==0){c[p>>2]=-1;c[p+4>>2]=1;c[q>>2]=0;c[q+4>>2]=0;fa=0;ha=0;ia=-1;ja=1}else if((V|0)==1){c[p>>2]=0;c[p+4>>2]=0;c[q>>2]=-1;c[q+4>>2]=1;fa=-1;ha=1;ia=0;ja=0}else{fa=0;ha=0;ia=0;ja=0}V=ga(fa,m)|0;fa=ga(ha,m)|0;a[r|0]=a[x+(v*24|0)+9+(j<<2)|0]|0;a[r+1|0]=a[x+(v*24|0)+9+(j<<2)+1|0]|0;a[r+2|0]=0;a[r+3|0]=a[x+(v*24|0)+9+(j<<2)+2|0]|0;a[r+4|0]=a[x+(v*24|0)+9+(j<<2)+3|0]|0;if((K|0)<=0){i=h;return}j=(J|0)>0;v=b+73984|0;x=b+78740|0;ha=b+78744|0;y=b+78732|0;ea=J-1|0;Z=K-1|0;z=b+74616|0;s=b+74588|0;b=(ga(f>>I,F)|0)+(C>>I)|0;W=0;do{_=W+f|0;X=(ga(_,m)|0)+C|0;Y=(ga(_,o)|0)+C|0;if(j){k=_<<G;U=(W|0)==0;M=X+V|0;B=X+fa|0;N=(W|0)==(Z|0);Q=0;do{do{if(L){if((a[v]|0)==0){$=17;break}O=c[x>>2]|0;P=(ga(k>>O,c[ha>>2]|0)|0)+(Q+C<<G>>O)|0;O=(c[y>>2]|0)+(P*3|0)|0;if(((d[O]|d[O+1|0]<<8)<<16>>16&1024)==0){$=17}}else{$=17}}while(0);a:do{if(($|0)==17){$=0;O=Q+C|0;P=O<<G;ca=c[x>>2]|0;R=(ga(k>>ca,c[ha>>2]|0)|0)+(P>>ca)|0;ca=(c[y>>2]|0)+(R*3|0)|0;if(!(((d[ca]|d[ca+1|0]<<8)<<16>>16&2048)==0)){break}if((Q|0)==0|U|(Q|0)==(ea|0)|N){ca=0;do{R=(c[p+(ca<<2)>>2]|0)+O|0;T=(c[q+(ca<<2)>>2]|0)+_|0;if(!((T|R|0)>-1&(R|0)<(g|0)&(T|0)<(D|0))){break a}aa=c[A>>2]|0;S=c[t>>2]|0;da=(ga(T<<G>>aa,S)|0)+(R<<G>>aa)|0;ba=c[w>>2]|0;ka=c[E>>2]|0;la=c[ka+(e[ba+(da*24|0)+2>>1]<<2)>>2]|0;da=c[la+792>>2]|0;if((da|0)<(u|0)){if((a[(c[ka+(e[ba+(((ga(k>>aa,S)|0)+(P>>aa)|0)*24|0)+2>>1]<<2)>>2]|0)+764|0]|0)==0){break a}}if((da|0)>(u|0)){if((a[la+764|0]|0)==0){break a}}if((a[z]|0)==0){la=(ga(T>>I,F)|0)+(R>>I)|0;R=c[s>>2]|0;if((c[R+(la<<2)>>2]|0)!=(c[R+(b<<2)>>2]|0)){break a}}ca=ca+1|0;}while((ca|0)<2)}ca=d[l+(Q+X)|0]|0;P=ca-(d[l+(M+Q+ia)|0]|0)|0;if((P|0)<0){ma=1}else{ma=(P|0)>0|2}P=ca-(d[l+(B+Q+ja)|0]|0)|0;if((P|0)<0){na=-1}else{na=(P|0)>0|0}P=ca+(a[r+(ma+na)|0]|0)|0;if((P|0)<0){oa=0}else{oa=((P|0)>(H|0)?H:P)&255}a[n+(Y+Q)|0]=oa}}while(0);Q=Q+1|0;}while((Q|0)<(J|0))}W=W+1|0;}while((W|0)<(K|0));i=h;return}function Ag(b){b=b|0;var d=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;if((a[b+73971|0]|0)==0){return}d=b+36|0;f=b+24|0;g=ga(c[f>>2]|0,c[d>>2]|0)|0;h=hs((g|0)>-1?g:-1)|0;if((h|0)==0){we(c[b+78708>>2]|0,1024,0);return}g=b+40|0;i=b+32|0;j=b+74244|0;k=b+74236|0;l=b+78724|0;m=b+78712|0;n=b+44|0;o=b+74220|0;p=b+4|0;q=0;r=c[j>>2]|0;while(1){s=(q|0)==0;t=s?d:g;u=c[t>>2]|0;v=b+4+(q<<2)|0;xs(h|0,c[v>>2]|0,ga(c[(s?f:i)>>2]|0,u)|0)|0;if((r|0)>0){w=0;x=c[k>>2]|0;y=r;while(1){if((x|0)>0){if(s){z=0;A=x;while(1){B=ga(c[l>>2]|0,w)|0;if((a[(c[(c[n>>2]|0)+(e[(c[m>>2]|0)+((B+z|0)*24|0)+2>>1]<<2)>>2]|0)+325|0]|0)==0){C=A}else{zg(b,z,w,0,0,1<<c[o>>2],h,u,c[p>>2]|0,c[d>>2]|0);C=c[k>>2]|0}B=z+1|0;if((B|0)<(C|0)){z=B;A=C}else{D=C;break}}}else{A=0;z=x;while(1){B=ga(c[l>>2]|0,w)|0;if((a[(c[(c[n>>2]|0)+(e[(c[m>>2]|0)+((B+A|0)*24|0)+2>>1]<<2)>>2]|0)+326|0]|0)==0){E=z}else{zg(b,A,w,0,q,1<<(c[o>>2]|0)-1,h,u,c[v>>2]|0,c[t>>2]|0);E=c[k>>2]|0}B=A+1|0;if((B|0)<(E|0)){A=B;z=E}else{D=E;break}}}F=D;G=c[j>>2]|0}else{F=x;G=y}z=w+1|0;if((z|0)<(G|0)){w=z;x=F;y=G}else{H=G;break}}}else{H=r}y=q+1|0;if((y|0)<3){q=y;r=H}else{break}}js(h);return}function Bg(b){b=b|0;var d=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;d=b|0;f=b+4|0;c[f>>2]=1;g=b+12|0;Sf(c[g>>2]|0);h=c[g>>2]|0;i=c[h+74236>>2]|0;j=i-1|0;k=c[h+74220>>2]|0;l=1<<k;m=b+8|0;n=b+24|0;Uf(h,d,j,c[m>>2]|0,c[n>>2]|0);h=c[m>>2]|0;if((h|0)>0){Uf(c[g>>2]|0,d,j,h-1|0,c[n>>2]|0);o=c[m>>2]|0}else{o=h}h=o+1|0;p=c[g>>2]|0;if((h|0)<(c[p+74244>>2]|0)){Uf(p,d,j,h,c[n>>2]|0);q=c[m>>2]|0}else{q=o}o=b+20|0;n=b+16|0;Pf(c[o>>2]|0,c[n>>2]|0,q<<k,q+1<<k);k=c[g>>2]|0;if((c[k+74236>>2]|0)>0){q=l>>1;b=0;h=k;while(1){d=c[m>>2]|0;p=(ga(c[h+78724>>2]|0,d)|0)+b|0;r=c[(c[h+44>>2]|0)+(e[(c[h+78712>>2]|0)+(p*24|0)+2>>1]<<2)>>2]|0;if((a[r+325|0]|0)!=0){p=c[n>>2]|0;s=c[o>>2]|0;zg(h,b,d,0,0,l,c[p+4>>2]|0,c[p+36>>2]|0,c[s+4>>2]|0,c[s+36>>2]|0)}if((a[r+326|0]|0)!=0){r=c[n>>2]|0;s=c[o>>2]|0;zg(c[g>>2]|0,b,c[m>>2]|0,0,1,q,c[r+8>>2]|0,c[r+40>>2]|0,c[s+8>>2]|0,c[s+40>>2]|0);s=c[n>>2]|0;r=c[o>>2]|0;zg(c[g>>2]|0,b,c[m>>2]|0,0,2,q,c[s+12>>2]|0,c[s+40>>2]|0,c[r+12>>2]|0,c[r+40>>2]|0)}r=b+1|0;s=c[g>>2]|0;if((r|0)<(c[s+74236>>2]|0)){b=r;h=s}else{t=s;break}}}else{t=k}if((i|0)<1){u=t;c[f>>2]=3;Tf(u);return}else{v=0;w=t}while(1){t=(ga(c[m>>2]|0,c[w+74236>>2]|0)|0)+v|0;Uh((c[w+78880>>2]|0)+(t*76|0)|0,4);if((v|0)>=(j|0)){break}v=v+1|0;w=c[g>>2]|0}u=c[g>>2]|0;c[f>>2]=3;Tf(u);return}function Cg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+8|0;f=e|0;g=c[b>>2]|0;if((a[g+73971|0]|0)==0){h=0;i=e;return h|0}j=g+78708|0;k=c[j>>2]|0;l=b+8|0;m=g+78832|0;if((Lf(l,c[g+20>>2]|0,c[g+24>>2]|0,c[g+16>>2]|0,g+69300|0,0,k,c[m>>2]|0,c[m+4>>2]|0,c[g+78840>>2]|0,1)|0)!=0){we(c[j>>2]|0,1024,0);h=0;i=e;return h|0}j=g+74244|0;Rf(g,c[j>>2]|0);if((c[j>>2]|0)>0){m=b+79020|0;n=b+79024|0;o=b+79016|0;b=k+1467912|0;k=0;do{p=gs(28)|0;c[p+4>>2]=0;c[p>>2]=17184;c[p+16>>2]=g;c[p+20>>2]=l;c[p+12>>2]=g;c[p+8>>2]=k;c[p+24>>2]=d;q=p;c[f>>2]=q;p=c[m>>2]|0;if((p|0)==(c[n>>2]|0)){me(o,f)}else{if((p|0)==0){r=0}else{c[p>>2]=q;r=c[m>>2]|0}c[m>>2]=r+4}Zh(b,q);k=k+1|0;}while((k|0)<(c[j>>2]|0))}Wf(g);Qf(g,l);h=1;i=e;return h|0}function Dg(a){a=a|0;return}function Eg(a){a=a|0;is(a);return}function Fg(a,b){a=a|0;b=b|0;var d=0;if((b|0)==2){d=c[23376+(a<<2)>>2]|0}else if((b|0)==0){d=c[23440+(a<<2)>>2]|0}else if((b|0)==1){d=c[23408+(a<<2)>>2]|0}else{d=0}return d|0}function Gg(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;i=(c[22280+(g*24|0)+(h<<2)>>2]|0)+((f<<h)+e<<1)|0;e=b;C=(d[i]|d[i+1|0]<<8)<<16>>16;a[e]=C;C=C>>8;a[e+1|0]=C;return}function Hg(){var b=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;b=1;while(1){e=c[23408+(b<<2)>>2]|0;f=1<<b;if((f|0)>0){g=0;h=0;while(1){i=h&255;j=g;k=0;while(1){a[e+(j<<1)|0]=k;a[e+(j<<1)+1|0]=i;l=k+1|0;if((l|0)<(f|0)){j=j+1|0;k=l}else{break}}k=h+1|0;if((k|0)<(f|0)){g=g+f|0;h=k}else{break}}h=c[23376+(b<<2)>>2]|0;g=0;e=0;while(1){k=e&255;j=g;i=0;while(1){a[h+(j<<1)|0]=k;a[h+(j<<1)+1|0]=i;l=i+1|0;if((l|0)<(f|0)){j=j+1|0;i=l}else{break}}i=e+1|0;if((i|0)<(f|0)){g=g+f|0;e=i}else{break}}}e=c[23440+(b<<2)>>2]|0;g=f<<b;h=0;i=0;j=0;while(1){if((j|0)<(g|0)){k=h;l=i;while(1){if((k|0)>-1){m=l;n=k;break}else{k=l;l=0}}}else{if((h|0)>-1){m=i;n=h}else{break}}if((m|0)<(f|0)&(n|0)<(f|0)){a[e+(j<<1)|0]=m;a[e+(j<<1)+1|0]=n;o=j+1|0}else{o=j}h=n-1|0;i=m+1|0;j=o}j=b+1|0;if((j|0)<6){b=j}else{p=2;break}}do{b=1<<p;o=(b|0)>0;m=p-2|0;n=(1<<m<<m)-1|0;j=23440+(m<<2)|0;i=23408+(m<<2)|0;h=23376+(m<<2)|0;m=0;do{if(o){e=22280+(m*24|0)+(p<<2)|0;f=(m|0)==0;g=0;do{l=g<<p;k=c[e>>2]|0;if(f){q=0;do{r=q+l|0;s=c[j>>2]|0;t=16;u=n;while(1){v=(t|0)==0;w=(v<<31>>31)+u|0;x=v?15:t-1|0;if((((d[s+(w<<1)|0]|0)<<2)+(d[38176+(x<<1)|0]|0)|0)!=(q|0)){t=x;u=w;continue}if((((d[s+(w<<1)+1|0]|0)<<2)+(d[38177+(x<<1)|0]|0)|0)==(g|0)){break}else{t=x;u=w}}a[k+(r<<1)|0]=w;a[k+(r<<1)+1|0]=x;q=q+1|0;}while((q|0)<(b|0))}else{q=0;do{u=q+l|0;if((m|0)==2){y=32720;z=c[h>>2]|0}else if((m|0)==1){y=35448;z=c[i>>2]|0}else{y=0;z=0}t=16;s=n;while(1){v=(t|0)==0;A=(v<<31>>31)+s|0;B=v?15:t-1|0;if((((d[z+(A<<1)|0]|0)<<2)+(d[y+(B<<1)|0]|0)|0)!=(q|0)){t=B;s=A;continue}if((((d[z+(A<<1)+1|0]|0)<<2)+(d[y+(B<<1)+1|0]|0)|0)==(g|0)){break}else{t=B;s=A}}a[k+(u<<1)|0]=A;a[k+(u<<1)+1|0]=B;q=q+1|0;}while((q|0)<(b|0))}g=g+1|0;}while((g|0)<(b|0))}m=m+1|0;}while((m|0)<3);p=p+1|0;}while((p|0)<6);return}function Ig(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;f=0;while(1){h=hd(d,8)|0;i=h+f|0;if((h|0)==255){f=i}else{j=0;break}}do{f=hd(d,8)|0;j=f+j|0;}while((f|0)==255);c[e>>2]=i;c[e+4>>2]=j;if((i|0)!=132){k=0;return k|0}i=hd(d,8)|0;j=e+8|0;c[j>>2]=i;if((g|0)==0){k=1025;return k|0}f=(c[g+444>>2]|0)==0?1:3;g=0;h=i;while(1){if((h|0)==1){b[e+60+(g<<1)>>1]=hd(d,16)|0}else if((h|0)==2){c[e+68+(g<<2)>>2]=hd(d,32)|0}else if((h|0)==0){a[e+12+(g<<4)|0]=hd(d,8)|0;a[e+12+(g<<4)+1|0]=hd(d,8)|0;a[e+12+(g<<4)+2|0]=hd(d,8)|0;a[e+12+(g<<4)+3|0]=hd(d,8)|0;a[e+12+(g<<4)+4|0]=hd(d,8)|0;a[e+12+(g<<4)+5|0]=hd(d,8)|0;a[e+12+(g<<4)+6|0]=hd(d,8)|0;a[e+12+(g<<4)+7|0]=hd(d,8)|0;a[e+12+(g<<4)+8|0]=hd(d,8)|0;a[e+12+(g<<4)+9|0]=hd(d,8)|0;a[e+12+(g<<4)+10|0]=hd(d,8)|0;a[e+12+(g<<4)+11|0]=hd(d,8)|0;a[e+12+(g<<4)+12|0]=hd(d,8)|0;a[e+12+(g<<4)+13|0]=hd(d,8)|0;a[e+12+(g<<4)+14|0]=hd(d,8)|0;a[e+12+(g<<4)+15|0]=hd(d,8)|0}i=g+1|0;if((i|0)>=(f|0)){k=0;break}g=i;h=c[j>>2]|0}return k|0}function Jg(a,b){a=a|0;b=b|0;return}function Kg(e,f){e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;g=i;i=i+168|0;h=g|0;j=g+152|0;if((c[e>>2]|0)!=132){k=0;i=g;return k|0}if((a[(c[f+78708>>2]|0)+168|0]|0)==0){k=0;i=g;return k|0}l=j|0;if((a[f+96|0]|0)==0){k=0;i=g;return k|0}m=(c[f+69744>>2]|0)==0?1:3;n=f+20|0;o=f+28|0;p=f+24|0;q=f+32|0;s=f+36|0;t=f+40|0;u=e+8|0;v=0;a:while(1){w=(v|0)==0;x=c[(w?n:o)>>2]|0;y=c[(w?p:q)>>2]|0;z=c[f+4+(v<<2)>>2]|0;A=c[(w?s:t)>>2]|0;w=c[u>>2]|0;if((w|0)==0){eg(h);if((y|0)>0){B=0;do{fg(h,z+(ga(B,A)|0)|0,x);B=B+1|0;}while((B|0)<(y|0))}hg(l,h);B=0;while(1){C=B+1|0;if((a[j+B|0]|0)!=(a[e+12+(v<<4)+B|0]|0)){D=11;break a}if((C|0)<16){B=C}else{break}}}else if((w|0)==2){if((y|0)>0&(x|0)>0){B=0;C=0;while(1){E=B>>>8^B;F=ga(B,A)|0;G=0;H=C;do{H=((E^G^G>>>8)&255^d[z+(G+F)|0])+H|0;G=G+1|0;}while((G|0)<(x|0));G=B+1|0;if((G|0)<(y|0)){B=G;C=H}else{I=H;break}}}else{I=0}J=c[e+68+(v<<2)>>2]|0;if((I|0)!=(J|0)){D=23;break}}else if((w|0)==1){if((y|0)>0&(x|0)>0){C=7439;B=0;while(1){G=C;F=z+(ga(B,A)|0)|0;E=0;while(1){K=d[F]^(G&65535)>>>8;L=(K&65535)>>>4^K;M=(L|G<<8)^L<<5^L<<12;L=E+1|0;if((L|0)<(x|0)){G=M;F=F+1|0;E=L}else{break}}E=B+1|0;if((E|0)<(y|0)){C=M;B=E}else{N=M;break}}}else{N=7439}O=b[e+60+(v<<1)>>1]|0;if(!(N<<16>>16==O<<16>>16)){D=17;break}}B=v+1|0;if((B|0)<(m|0)){v=B}else{k=0;D=25;break}}if((D|0)==11){fc(c[r>>2]|0,8160,(P=i,i=i+8|0,c[P>>2]=c[f+88>>2],P)|0)|0;i=P;k=5;i=g;return k|0}else if((D|0)==17){v=c[f+88>>2]|0;fc(c[r>>2]|0,7920,(P=i,i=i+24|0,c[P>>2]=O&65535,c[P+8>>2]=N&65535,c[P+16>>2]=v,P)|0)|0;i=P;k=5;i=g;return k|0}else if((D|0)==23){v=c[f+88>>2]|0;fc(c[r>>2]|0,7920,(P=i,i=i+24|0,c[P>>2]=J,c[P+8>>2]=I,c[P+16>>2]=v,P)|0)|0;i=P;k=5;i=g;return k|0}else if((D|0)==25){i=g;return k|0}return 0}function Lg(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=a[g+1188092+((c[f+8>>2]|0)*4372|0)+2|0]|0;i=kd(e)|0;j=f+380|0;a[j]=i;if(i>>>0>7>>>0){k=0;return k|0}i=g+1107516+((h<<24>>24)*5036|0)+444|0;do{if((c[i>>2]|0)==0){l=f+381|0}else{h=ld(e)|0;g=(d[j]|0)+h|0;if(g>>>0>7>>>0){k=0;return k|0}else{h=f+381|0;a[h]=g;l=h;break}}}while(0);h=f+328|0;g=f+20|0;m=f+332|0;n=0;a:while(1){if((n|0)==1){if((c[g>>2]|0)==0){o=m;p=9}else{k=1;p=29;break}}else if((n|0)==0){o=h;p=9}do{if((p|0)==9){p=0;q=c[o>>2]|0;r=q-1|0;s=(q|0)<1;if(!s){q=0;while(1){a[f+382+(n<<4)+q|0]=hd(e,1)|0;if((q|0)<(r|0)){q=q+1|0}else{break}}}if((c[i>>2]|0)!=0){if(s){break}else{t=0}while(1){a[f+414+(n<<4)+t|0]=hd(e,1)|0;if((t|0)<(r|0)){t=t+1|0}else{break}}}if(s){break}else{u=0}while(1){if((a[f+382+(n<<4)+u|0]|0)==0){b[f+446+(n<<5)+(u<<1)>>1]=1<<d[j];a[f+510+(n<<4)+u|0]=0}else{q=ld(e)|0;if((q+128|0)>>>0>255>>>0){k=0;p=29;break a}b[f+446+(n<<5)+(u<<1)>>1]=(1<<d[j])+q;q=ld(e)|0;if((q+128|0)>>>0>255>>>0){k=0;p=29;break a}a[f+510+(n<<4)+u|0]=q}if((a[f+414+(n<<4)+u|0]|0)==0){q=1<<d[l]&65535;b[f+542+(n<<6)+(u<<2)>>1]=q;a[f+670+(n<<5)+(u<<1)|0]=0;b[f+542+(n<<6)+(u<<2)+2>>1]=q;a[f+670+(n<<5)+(u<<1)+1|0]=0}else{q=0;do{v=ld(e)|0;if((v+128|0)>>>0>255>>>0){k=0;p=29;break a}w=f+542+(n<<6)+(u<<2)+(q<<1)|0;b[w>>1]=(1<<d[l])+v;v=ld(e)|0;if((v+512|0)>>>0>1023>>>0){k=0;p=29;break a}x=v-(b[w>>1]<<7>>d[l])+128|0;if((x|0)<-128){y=-128}else{y=(x|0)>127?127:x&255}a[f+670+(n<<5)+(u<<1)+q|0]=y;q=q+1|0;}while((q|0)<2)}if((u|0)<(r|0)){u=u+1|0}else{break}}}}while(0);r=n+1|0;if((r|0)<2){n=r}else{k=1;p=29;break}}if((p|0)==29){return k|0}return 0}function Mg(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;a[g]=0;h=b+12|0;a[h]=0;i=b+4|0;a[i]=hd(e,1)|0;if((a[f+1469726|0]|0)!=0){a[b+5|0]=hd(e,1)|0}j=kd(e)|0;c[b+8>>2]=j;if((j|0)>64|(j|0)==-99999){we(f|0,1009,0);k=0;return k|0}if((a[f+1188092+(j*4372|0)|0]|0)==0){we(f|0,1009,0);k=0;return k|0}l=a[f+1188092+(j*4372|0)+2|0]|0;m=f+1107516+(l*5036|0)|0;if((a[m|0]|0)==0){we(f|0,1010,0);a[g]=0;k=0;return k|0}if((a[i]|0)==0){if((a[f+1188092+(j*4372|0)+3|0]|0)==0){n=0}else{n=(hd(e,1)|0)&255}a[h]=n;n=c[f+1107516+(l*5036|0)+4952>>2]|0;o=0;while(1){if((1<<o|0)<(n|0)){o=o+1|0}else{break}}n=hd(e,o)|0;if((a[h]|0)==0){p=0}else{if((n|0)==0){a[g]=0;we(f|0,1021,0);k=0;return k|0}o=c[f+1468740>>2]|0;xs(b|0,o|0,776)|0;if((o|0)!=(b|0)){Se(b+776|0,c[o+776>>2]|0,c[o+780>>2]|0);xs(b+788|0,o+788|0,698)|0;Se(b+1488|0,c[o+1488>>2]|0,c[o+1492>>2]|0)}a[i]=0;a[h]=1;p=1}c[b+16>>2]=n;if((n|0)>=0){q=p;r=n;s=22}}else{a[h]=0;c[b+16>>2]=0;q=0;r=0;s=22}do{if((s|0)==22){if((r|0)>(c[f+1107516+(l*5036|0)+4952>>2]|0)){break}a:do{if(q<<24>>24==0){h=f+1188092+(j*4372|0)+4368|0;if((a[h]|0)>0){n=0;do{id(e,1);n=n+1|0;}while((n|0)<(a[h]|0))}h=kd(e)|0;n=b+20|0;c[n>>2]=h;if((h|0)>2|(h|0)==-99999){we(f|0,1007,0);a[g]=0;k=0;return k|0}if((a[f+1188092+(j*4372|0)+31|0]|0)==0){a[b+24|0]=1}else{a[b+24|0]=hd(e,1)|0}if((a[f+1107516+(l*5036|0)+448|0]|0)==1){a[b+25|0]=hd(e,1)|0}h=b+28|0;c[h>>2]=0;p=b+32|0;a[p]=0;do{if(((a[f+1469724|0]|0)-19&255)>>>0<2>>>0){c[h>>2]=0;c[b+140>>2]=0;c[b+144>>2]=0;t=0}else{i=f+1107516+(l*5036|0)+488|0;c[h>>2]=hd(e,c[i>>2]|0)|0;o=(hd(e,1)|0)&255;a[p]=o;do{if(o<<24>>24==0){u=b+34|0;v=f+1107516+(l*5036|0)+4688|0;xg(f,m,e,u,c[v>>2]|0,f+1107516+(l*5036|0)+4692|0,1)|0;c[b+808>>2]=c[v>>2];xs(b+812|0,u|0,100)|0}else{u=f+1107516+(l*5036|0)+4688|0;v=c[u>>2]|0;w=0;while(1){if((1<<w|0)<(v|0)){w=w+1|0}else{break}}if((w|0)>0){v=hd(e,w)|0;c[b+136>>2]=v;x=v}else{c[b+136>>2]=0;x=0}if((x|0)<=(c[u>>2]|0)){c[b+808>>2]=x;xs(b+812|0,(c[f+1107516+(l*5036|0)+4692>>2]|0)+(x*100|0)|0,100)|0;break}we(f|0,1015,0);k=8;return k|0}}while(0);b:do{if((a[f+1107516+(l*5036|0)+4704|0]|0)==0){c[b+140>>2]=0;c[b+144>>2]=0;y=0}else{o=f+1107516+(l*5036|0)+4708|0;if((c[o>>2]|0)>0){c[b+140>>2]=kd(e)|0}else{c[b+140>>2]=0}v=kd(e)|0;z=b+144|0;c[z>>2]=v;A=b+140|0;B=c[A>>2]|0;C=B+v|0;if((C+(d[b+812|0]|0)+(d[b+813|0]|0)|0)>(c[f+1107516+(l*5036|0)+496+((a[f+1107516+(l*5036|0)+2|0]|0)-1<<2)>>2]|0)){we(f|0,1018,0);a[g]=0;k=0;return k|0}if((C|0)>0){D=0;E=0;F=B}else{y=0;break}while(1){if((D|0)<(F|0)){B=c[o>>2]|0;C=0;while(1){if((1<<C|0)<(B|0)){C=C+1|0}else{break}}B=hd(e,C)|0;v=b+148+D|0;a[v]=B;G=B&255;if((G|0)>=(c[o>>2]|0)){break}c[f+1468744+(D<<2)>>2]=c[f+1107516+(l*5036|0)+4712+(G<<2)>>2];G=a[(d[v]|0)+(f+1107516+(l*5036|0)+4840)|0]|0;c[f+1468808+(D<<2)>>2]=G;H=G}else{G=b+164+(D<<2)|0;c[G>>2]=hd(e,c[i>>2]|0)|0;v=b+228+D|0;a[v]=hd(e,1)|0;c[f+1468744+(D<<2)>>2]=c[G>>2];G=a[v]|0;c[f+1468808+(D<<2)>>2]=G;H=G}G=((H|0)!=0)+E|0;v=(hd(e,1)|0)&255;a[b+244+D|0]=v;if(v<<24>>24==0){c[b+260+(D<<2)>>2]=0;I=0}else{v=kd(e)|0;c[b+260+(D<<2)>>2]=v;I=v}do{if((D|0)==0){s=64}else{if((D|0)==(c[A>>2]|0)){s=64;break}c[f+1468872+(D<<2)>>2]=(c[f+1468872+(D-1<<2)>>2]|0)+I}}while(0);if((s|0)==64){s=0;c[f+1468872+(D<<2)>>2]=I}C=D+1|0;v=c[A>>2]|0;if((C|0)<((c[z>>2]|0)+v|0)){D=C;E=G;F=v}else{y=G;break b}}we(f|0,1023,0);a[g]=0;k=0;return k|0}}while(0);if((a[f+1107516+(l*5036|0)+4872|0]|0)==0){a[b+324|0]=0;t=y;break}else{a[b+324|0]=hd(e,1)|0;t=y;break}}}while(0);if((a[f+1107516+(l*5036|0)+4671|0]|0)==0){a[b+325|0]=0;a[b+326|0]=0}else{a[b+325|0]=hd(e,1)|0;a[b+326|0]=hd(e,1)|0}do{if((c[n>>2]|0)>>>0<2>>>0){p=(hd(e,1)|0)&255;a[b+327|0]=p;do{if(p<<24>>24==0){c[b+328>>2]=a[f+1188092+(j*4372|0)+6|0]|0;c[b+332>>2]=a[f+1188092+(j*4372|0)+7|0]|0}else{h=kd(e)|0;i=b+328|0;c[i>>2]=h;if((h|0)==-99999){we(f|0,1007,0);k=8;return k|0}c[i>>2]=h+1;if((c[n>>2]|0)!=0){break}h=kd(e)|0;i=b+332|0;c[i>>2]=h;if(!((h|0)==-99999)){c[i>>2]=h+1;break}we(f|0,1007,0);k=8;return k|0}}while(0);p=(d[b+815|0]|0)+t|0;c[b+912>>2]=p;do{if((a[f+1188092+(j*4372|0)+4361|0]|0)!=0&(p|0)>1){h=0;while(1){if((1<<h|0)<(p|0)){h=h+1|0}else{break}}i=(hd(e,1)|0)&255;a[b+336|0]=i;do{if(!(i<<24>>24==0)){z=b+328|0;if((c[z>>2]|0)>0){J=0}else{break}do{a[b+338+J|0]=hd(e,h)|0;J=J+1|0;}while((J|0)<(c[z>>2]|0))}}while(0);if((c[n>>2]|0)!=0){a[b+337|0]=0;break}i=(hd(e,1)|0)&255;a[b+337|0]=i;if(i<<24>>24==0){break}i=b+332|0;if((c[i>>2]|0)>0){K=0}else{break}do{a[b+354+K|0]=hd(e,h)|0;K=K+1|0;}while((K|0)<(c[i>>2]|0))}else{a[b+336|0]=0;a[b+337|0]=0}}while(0);if((c[n>>2]|0)==0){a[b+370|0]=hd(e,1)|0}if((a[f+1188092+(j*4372|0)+5|0]|0)==0){a[b+371|0]=0}else{a[b+371|0]=hd(e,1)|0}do{if((a[b+324|0]|0)!=0){do{if((c[n>>2]|0)==0){p=(hd(e,1)|0)&255;a[b+372|0]=p;if(!(p<<24>>24==0)){s=104;break}if((c[b+332>>2]|0)<=1){s=108}}else{a[b+372|0]=1;s=104}}while(0);if((s|0)==104){if((c[b+328>>2]|0)<=1){s=108}}if((s|0)==108){c[b+376>>2]=0;break}p=kd(e)|0;c[b+376>>2]=p;if(!((p|0)==-99999)){break}we(f|0,1007,0);k=8;return k|0}}while(0);if((a[f+1188092+(j*4372|0)+29|0]|0)==0){s=111}else{if((c[n>>2]|0)==1){s=113}else{s=111}}do{if((s|0)==111){if((a[f+1188092+(j*4372|0)+30|0]|0)==0){break}if((c[n>>2]|0)==0){s=113}}}while(0);do{if((s|0)==113){if(Lg(e,b,f)|0){break}we(f|0,8,0);k=8;return k|0}}while(0);p=kd(e)|0;c[b+736>>2]=p;if(!((p|0)==-99999)){c[b+804>>2]=5-p;break}we(f|0,1007,0);k=8;return k|0}}while(0);n=ld(e)|0;c[b+740>>2]=n;if((n|0)==-99999){we(f|0,1007,0);k=8;return k|0}do{if((a[f+1188092+(j*4372|0)+28|0]|0)==0){c[b+744>>2]=0;c[b+748>>2]=0}else{n=ld(e)|0;c[b+744>>2]=n;if((n|0)==-99999){we(f|0,1007,0);k=8;return k|0}n=ld(e)|0;c[b+748>>2]=n;if(!((n|0)==-99999)){break}we(f|0,1007,0);k=8;return k|0}}while(0);if((a[f+1188092+(j*4372|0)+283|0]|0)==0){a[b+752|0]=0;L=1}else{n=(hd(e,1)|0)&255;a[b+752|0]=n;L=n<<24>>24==0}n=b+756|0;c[n>>2]=c[f+1188092+(j*4372|0)+288>>2];p=b+760|0;c[p>>2]=c[f+1188092+(j*4372|0)+292>>2];do{if(L){a[b+753|0]=a[f+1188092+(j*4372|0)+284|0]|0}else{i=(hd(e,1)|0)&255;a[b+753|0]=i;if(!(i<<24>>24==0)){break}i=ld(e)|0;c[n>>2]=i;if((i|0)==-99999){we(f|0,1007,0);k=8;return k|0}c[n>>2]=i<<1;i=ld(e)|0;c[p>>2]=i;if(!((i|0)==-99999)){c[p>>2]=i<<1;break}we(f|0,1007,0);k=8;return k|0}}while(0);p=a[f+1188092+(j*4372|0)+281|0]|0;c:do{if(!(p<<24>>24==0)){do{if((a[b+325|0]|0)==0){if((a[b+326|0]|0)!=0){break}if((a[b+753|0]|0)!=0){break c}}}while(0);a[b+764|0]=hd(e,1)|0;break a}}while(0);a[b+764|0]=p}}while(0);do{if((a[f+1188092+(j*4372|0)+34|0]|0)==0){if((a[f+1188092+(j*4372|0)+33|0]|0)!=0){s=145;break}c[b+768>>2]=0}else{s=145}}while(0);d:do{if((s|0)==145){n=kd(e)|0;i=b+768|0;c[i>>2]=n;if((n|0)==-99999){we(f|0,1007,0);k=8;return k|0}h=b+776|0;z=b+780|0;G=c[z>>2]|0;A=h|0;o=c[A>>2]|0;u=G-o>>2;do{if(u>>>0<n>>>0){ug(h,n-u|0);M=c[i>>2]|0}else{if(!(u>>>0>n>>>0)){M=n;break}w=o+(n<<2)|0;if((G|0)==(w|0)){M=n;break}c[z>>2]=G+(~((G-4+(-w|0)|0)>>>2)<<2);M=n}}while(0);if((M|0)<=0){break}n=kd(e)|0;G=b+772|0;c[G>>2]=n;if((n|0)==-99999){we(f|0,1007,0);k=8;return k|0}z=n+1|0;c[G>>2]=z;if((c[i>>2]|0)>0){N=0;O=z}else{break}while(1){z=(hd(e,O)|0)+1|0;n=c[A>>2]|0;o=n+(N<<2)|0;c[o>>2]=z;if((N|0)>0){c[o>>2]=z+(c[n+(N-1<<2)>>2]|0)}n=N+1|0;if((n|0)>=(c[i>>2]|0)){break d}N=n;O=c[G>>2]|0}}}while(0);do{if((a[f+1188092+(j*4372|0)+4369|0]|0)!=0){G=kd(e)|0;i=b+788|0;c[i>>2]=G;if((G|0)==-99999|(G|0)>1e3){we(f|0,1007,0);k=8;return k|0}else{if((G|0)>0){P=0}else{break}do{hd(e,8)|0;P=P+1|0;}while((P|0)<(c[i>>2]|0))}}}while(0);c[b+796>>2]=(c[b+740>>2]|0)+(c[f+1188092+(j*4372|0)+8>>2]|0);i=c[b+20>>2]|0;if((i|0)==2){c[b+800>>2]=0}else if((i|0)==1){c[b+800>>2]=(a[b+371|0]|0)+1}else if((i|0)==0){c[b+800>>2]=2-(a[b+371|0]|0)}a[g]=1;k=0;return k|0}}while(0);we(f|0,1020,0);k=8;return k|0}function Ng(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,t=0,u=0,v=0,w=0,x=0;h=i;if((g|0)==1){j=s}else if((g|0)==2){j=r}else{i=h;return}g=c[j>>2]|0;j=e+8|0;k=c[j>>2]|0;if((a[f+1188092+(k*4372|0)|0]|0)==0){bc(6512,10960,647,12656)}l=a[f+1188092+(k*4372|0)+2|0]|0;if((a[f+1107516+(l*5036|0)|0]|0)==0){bc(4056,10960,650,12656)}rh(g,2640,(m=i,i=i+1|0,i=i+7&-8,c[m>>2]=0,m)|0);i=m;n=e+4|0;rh(g,1704,(m=i,i=i+8|0,c[m>>2]=a[n]|0,m)|0);i=m;o=f+1469724|0;if(((a[o]|0)-16&255)>>>0<8>>>0){rh(g,1176,(m=i,i=i+8|0,c[m>>2]=a[e+5|0]|0,m)|0);i=m}rh(g,760,(m=i,i=i+8|0,c[m>>2]=c[j>>2],m)|0);i=m;if((a[n]|0)==0){if((a[f+1188092+(k*4372|0)+3|0]|0)!=0){rh(g,416,(m=i,i=i+8|0,c[m>>2]=a[e+12|0]|0,m)|0);i=m}rh(g,12360,(m=i,i=i+8|0,c[m>>2]=c[e+16>>2],m)|0);i=m}n=e+20|0;j=c[n>>2]|0;if((j|0)==0){p=66}else{p=(j|0)==1?80:73}rh(g,11856,(m=i,i=i+8|0,c[m>>2]=p,m)|0);i=m;if((a[f+1188092+(k*4372|0)+31|0]|0)!=0){rh(g,11480,(m=i,i=i+8|0,c[m>>2]=a[e+24|0]|0,m)|0);i=m}if((a[f+1107516+(l*5036|0)+448|0]|0)==1){rh(g,11088,(m=i,i=i+8|0,c[m>>2]=a[e+25|0]|0,m)|0);i=m}rh(g,10840,(m=i,i=i+8|0,c[m>>2]=c[e+28>>2],m)|0);i=m;do{if(!(((a[o]|0)-19&255)>>>0<2>>>0)){p=e+32|0;rh(g,10496,(m=i,i=i+8|0,c[m>>2]=a[p]|0,m)|0);i=m;j=c[f+1107516+(l*5036|0)+4688>>2]|0;do{if((a[p]|0)==0){rh(g,10280,(m=i,i=i+8|0,c[m>>2]=j,m)|0);i=m;yg(e+34|0,16,g)}else{if((j|0)<=1){break}q=e+136|0;rh(g,10040,(m=i,i=i+8|0,c[m>>2]=c[q>>2],m)|0);i=m;yg((c[f+1107516+(l*5036|0)+4692>>2]|0)+((c[q>>2]|0)*100|0)|0,16,g)}}while(0);if((a[f+1107516+(l*5036|0)+4704|0]|0)!=0){if((c[f+1107516+(l*5036|0)+4708>>2]|0)>0){rh(g,9832,(m=i,i=i+8|0,c[m>>2]=c[e+140>>2],m)|0);i=m}rh(g,9624,(m=i,i=i+8|0,c[m>>2]=c[e+144>>2],m)|0);i=m}if((a[f+1107516+(l*5036|0)+4872|0]|0)==0){break}rh(g,9448,(m=i,i=i+8|0,c[m>>2]=a[e+324|0]|0,m)|0);i=m}}while(0);if((a[f+1107516+(l*5036|0)+4671|0]|0)!=0){rh(g,9232,(m=i,i=i+8|0,c[m>>2]=a[e+325|0]|0,m)|0);i=m;rh(g,9048,(m=i,i=i+8|0,c[m>>2]=a[e+326|0]|0,m)|0);i=m}if((c[n>>2]|0)>>>0<2>>>0){o=e+327|0;rh(g,8816,(m=i,i=i+8|0,c[m>>2]=a[o]|0,m)|0);i=m;j=e+328|0;p=(a[o]|0)!=0?25992:8144;rh(g,8624,(m=i,i=i+16|0,c[m>>2]=c[j>>2],c[m+8>>2]=p,m)|0);i=m;if((c[n>>2]|0)==0){p=(a[o]|0)!=0?25992:8144;rh(g,7880,(m=i,i=i+16|0,c[m>>2]=c[e+332>>2],c[m+8>>2]=p,m)|0);i=m}do{if((a[f+1188092+(k*4372|0)+4361|0]|0)!=0){if((c[e+912>>2]|0)<=1){break}p=e+336|0;rh(g,7688,(m=i,i=i+8|0,c[m>>2]=a[p]|0,m)|0);i=m;do{if((a[p]|0)!=0){if((c[j>>2]|0)>0){t=0}else{break}do{o=d[e+338+t|0]|0;rh(g,7544,(m=i,i=i+16|0,c[m>>2]=t,c[m+8>>2]=o,m)|0);i=m;t=t+1|0;}while((t|0)<(c[j>>2]|0))}}while(0);p=e+337|0;rh(g,7328,(m=i,i=i+8|0,c[m>>2]=a[p]|0,m)|0);i=m;if((a[p]|0)==0){break}p=e+332|0;if((c[p>>2]|0)>0){u=0}else{break}do{o=d[e+354+u|0]|0;rh(g,7544,(m=i,i=i+16|0,c[m>>2]=u,c[m+8>>2]=o,m)|0);i=m;u=u+1|0;}while((u|0)<(c[p>>2]|0))}}while(0);if((c[n>>2]|0)==0){rh(g,7056,(m=i,i=i+8|0,c[m>>2]=a[e+370|0]|0,m)|0);i=m}rh(g,6840,(m=i,i=i+8|0,c[m>>2]=a[e+371|0]|0,m)|0);i=m;if((a[e+324|0]|0)!=0){rh(g,6584,(m=i,i=i+8|0,c[m>>2]=a[e+372|0]|0,m)|0);i=m;rh(g,6320,(m=i,i=i+8|0,c[m>>2]=c[e+376>>2],m)|0);i=m}if((a[f+1188092+(k*4372|0)+29|0]|0)==0){v=49}else{if((c[n>>2]|0)==1){v=51}else{v=49}}do{if((v|0)==49){if((a[f+1188092+(k*4372|0)+30|0]|0)==0){break}if((c[n>>2]|0)==0){v=51}}}while(0);a:do{if((v|0)==51){rh(g,5920,(m=i,i=i+8|0,c[m>>2]=d[e+380|0]|0,m)|0);i=m;if((c[f+1107516+(l*5036|0)+444>>2]|0)!=0){rh(g,5712,(m=i,i=i+8|0,c[m>>2]=d[e+381|0]|0,m)|0);i=m}u=e+332|0;t=0;do{if((t|0)==1){if((c[n>>2]|0)==0){w=u;v=56}else{break a}}else if((t|0)==0){w=j;v=56}do{if((v|0)==56){v=0;p=c[w>>2]|0;o=p-1|0;if((p|0)<1){break}else{x=0}while(1){p=b[e+446+(t<<5)+(x<<1)>>1]|0;rh(g,5440,(m=i,i=i+24|0,c[m>>2]=t,c[m+8>>2]=x,c[m+16>>2]=p,m)|0);i=m;p=a[e+510+(t<<4)+x|0]|0;rh(g,5240,(m=i,i=i+24|0,c[m>>2]=t,c[m+8>>2]=x,c[m+16>>2]=p,m)|0);i=m;p=b[e+542+(t<<6)+(x<<2)>>1]|0;rh(g,5e3,(m=i,i=i+32|0,c[m>>2]=t,c[m+8>>2]=x,c[m+16>>2]=0,c[m+24>>2]=p,m)|0);i=m;p=a[e+670+(t<<5)+(x<<1)|0]|0;rh(g,4720,(m=i,i=i+32|0,c[m>>2]=t,c[m+8>>2]=x,c[m+16>>2]=0,c[m+24>>2]=p,m)|0);i=m;p=b[e+542+(t<<6)+(x<<2)+2>>1]|0;rh(g,5e3,(m=i,i=i+32|0,c[m>>2]=t,c[m+8>>2]=x,c[m+16>>2]=1,c[m+24>>2]=p,m)|0);i=m;p=a[e+670+(t<<5)+(x<<1)+1|0]|0;rh(g,4720,(m=i,i=i+32|0,c[m>>2]=t,c[m+8>>2]=x,c[m+16>>2]=1,c[m+24>>2]=p,m)|0);i=m;if((x|0)<(o|0)){x=x+1|0}else{break}}}}while(0);t=t+1|0;}while((t|0)<2)}}while(0);rh(g,4544,(m=i,i=i+8|0,c[m>>2]=c[e+736>>2],m)|0);i=m}rh(g,4352,(m=i,i=i+8|0,c[m>>2]=c[e+740>>2],m)|0);i=m;if((a[f+1188092+(k*4372|0)+28|0]|0)!=0){rh(g,4176,(m=i,i=i+8|0,c[m>>2]=c[e+744>>2],m)|0);i=m;rh(g,3976,(m=i,i=i+8|0,c[m>>2]=c[e+748>>2],m)|0);i=m}x=e+752|0;if((a[f+1188092+(k*4372|0)+283|0]|0)!=0){rh(g,3744,(m=i,i=i+8|0,c[m>>2]=a[x]|0,m)|0);i=m}w=e+753|0;v=((a[x]|0)!=0?3448:3360)|0;rh(g,3560,(m=i,i=i+16|0,c[m>>2]=a[w]|0,c[m+8>>2]=v,m)|0);i=m;do{if((a[x]|0)!=0){if((a[w]|0)!=0){break}rh(g,3288,(m=i,i=i+8|0,c[m>>2]=c[e+756>>2],m)|0);i=m;rh(g,3136,(m=i,i=i+8|0,c[m>>2]=c[e+760>>2],m)|0);i=m}}while(0);b:do{if((a[f+1188092+(k*4372|0)+281|0]|0)!=0){do{if((a[e+325|0]|0)==0){if((a[e+326|0]|0)!=0){break}if((a[w]|0)!=0){break b}}}while(0);rh(g,3032,(m=i,i=i+8|0,c[m>>2]=a[e+764|0]|0,m)|0);i=m}}while(0);do{if((a[f+1188092+(k*4372|0)+34|0]|0)==0){if((a[f+1188092+(k*4372|0)+33|0]|0)!=0){break}i=h;return}}while(0);k=e+768|0;rh(g,2904,(m=i,i=i+8|0,c[m>>2]=c[k>>2],m)|0);i=m;if((c[k>>2]|0)<=0){i=h;return}rh(g,2712,(m=i,i=i+8|0,c[m>>2]=c[e+772>>2],m)|0);i=m;if((c[k>>2]|0)<=0){i=h;return}f=e+776|0;e=0;do{w=c[(c[f>>2]|0)+(e<<2)>>2]|0;rh(g,2616,(m=i,i=i+16|0,c[m>>2]=e,c[m+8>>2]=w,m)|0);i=m;e=e+1|0;}while((e|0)<(c[k>>2]|0));i=h;return}function Og(){var b=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;b=$r(11296)|0;if((b|0)==0){e=0;return e|0}ys(b|0,-1|0,11296)|0;c[6434]=b;c[6435]=b;c[6436]=b;c[6437]=b;c[6438]=b;c[6439]=b;c[6440]=b;c[6441]=b;f=b+16|0;c[6442]=f;c[6443]=f;c[6444]=f;c[6445]=f;c[6446]=f;c[6447]=f;c[6448]=f;c[6449]=f;f=b+1056|0;c[6450]=b+32;c[6451]=b+96;c[6452]=b+160;c[6453]=b+224;c[6454]=b+288;c[6455]=b+352;c[6456]=b+416;c[6457]=b+480;c[6458]=b+544;c[6459]=b+608;c[6460]=b+672;c[6461]=b+736;c[6462]=b+800;c[6463]=b+864;c[6464]=b+928;c[6465]=b+992;c[6466]=f;c[6470]=f;f=b+1312|0;c[6467]=f;c[6471]=f;f=b+1568|0;c[6468]=f;c[6472]=f;f=b+1824|0;c[6469]=f;c[6473]=f;f=b+2080|0;c[6474]=f;c[6478]=f;f=b+2336|0;c[6475]=f;c[6479]=f;f=b+2592|0;c[6476]=f;c[6480]=f;f=b+2848|0;c[6477]=f;c[6481]=f;f=b+3104|0;c[6482]=f;c[6486]=f;f=b+4128|0;c[6483]=f;c[6487]=f;f=b+5152|0;c[6484]=f;c[6488]=f;f=b+6176|0;c[6485]=f;c[6489]=f;f=b+7200|0;c[6490]=f;c[6494]=f;f=b+8224|0;c[6491]=f;c[6495]=f;f=b+9248|0;c[6492]=f;c[6496]=f;f=b+10272|0;c[6493]=f;c[6497]=f;f=2;a:while(1){b=1<<f;g=(b|0)>0;h=b>>2;i=(h|0)==1;j=f-2|0;k=(h|0)==2;h=0;do{l=(h|0)==0;m=0;do{n=(m|0)==0?9:15;o=0;do{if(g){p=25736+(j<<6)+(h<<5)+(m<<4)+(o<<2)|0;q=0;do{r=q<<2;s=q<<f;t=-q|0;u=q>>2;v=q&3;w=(v|0)==0;x=(v|0)==1|0;if(i){y=0;do{z=d[22008+(y+r)|0]|0;A=l?z:z+27|0;z=(c[p>>2]|0)+(y+s)|0;B=a[z]|0;if(!(B<<24>>24==-1|(B&255|0)==(A|0))){C=26;break a}a[z]=A;y=y+1|0;}while((y|0)<(b|0))}else{y=0;do{do{if((y|0)==(t|0)){D=0}else{r=y>>2;A=y&3;do{if((o|0)==0){z=A+v|0;if((z|0)>2){E=0;break}E=(z|0)>0?1:2}else if((o|0)==2){if((A|0)==0){E=2;break}E=(A|0)==1|0}else if((o|0)==1){E=w?2:x}else{E=2}}while(0);if(l){A=(r+u|0)>0?E+3|0:E;if(k){D=A+n|0;break}else{D=A+21|0;break}}else{if(k){D=E+9|0;break}else{D=E|12;break}}}}while(0);A=l?D:D+27|0;z=(c[p>>2]|0)+(y+s)|0;B=a[z]|0;if(!(B<<24>>24==-1|(B&255|0)==(A|0))){C=26;break a}a[z]=A;y=y+1|0;}while((y|0)<(b|0))}q=q+1|0;}while((q|0)<(b|0))}o=o+1|0;}while((o|0)<4);m=m+1|0;}while((m|0)<2);h=h+1|0;}while((h|0)<2);h=f+1|0;if((h|0)<6){f=h}else{e=1;C=33;break}}if((C|0)==26){bc(2464,10960,1509,13240);return 0}else if((C|0)==33){return e|0}return 0}function Pg(){as(c[6434]|0);c[6434]=0;return}function Qg(a){a=a|0;var b=0,d=0,e=0;b=c[(c[a+14636>>2]|0)+800>>2]|0;if(!(b>>>0<3>>>0)){bc(2296,10960,2025,13816)}Rg(a,2,24912+(b*12|0)|0,3);if((b|0)>0){d=b-1|0;Rg(a,5,24976+(d*12|0)|0,3);Rg(a,141,24880+(d<<2)|0,1);Rg(a,139,25016+(d<<2)|0,1);Rg(a,140,25112+(d<<2)|0,1);Rg(a,148,24888,5);Rg(a,146,25008,2);Rg(a,142,24616+(((b|0)==1?0:2)<<2)|0,2);Rg(a,144,25e3,1);Rg(a,145,24968,1)}Rg(a,8,25072+(((b|0)!=2?b:5)<<2)|0,4);Rg(a,12,24064+(b<<2)|0,1);Rg(a,13,24600+(b<<2)|0,1);Rg(a,14,25120+(((b|0)==0?0:2)<<2)|0,2);d=b<<2;Rg(a,16,25024+(d<<2)|0,4);Rg(a,20,24648+((b*3|0)<<2)|0,3);e=23472+((b*18|0)<<2)|0;Rg(a,23,e,18);Rg(a,41,e,18);Rg(a,59,24688+(d<<2)|0,4);Rg(a,63,24096+(b*168|0)|0,42);Rg(a,105,23760+((b*24|0)<<2)|0,24);Rg(a,129,23688+((b*6|0)<<2)|0,6);Rg(a,0,24632+(b<<2)|0,1);Rg(a,1,24048+(b<<2)|0,1);Rg(a,135,24872,2);Rg(a,137,24736,2);Rg(a,153,24080+(b<<2)|0,1);return}function Rg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if((f|0)<=0){return}g=b+14636|0;h=0;while(1){i=h+d|0;j=c[e+(h<<2)>>2]|0;k=c[(c[g>>2]|0)+796>>2]|0;l=((j>>4)*5|0)-45|0;m=(j<<3&120)-16|0;j=(k|0)<0;if(j){n=0}else{n=(k|0)>51?51:k}do{if((((ga(n,l)|0)>>4)+m|0)<1){o=1}else{if(j){p=0}else{p=(k|0)>51?51:k}if((((ga(p,l)|0)>>4)+m|0)>126){o=126;break}if(j){q=0}else{q=(k|0)>51?51:k}o=((ga(q,l)|0)>>4)+m|0}}while(0);m=(o|0)>63;l=m?o+64|0:63-o|0;a[b+14472+i|0]=(l&255)<<1|m&1;m=h+1|0;if(!((l&127)>>>0<63>>>0)){r=14;break}if((m|0)<(f|0)){h=m}else{r=15;break}}if((r|0)==14){bc(1680,10960,891,13192)}else if((r|0)==15){return}}function Sg(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;g=i;i=i+24|0;h=g|0;j=c[b+14636>>2]|0;k=c[b+14632>>2]|0;l=h|0;ys(l|0,0,17)|0;do{if((e|0)>0){m=ga(c[k+74236>>2]|0,f)|0;n=c[k+74588>>2]|0;if((c[b>>2]|0)<=(c[j+792>>2]|0)){o=1;break}if((c[n+(m+e<<2)>>2]|0)!=(c[n+(e-1+m<<2)>>2]|0)){o=1;break}o=((od(b+14448|0,b+14472|0)|0)&255)<<24>>24==0}else{o=1}}while(0);do{if((f|0)>0&o){m=c[k+74236>>2]|0;n=c[k+74588>>2]|0;if(((c[b>>2]|0)-m|0)<(c[j+792>>2]|0)){p=0;break}q=n+((ga(m,f-1|0)|0)+e<<2)|0;r=c[n+((ga(m,f)|0)+e<<2)>>2]|0;if((r|0)!=(c[q>>2]|0)){p=0;break}p=((od(b+14448|0,b+14472|0)|0)&255)<<24>>24!=0}else{p=0}}while(0);if(o&(p^1)){q=j+325|0;r=b+14448|0;m=b+14473|0;b=k+74176|0;n=k+74184|0;s=h+1|0;t=j+326|0;j=0;do{u=(j|0)==0;if((a[q]|0)!=0&u){v=13}else{if((a[t]|0)!=0&(j|0)>0){v=13}}do{if((v|0)==13){v=0;do{if(u){if((od(r,m)|0)==0){w=0}else{x=(qd(r)|0)==0;w=x?1:2}a[l]=w;y=w}else{if((j|0)!=1){y=(d[l]|0)>>>(j<<1>>>0)&3;break}if((od(r,m)|0)==0){z=0}else{x=(qd(r)|0)==0;z=x?1:2}a[l]=z<<4|z<<2|d[l];y=z&255}}while(0);if(y<<24>>24==0){break}x=(rd(r,7)|0)&255;A=h+5+(j<<2)|0;a[A]=x;B=(rd(r,7)|0)&255;C=h+5+(j<<2)+1|0;a[C]=B;D=(rd(r,7)|0)&255;E=h+5+(j<<2)+2|0;a[E]=D;F=(rd(r,7)|0)&255;G=h+5+(j<<2)+3|0;a[G]=F;do{if(y<<24>>24==1){if(x<<24>>24==0){H=0}else{I=(qd(r)|0)!=0;H=I?-1:1}if(B<<24>>24==0){J=0}else{I=(qd(r)|0)!=0;J=I?-1:1}if(D<<24>>24==0){K=0}else{I=(qd(r)|0)!=0;K=I?-1:1}if(F<<24>>24==0){L=0}else{I=(qd(r)|0)!=0;L=I?-1:1}a[h+2+j|0]=sd(r,5)|0;M=H;N=J;O=a[C]|0;P=K;Q=a[E]|0;R=L;S=a[G]|0}else{if(u){a[s]=sd(r,2)|0;M=1;N=1;O=B;P=-1;Q=D;R=-1;S=F;break}if((j|0)!=1){M=1;N=1;O=B;P=-1;Q=D;R=-1;S=F;break}I=(sd(r,2)|0)&255;a[s]=d[s]|I<<2|I<<4;M=1;N=1;O=B;P=-1;Q=D;R=-1;S=F}}while(0);F=c[(u?b:n)>>2]|0;D=F-((F|0)<10?F:10)|0;a[A]=ga(a[A]<<D,M)|0;a[C]=ga(O<<24>>24<<D,N)|0;a[E]=ga(Q<<24>>24<<D,P)|0;a[G]=ga(S<<24>>24<<D,R)|0}}while(0);j=j+1|0;}while((j|0)<3);j=(ga(c[k+78724>>2]|0,f)|0)+e|0;xs((c[k+78712>>2]|0)+(j*24|0)+4|0,l|0,17)|0}if(!o){o=ga(c[k+78724>>2]|0,f)|0;l=c[k+78712>>2]|0;xs(l+((o+e|0)*24|0)+4|0,l+((e-1+o|0)*24|0)+4|0,17)|0}if(!p){i=g;return}p=c[k+78724>>2]|0;o=(ga(p,f-1|0)|0)+e|0;l=c[k+78712>>2]|0;xs(l+(((ga(p,f)|0)+e|0)*24|0)+4|0,l+(o*24|0)+4|0,17)|0;i=g;return}function Tg(e,f,g,h,i){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0;j=e+14632|0;k=e+14412|0;l=e+14416|0;m=e+14448|0;n=i;i=h;h=g;g=f;while(1){o=c[j>>2]|0;f=1<<i;p=o+69752|0;q=c[p>>2]|0;do{if((f+g|0)>(q|0)){r=16}else{s=c[o+69756>>2]|0;if((f+h|0)>(s|0)){r=16;break}if((c[o+74216>>2]|0)>=(i|0)){r=16;break}t=g-1|0;do{if((t|h|0)>-1&(q|0)>(t|0)&(s|0)>(h|0)){u=c[o+74220>>2]|0;v=ga(h>>u,c[o+74236>>2]|0)|0;w=v+(g>>u)|0;x=v+(t>>u)|0;u=c[o+78712>>2]|0;if((b[u+(w*24|0)>>1]|0)!=(b[u+(x*24|0)>>1]|0)){y=0;break}u=c[o+74588>>2]|0;y=(c[u+(w<<2)>>2]|0)==(c[u+(x<<2)>>2]|0)|0}else{y=0}}while(0);x=h-1|0;do{if((x|g|0)>-1&(q|0)>(g|0)&(s|0)>(x|0)){u=c[o+74220>>2]|0;w=c[o+74236>>2]|0;v=g>>u;z=(ga(h>>u,w)|0)+v|0;A=(ga(x>>u,w)|0)+v|0;v=c[o+78712>>2]|0;if((b[v+(z*24|0)>>1]|0)!=(b[v+(A*24|0)>>1]|0)){B=0;break}v=c[o+74588>>2]|0;B=(c[v+(z<<2)>>2]|0)==(c[v+(A<<2)>>2]|0)|0}else{B=0}}while(0);if((y|0)==0){D=2}else{s=c[o+78740>>2]|0;A=(ga(h>>s,c[o+78744>>2]|0)|0)+(t>>s)|0;s=(c[o+78732>>2]|0)+(A*3|0)|0;D=(((d[s]|d[s+1|0]<<8)<<16>>16&65535)>>>6&255&3|0)>(n|0)|2}if((B|0)==0){E=0}else{s=c[o+78740>>2]|0;A=(ga(x>>s,c[o+78744>>2]|0)|0)+(g>>s)|0;s=(c[o+78732>>2]|0)+(A*3|0)|0;E=(((d[s]|d[s+1|0]<<8)<<16>>16&65535)>>>6&255&3|0)>(n|0)|0}F=od(m,E+D+(e+14472)|0)|0}}while(0);if((r|0)==16){r=0;F=(c[o+74216>>2]|0)<(i|0)|0}do{if((a[o+74350|0]|0)!=0){if((c[o+74612>>2]|0)>(i|0)){break}c[k>>2]=0;c[l>>2]=0}}while(0);if((F|0)==0){r=27;break}q=i-1|0;f=1<<q;s=f+g|0;A=f+h|0;f=n+1|0;Tg(e,g,h,q,f);if((s|0)<(c[p>>2]|0)){Tg(e,s,h,q,f)}v=o+69756|0;if((A|0)<(c[v>>2]|0)){Tg(e,g,A,q,f)}if((s|0)>=(c[p>>2]|0)){r=33;break}if((A|0)<(c[v>>2]|0)){n=f;i=q;h=A;g=s}else{r=33;break}}if((r|0)==27){F=c[o+78740>>2]|0;l=g>>F;k=h>>F;D=1<<i-F;F=D+k|0;if((D|0)>0){E=D+l|0;D=o+78744|0;m=o+78732|0;o=(n&65535)<<6&192;B=k;do{k=l;do{y=(ga(c[D>>2]|0,B)|0)+k|0;j=(c[m>>2]|0)+(y*3|0)|0;C=(d[j]|d[j+1|0]<<8)<<16>>16&-193|o;a[j]=C;C=C>>8;a[j+1|0]=C;k=k+1|0;}while((k|0)<(E|0));B=B+1|0;}while((B|0)<(F|0))}Zg(e,g,h,i,n);return}else if((r|0)==33){return}}function Ug(f,g,h,j,k,l,m){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;k=i;i=i+152|0;j=k|0;n=k+8|0;o=k+72|0;p=k+104|0;q=k+120|0;r=k+136|0;s=c[f+14632>>2]|0;t=(m|0)==0;do{if(t){u=c[s+78800>>2]|0;v=g>>u;w=h>>u;x=1<<l-u;u=x+w|0;if((x|0)<=0){break}y=x+v|0;x=s+78804|0;z=s+78792|0;A=w;do{w=v;do{B=(ga(c[x>>2]|0,A)|0)+w|0;C=(c[z>>2]|0)+B|0;a[C]=a[C]|-128;w=w+1|0;}while((w|0)<(y|0));A=A+1|0;}while((A|0)<(u|0))}}while(0);do{if((a[s+74349|0]|0)==0){D=10}else{if(!((a[f+36|0]|0)==0&(l|0)==2)){D=10;break}a[f+37+m|0]=od(f+14448|0,((m|0)!=0?138:137)+(f+14472)|0)|0}}while(0);if((D|0)==10){a[f+37+m|0]=0}u=(l<<1)-1|0;if(t){E=(l*3|0)-6+(l-1>>2)+23|0;F=l+1>>2}else{E=38;F=l-2|0}A=(u|0)>0;a:do{if(A){y=f+14448|0;z=0;while(1){x=z+1|0;if((od(y,E+(z>>F)+(f+14472)|0)|0)==0){G=z;break a}if((x|0)<(u|0)){z=x}else{G=u;break}}}else{G=u}}while(0);if(t){H=(l*3|0)-6+(l-1>>2)+41|0;I=l+1>>2}else{H=56;I=l-2|0}b:do{if(A){F=f+14448|0;E=0;while(1){z=E+1|0;if((od(F,H+(E>>I)+(f+14472)|0)|0)==0){J=E;break b}if((z|0)<(u|0)){E=z}else{J=u;break}}}else{J=u}}while(0);if((G|0)>3){u=(G>>1)-1|0;K=(sd(f+14448|0,u)|0)+((G&1|2)<<u)|0}else{K=G}if((J|0)>3){G=(J>>1)-1|0;L=(sd(f+14448|0,G)|0)+((J&1|2)<<G)|0}else{L=J}J=c[s+78740>>2]|0;G=(ga(h>>J,c[s+78744>>2]|0)|0)+(g>>J)|0;J=(c[s+78732>>2]|0)+(G*3|0)|0;do{if(((d[J]|d[J+1|0]<<8)<<16>>16&768)==0){if(t){if((l&-2|0)!=2){M=0;break}G=c[s+78780>>2]|0;u=(ga(h>>G,c[s+78784>>2]|0)|0)+(g>>G)|0;G=d[(c[s+78772>>2]|0)+u|0]|0;if((G-6|0)>>>0<9>>>0){M=2;break}M=(G-22|0)>>>0<9>>>0|0;break}else{if(!((l-1|0)>>>0<2>>>0)){M=0;break}G=c[f+32>>2]|0;if((G-6|0)>>>0<9>>>0){M=2;break}M=(G-22|0)>>>0<9>>>0|0;break}}else{M=0}}while(0);g=(M|0)==2;h=l-2|0;J=Fg(h,M)|0;G=Fg(2,M)|0;Gg(j,g?L:K,g?K:L,M,l);L=a[j+1|0]|0;K=d[j|0]|0;ys(n|0,0,1<<h<<h|0)|0;j=f+14404+(m<<1)|0;b[j>>1]=0;g=f+14448|0;u=(M|0)!=0|0;M=(m|0)!=0|0;I=(L&255)-1|0;H=o|0;A=r|0;E=p|0;F=(m|0)>0;z=f+36|0;y=s+74340|0;s=0;x=0;v=K;w=1;while(1){C=a[J+(v<<1)|0]|0;B=a[J+(v<<1)+1|0]|0;N=(v|0)>0;do{if((v|0)<(K|0)&N){O=C&255;P=d[n+(((B&255)<<h)+O)|0]|0;Q=P&1|P>>>1;if((od(g,(t?Q:Q+2|0)+59+(f+14472)|0)|0)==0){R=w;S=x;T=s}else{U=1;V=O;D=42}}else{if(!((v|0)==0|(v|0)==(K|0))){R=w;S=x;T=s;break}U=0;V=C&255;D=42}}while(0);do{if((D|0)==42){D=0;if(!(C<<24>>24==0)){O=n+(V-1+((B&255)<<h))|0;a[O]=a[O]|1}O=B&255;if(!(B<<24>>24==0)){Q=n+((O-1<<h)+V)|0;a[Q]=a[Q]|2}Q=V<<2;P=O<<2;W=c[25736+(h<<6)+(M<<5)+(u<<4)+(d[n+((O<<h)+V)|0]<<2)>>2]|0;O=(v|0)==(K|0);X=O?I:15;if(O){b[H>>1]=1;a[A]=1;a[E]=L;Y=1}else{Y=0}if((X|0)>0){O=Y;Z=X;_=U;while(1){if((od(g,(d[W+((d[G+(Z<<1)|0]|0)+Q+((d[G+(Z<<1)+1|0]|0)+P<<l))|0]|0)+63+(f+14472)|0)|0)==0){$=_;aa=O}else{b[o+(O<<1)>>1]=1;a[r+O|0]=1;a[p+O|0]=Z;$=0;aa=O+1|0}ba=Z-1|0;if((ba|0)>0){O=aa;Z=ba;_=$}else{ca=aa;da=$;break}}}else{ca=Y;da=U}do{if((X|0)>-1){if((da|0)!=0){b[o+(ca<<1)>>1]=1;a[r+ca|0]=1;a[p+ca|0]=0;ea=ca+1|0;break}if((od(g,(d[W+((P<<l)+Q)|0]|0)+63+(f+14472)|0)|0)==0){ea=ca;break}b[o+(ca<<1)>>1]=1;a[r+ca|0]=1;a[p+ca|0]=0;ea=ca+1|0}else{ea=ca}}while(0);if((ea|0)==0){R=w;S=x;T=s;break}W=((v|0)==0|F?0:2)|(w|0)==0;X=(ea|0)>8?8:ea;do{if((X|0)>0){_=W<<2;Z=s;O=x;ba=-1;fa=1;ha=0;while(1){do{if((ha|0)==0){ia=1}else{if((Z|0)<=0){ia=Z;break}ia=(O|0)==1?0:Z+1|0}}while(0);ja=((ia|0)<3?ia:3)+_|0;ka=od(g,(F?ja+16|0:ja)+105+(f+14472)|0)|0;if((ka|0)==0){a[r+ha|0]=0;la=((fa-1|0)>>>0<2>>>0)+fa|0;ma=ba}else{ja=o+(ha<<1)|0;b[ja>>1]=(b[ja>>1]|0)+1;la=0;ma=(ba|0)==-1?ha:ba}ja=ha+1|0;if((ja|0)<(X|0)){Z=ia;O=ka;ba=ma;fa=la;ha=ja}else{break}}if((ma|0)==-1){na=la;oa=ka;pa=ia;break}ha=od(g,(F?W|4:W)+129+(f+14472)|0)|0;fa=o+(ma<<1)|0;b[fa>>1]=(e[fa>>1]|0)+ha;a[r+ma|0]=ha;na=la;oa=ka;pa=ia}else{na=1;oa=x;pa=s}}while(0);W=ea-1|0;if(((a[E]|0)-(a[p+W|0]|0)|0)>3){qa=(a[z]|0)!=0}else{qa=1}if((W|0)>0){X=0;do{a[q+X|0]=qd(g)|0;X=X+1|0;}while((X|0)<(W|0))}if((a[y]|0)==0|qa){a[q+W|0]=qd(g)|0}else{a[q+W|0]=0}if((ea|0)>0){ra=0;sa=0;ta=0}else{R=na;S=oa;T=pa;break}while(1){X=b[o+(ta<<1)>>1]|0;do{if((a[r+ta|0]|0)==0){ua=0;va=sa}else{ha=-1;while(1){wa=ha+1|0;if((qd(g)|0)==0){break}else{ha=wa}}if((wa|0)<4){xa=(sd(g,sa)|0)+(wa<<sa)|0}else{fa=ha-2|0;xa=(sd(g,fa+sa|0)|0)+((1<<fa)+2<<sa)|0}if((xa+X|0)<=(3<<sa|0)){ua=xa;va=sa;break}fa=sa+1|0;ua=xa;va=(fa|0)>4?4:fa}}while(0);fa=ua+X|0;ba=fa&65535;O=(a[q+ta|0]|0)==0?ba:-ba&65535;do{if((a[y]|0)==0|qa){ya=O;za=ra}else{ba=fa+ra|0;if((ta|0)!=(W|0)){ya=O;za=ba;break}ya=(ba&1|0)==0?O:-O&65535;za=ba}}while(0);O=a[p+ta|0]|0;fa=(d[G+(O<<1)|0]|0)+Q|0;X=(d[G+(O<<1)+1|0]|0)+P|0;b[f+2116+(m<<11)+(b[j>>1]<<1)>>1]=ya;b[f+8260+(m<<11)+(b[j>>1]<<1)>>1]=fa+(X<<l);b[j>>1]=(b[j>>1]|0)+1;X=ta+1|0;if((X|0)<(ea|0)){ra=za;sa=va;ta=X}else{R=na;S=oa;T=pa;break}}}}while(0);if(N){s=T;x=S;v=v-1|0;w=R}else{break}}i=k;return 0}function Vg(b,d,e,f,g,h,i,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;if((n|0)==-1){bc(2256,10960,2740,13696);return 0}if((o|0)==-1){bc(2184,10960,2741,13696);return 0}if((m|0)==-1){bc(2088,10960,2742,13696);return 0}a[b+37|0]=0;a[b+38|0]=0;a[b+39|0]=0;k=(m|0)!=0;m=(n|0)==0;n=(o|0)==0;if(m&(k^1)&n){return 0}do{if((a[(c[b+14632>>2]|0)+74350|0]|0)!=0){o=b+14412|0;if((c[o>>2]|0)!=0){break}p=b+14448|0;do{if((od(p,b+14607|0)|0)==0){q=0;r=0}else{s=b+14608|0;t=1;u=0;while(1){if((od(p,s)|0)==0){v=t;break}w=t+1|0;x=u+1|0;if((x|0)<4){t=w;u=x}else{v=w;break}}if((v|0)==5){y=(td(p,0)|0)+5|0}else{y=v}if((y|0)==0){q=0;r=0;break}q=(qd(p)|0)<<1;r=y}}while(0);c[o>>2]=1;c[b+14416>>2]=ga(1-q|0,r)|0;vg(b,d,e,h,i)}}while(0);if(k){Ug(b,d,e,0,0,j,0)|0}if((j|0)>2){if(!m){Ug(b,d,e,0,0,j-1|0,1)|0}if(n){return 0}Ug(b,d,e,0,0,j-1|0,2)|0;return 0}if((l|0)!=3){return 0}if(!m){Ug(b,f,g,0,0,j,1)|0}if(n){return 0}Ug(b,f,g,0,0,j,2)|0;return 0}function Wg(b,e,f,g,h,i,j,k,l,m,n,o,p,q,r){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;s=b+14632|0;t=(o|0)==1;u=b+14448|0;v=(o|0)!=0;w=r;r=q;q=m;m=l;l=k;k=h;h=g;g=f;f=e;a:while(1){x=c[s>>2]|0;e=c[x+78740>>2]|0;y=(ga(g>>e,c[x+78744>>2]|0)|0)+(f>>e)|0;e=(c[x+78732>>2]|0)+(y*3|0)|0;y=(d[e]|d[e+1|0]<<8)<<16>>16;z=(y&65535)>>>8&3;A=(m|0)==0;e=(z<<24>>24!=1|(c[x+69896>>2]|0)!=0|(y&56)==0)^1;y=(c[x+74284>>2]|0)<(l|0);b:do{if(y){B=11}else{do{if((c[x+74280>>2]|0)<(l|0)&(m|0)<(n|0)){if(v&A){if(y){B=11;break b}else{B=9;break}}C=5-l|0;if(!(C>>>0<3>>>0)){B=6;break a}D=od(u,C+20+(b+14472)|0)|0}else{B=9}}while(0);if((B|0)==9){B=0;D=(t|e)&A&1}if((D|0)==0){E=0}else{B=11}}}while(0);if((B|0)==11){B=0;e=c[x+78800>>2]|0;y=(ga(g>>e,c[x+78804>>2]|0)|0)+(f>>e)|0;e=(c[x+78792>>2]|0)+y|0;a[e]=d[e]|1<<m;E=1}if((l|0)>2){if(r){F=od(u,m+16+(b+14472)|0)|0}else{F=-1}if(w){G=od(u,m+16+(b+14472)|0)|0}else{G=-1}if((F|0)<0){H=G;B=18}else{I=F;J=G}}else{H=-1;B=18}if((B|0)==18){B=0;I=(m|0)>0&(l|0)==2?r&1:0;J=H}if((J|0)<0){K=(m|0)>0&(l|0)==2?w&1:0}else{K=J}if(!E){break}e=l-1|0;y=1<<e;C=y+f|0;L=y+g|0;y=m+1|0;M=(I|0)!=0;N=(K|0)!=0;Wg(b,f,g,f,g,i,j,e,y,0,n,o,p,M,N);Wg(b,C,g,f,g,i,j,e,y,1,n,o,p,M,N);Wg(b,f,L,f,g,i,j,e,y,2,n,o,p,M,N);w=N;r=M;q=3;m=y;l=e;k=g;h=f;g=L;f=C}if((B|0)==6){bc(1776,10960,1236,13104)}B=z<<24>>24==0;z=(I|0)==0;m=(K|0)==0;if(A&(B^1)&z&m){O=1}else{O=od(u,(A&1|14)+(b+14472)|0)|0}Vg(b,f,g,h,k,i,j,l,0,q,O,I,K)|0;K=1<<l;do{if((p|0)==0){l=c[x+78780>>2]|0;I=(ga(g>>l,c[x+78784>>2]|0)|0)+(f>>l)|0;dg(x,f,g,d[(c[x+78772>>2]|0)+I|0]|0,K,0);I=c[b+32>>2]|0;if((K|0)>7){l=(f|0)/2|0;A=(g|0)/2|0;u=(K|0)/2|0;dg(x,l,A,I,u,1);dg(x,l,A,I,u,2);break}if((q|0)!=3){break}u=(h|0)/2|0;A=(k|0)/2|0;dg(x,u,A,I,K,1);dg(x,u,A,I,K,2)}}while(0);if((O|0)!=0){wg(b,f,g,i,j,K,0,(a[b+37|0]|0)!=0,B)}if((K|0)>7){if(!z){wg(b,(f|0)/2|0,(g|0)/2|0,(i|0)/2|0,(j|0)/2|0,(K|0)/2|0,1,(a[b+38|0]|0)!=0,B)}if(m){return}wg(b,(f|0)/2|0,(g|0)/2|0,(i|0)/2|0,(j|0)/2|0,(K|0)/2|0,2,(a[b+39|0]|0)!=0,B);return}if((q|0)!=3){return}if(!z){wg(b,(h|0)/2|0,(k|0)/2|0,(i|0)/2|0,(j|0)/2|0,K,1,(a[b+38|0]|0)!=0,B)}if(m){return}wg(b,(h|0)/2|0,(k|0)/2|0,(i|0)/2|0,(j|0)/2|0,K,2,(a[b+39|0]|0)!=0,B);return}function Xg(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a+14448|0;c=a+14614|0;f=od(d,c)|0;g=od(d,c)|0;c=(f|0)==0;if(c){h=0}else{h=od(d,a+14615|0)|0}f=(g|0)==0;if(f){i=0}else{i=od(d,a+14615|0)|0}do{if(c){j=0}else{if((h|0)==0){k=-1}else{k=td(d,1)|0}if((qd(d)|0)==0){j=k+2&65535;break}j=-2-k&65535}}while(0);do{if(f){l=0}else{if((i|0)==0){m=-1}else{m=td(d,1)|0}if((qd(d)|0)==0){l=m+2&65535;break}l=-2-m&65535}}while(0);b[a+18+(e<<2)>>1]=j;b[a+18+(e<<2)+2>>1]=l;return}function Yg(d,e,f,g,h,i,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;n=d+14636|0;o=c[n>>2]|0;p=d+14448|0;q=od(p,d+14611|0)|0;a[d+26|0]=q;if((q|0)!=0){a:do{if((c[o+804>>2]|0)>1){if((od(p,d+14612|0)|0)==0){r=0;break}if(((c[(c[n>>2]|0)+804>>2]|0)-1|0)>1){s=1}else{r=1;break}while(1){q=s+1|0;if((qd(p)|0)==0){r=s&255;break a}if((q|0)<((c[(c[n>>2]|0)+804>>2]|0)-1|0)){s=q}else{r=q&255;break}}}else{r=0}}while(0);a[d+27|0]=r;Ih(d,e,f,g,h,l,i,j,m);return}do{if((c[o+20>>2]|0)==0){if((j+i|0)==12){t=od(p,d+14624|0)|0}else{if((od(p,k+148+(d+14472)|0)|0)!=0){u=2;v=13;break}t=od(p,d+14624|0)|0}a[d+30|0]=t;if((t|0)==1){w=1}else{x=t;v=15}}else{u=0;v=13}}while(0);if((v|0)==13){a[d+30|0]=u;x=u;v=15}do{if((v|0)==15){u=(c[o+328>>2]|0)-1|0;b:do{if((u|0)==0){y=0}else{if((od(p,d+14618|0)|0)==0){y=0;break}t=d+14619|0;k=u&255;r=0;while(1){s=r+1|0;if((s|0)==(u|0)){y=k;break b}if((r|0)==0){z=od(p,t)|0}else{z=qd(p)|0}if((z|0)==0){y=s&255;break}else{r=s}}}}while(0);a[d+16|0]=y;Xg(d,0,0,0);a[d+28|0]=od(p,d+14616|0)|0;if((x|0)!=0){w=x;break}Ih(d,e,f,g,h,l,i,j,m);return}}while(0);x=(c[o+332>>2]|0)-1|0;c:do{if((x|0)==0){A=0}else{if((od(p,d+14618|0)|0)==0){A=0;break}y=d+14619|0;z=x&255;v=0;while(1){u=v+1|0;if((u|0)==(x|0)){A=z;break c}if((v|0)==0){B=od(p,y)|0}else{B=qd(p)|0}if((B|0)==0){A=u&255;break}else{v=u}}}}while(0);a[d+17|0]=A;if((a[o+370|0]|0)!=0&(w|0)==2){b[d+22>>1]=0;b[d+24>>1]=0}else{Xg(d,0,0,1)}a[d+29|0]=od(p,d+14616|0)|0;Ih(d,e,f,g,h,l,i,j,m);return}function Zg(e,f,g,h,j){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0;k=i;i=i+88|0;l=k|0;m=k+24|0;n=k+40|0;o=k+56|0;p=k+72|0;q=e+14632|0;r=c[q>>2]|0;s=e+14636|0;t=c[s>>2]|0;u=r+78740|0;v=c[u>>2]|0;w=r+78744|0;x=(ga(g>>v,c[w>>2]|0)|0)+(f>>v)|0;v=r+78732|0;y=(c[v>>2]|0)+(x*3|0)|0;C=(d[y]|d[y+1|0]<<8)<<16>>16&-8|h&7;a[y]=C;C=C>>8;a[y+1|0]=C;y=1<<h;vg(e,f,g,f,g);do{if((a[r+74368|0]|0)==0){a[e+36|0]=0}else{x=od(e+14448|0,e+14625|0)|0;a[e+36|0]=x;if((x|0)==0){break}x=c[u>>2]|0;z=f>>x;A=g>>x;B=1<<h-x;x=B+A|0;if((B|0)>0){D=B+z|0;B=A;do{A=z;do{E=(ga(c[w>>2]|0,B)|0)+A|0;F=(c[v>>2]|0)+(E*3|0)|0;C=(d[F]|d[F+1|0]<<8)<<16>>16|2048;a[F]=C;C=C>>8;a[F+1|0]=C;A=A+1|0;}while((A|0)<(D|0));B=B+1|0;}while((B|0)<(x|0))}x=c[r+78720>>2]|0;B=(ga(g>>x,c[r+78724>>2]|0)|0)+(f>>x)|0;a[(c[r+78712>>2]|0)+(B*24|0)+23|0]=1}}while(0);B=t+20|0;do{if((c[B>>2]|0)==2){G=0}else{t=c[q>>2]|0;x=f-1|0;do{if((x|g|0)<0){H=0}else{if((c[t+69752>>2]|0)<=(x|0)){H=0;break}if((c[t+69756>>2]|0)<=(g|0)){H=0;break}D=c[t+74220>>2]|0;z=ga(g>>D,c[t+74236>>2]|0)|0;A=z+(f>>D)|0;F=z+(x>>D)|0;D=c[t+78712>>2]|0;if((b[D+(A*24|0)>>1]|0)!=(b[D+(F*24|0)>>1]|0)){H=0;break}D=c[t+74588>>2]|0;H=(c[D+(A<<2)>>2]|0)==(c[D+(F<<2)>>2]|0)|0}}while(0);F=g-1|0;do{if((F|f|0)<0){I=0}else{if((c[t+69752>>2]|0)<=(f|0)){I=0;break}if((c[t+69756>>2]|0)<=(F|0)){I=0;break}D=c[t+74220>>2]|0;A=c[t+74236>>2]|0;z=f>>D;E=(ga(g>>D,A)|0)+z|0;J=(ga(F>>D,A)|0)+z|0;z=c[t+78712>>2]|0;if((b[z+(E*24|0)>>1]|0)!=(b[z+(J*24|0)>>1]|0)){I=0;break}z=c[t+74588>>2]|0;I=(c[z+(E<<2)>>2]|0)==(c[z+(J<<2)>>2]|0)|0}}while(0);if((H|0)==0){K=5}else{J=c[t+78740>>2]|0;z=(ga(g>>J,c[t+78744>>2]|0)|0)+(x>>J)|0;J=(c[t+78732>>2]|0)+(z*3|0)|0;K=((d[J]|d[J+1|0]<<8)<<16>>16&768)==512?6:5}if((I|0)==0){L=0}else{J=c[t+78740>>2]|0;z=(ga(F>>J,c[t+78744>>2]|0)|0)+(f>>J)|0;J=(c[t+78732>>2]|0)+(z*3|0)|0;L=((d[J]|d[J+1|0]<<8)<<16>>16&768)==512|0}J=e+14448|0;if(((od(J,L+K+(e+14472)|0)|0)&255)<<24>>24==0){if((c[B>>2]|0)==2){G=0;break}G=(od(J,e+14613|0)|0)==0|0;break}a:do{if((c[(c[s>>2]|0)+804>>2]|0)>1){if((od(J,e+14612|0)|0)==0){M=0;break}if(((c[(c[s>>2]|0)+804>>2]|0)-1|0)>1){N=1}else{M=1;break}while(1){z=N+1|0;if((qd(J)|0)==0){M=N&255;break a}if((z|0)<((c[(c[s>>2]|0)+804>>2]|0)-1|0)){N=z}else{M=z&255;break}}}else{M=0}}while(0);a[e+27|0]=M;a[e+26|0]=1;J=c[u>>2]|0;t=(ga(g>>J,c[w>>2]|0)|0)+(f>>J)|0;J=(c[v>>2]|0)+(t*3|0)|0;C=(d[J]|d[J+1|0]<<8)<<16>>16&-57;a[J]=C;C=C>>8;a[J+1|0]=C;J=c[u>>2]|0;t=f>>J;F=g>>J;x=1<<h-J;J=x+F|0;if((x|0)>0){z=x+t|0;x=F;do{F=t;do{E=(ga(c[w>>2]|0,x)|0)+F|0;A=(c[v>>2]|0)+(E*3|0)|0;C=(d[A]|d[A+1|0]<<8)<<16>>16&-769|512;a[A]=C;C=C>>8;a[A+1|0]=C;F=F+1|0;}while((F|0)<(z|0));x=x+1|0;}while((x|0)<(J|0))}Ih(e,f,g,0,0,y,y,y,0);i=k;return}}while(0);M=c[u>>2]|0;N=f>>M;s=g>>M;B=1<<h-M;M=B+s|0;if((B|0)>0){K=B+N|0;B=(G&65535)<<8;L=s;do{s=N;do{I=(ga(c[w>>2]|0,L)|0)+s|0;H=(c[v>>2]|0)+(I*3|0)|0;C=(d[H]|d[H+1|0]<<8)<<16>>16&-769|B;a[H]=C;C=C>>8;a[H+1|0]=C;s=s+1|0;}while((s|0)<(K|0));L=L+1|0;}while((L|0)<(M|0))}M=(G|0)!=0;if(M){O=46}else{if((c[r+74216>>2]|0)==(h|0)){O=46}else{P=0;Q=0}}if((O|0)==46){L=c[q>>2]|0;K=(G|0)==0;B=e+14448|0;N=od(B,e+14480|0)|0;do{if(K){R=(N|0)!=0?0:3}else{if((N|0)!=0){R=0;break}s=od(B,e+14481|0)|0;if((c[L+74216>>2]|0)>=(h|0)){if((s|0)!=0){R=1;break}if((h|0)==3){R=2;break}R=3-(od(B,e+14482|0)|0)|0;break}if((a[L+73970|0]|0)==0){R=(s|0)!=0?1:2;break}if((od(B,e+14483|0)|0)!=0){R=(s|0)!=0?1:2;break}H=(s|0)!=0;s=H^1;I=(qd(B)|0)==0;if(!(I|s)){R=5;break}if(H&I){R=4;break}if(I&s){R=6;break}if(!(H|I)){R=7;break}bc(1888,10960,1181,13168)}}while(0);P=(R|0)==3&K&1;Q=R}R=c[u>>2]|0;K=(ga(g>>R,c[w>>2]|0)|0)+(f>>R)|0;R=(c[v>>2]|0)+(K*3|0)|0;C=(d[R]|d[R+1|0]<<8)<<16>>16&-57|(Q&65535)<<3&56;a[R]=C;C=C>>8;a[R+1|0]=C;R=(G|0)==0;K=(Q|0)==0;b:do{if(R){do{if(K){if((a[r+73972|0]|0)==0){S=y;T=0;break}if((c[r+74300>>2]|0)>(h|0)){O=86;break}if((c[r+74304>>2]|0)<(h|0)){O=86;break}B=e+14448|0;if((pd(B)|0)==0){O=86;break}L=c[u>>2]|0;N=f>>L;I=g>>L;H=1<<h-L;L=H+I|0;if((H|0)>0){s=H+N|0;H=I;do{I=N;do{J=(ga(c[w>>2]|0,H)|0)+I|0;x=(c[v>>2]|0)+(J*3|0)|0;C=(d[x]|d[x+1|0]<<8)<<16>>16|1024;a[x]=C;C=C>>8;a[x+1|0]=C;I=I+1|0;}while((I|0)<(s|0));H=H+1|0;}while((H|0)<(L|0))}L=c[r+78720>>2]|0;H=(ga(g>>L,c[r+78724>>2]|0)|0)+(f>>L)|0;a[(c[r+78712>>2]|0)+(H*24|0)+22|0]=1;H=e+14452|0;L=c[H>>2]|0;s=l|0;c[s>>2]=L;c[l+4>>2]=(c[e+14456>>2]|0)-L;L=l+8|0;c[L>>2]=0;c[L+4>>2]=0;c[l+16>>2]=0;L=c[q>>2]|0;N=a[L+73973|0]|0;I=a[L+73974|0]|0;x=1<<h-1;J=c[L+4>>2]|0;z=c[L+8>>2]|0;t=c[L+12>>2]|0;F=c[L+36>>2]|0;A=c[L+40>>2]|0;E=(ga((g|0)/2|0,A)|0)+((f|0)/2|0)|0;D=(c[L+74176>>2]|0)-N|0;U=(c[L+74184>>2]|0)-I|0;if((y|0)>0){L=0;do{V=(ga(L+g|0,F)|0)+f|0;W=0;do{a[J+(V+W)|0]=(hd(l,N)|0)<<D;W=W+1|0;}while((W|0)<(y|0));L=L+1|0;}while((L|0)<(y|0))}if((x|0)>0){L=0;while(1){D=(ga(L,A)|0)+E|0;N=0;do{a[z+(D+N)|0]=(hd(l,I)|0)<<U;N=N+1|0;}while((N|0)<(x|0));N=L+1|0;if((N|0)<(x|0)){L=N}else{X=0;break}}do{L=(ga(X,A)|0)+E|0;z=0;do{a[t+(L+z)|0]=(hd(l,I)|0)<<U;z=z+1|0;}while((z|0)<(x|0));X=X+1|0;}while((X|0)<(x|0))}jd(l);c[H>>2]=c[s>>2];nd(B);i=k;return}else{O=86}}while(0);do{if((O|0)==86){if((Q|0)!=3){S=y;T=0;break}S=(y|0)/2|0;T=-1}}while(0);x=T+h|0;U=(y|0)>0;do{if(U){I=e+14448|0;t=e+14484|0;E=0;A=0;while(1){z=0;L=A;while(1){Y=L+1|0;c[m+(L<<2)>>2]=od(I,t)|0;N=z+S|0;if((N|0)<(y|0)){z=N;L=Y}else{break}}L=E+S|0;if((L|0)<(y|0)){E=L;A=Y}else{break}}if(!U){O=92;break}A=e+14448|0;E=r+74288|0;t=r+74292|0;I=p|0;B=p+4|0;s=p+8|0;H=r+78780|0;L=r+78784|0;z=r+78772|0;N=r+74220|0;D=r+69752|0;J=r+69756|0;F=r+74236|0;W=r+78712|0;V=r+74588|0;Z=0;_=0;while(1){$=Z+g|0;aa=$-1|0;ba=0;ca=_;do{da=c[m+(ca<<2)>>2]|0;if((da|0)==0){c[o+(ca<<2)>>2]=sd(A,5)|0}else{c[n+(ca<<2)>>2]=rd(A,2)|0}ea=ba+f|0;fa=ea-1|0;do{if((fa|$|0)<0){ha=0}else{if((c[D>>2]|0)<=(fa|0)){ha=0;break}if((c[J>>2]|0)<=($|0)){ha=0;break}ia=c[N>>2]|0;ja=ga($>>ia,c[F>>2]|0)|0;ka=ja+(ea>>ia)|0;la=ja+(fa>>ia)|0;ia=c[W>>2]|0;if((b[ia+(ka*24|0)>>1]|0)!=(b[ia+(la*24|0)>>1]|0)){ha=0;break}ia=c[V>>2]|0;ha=(c[ia+(ka<<2)>>2]|0)==(c[ia+(la<<2)>>2]|0)|0}}while(0);do{if((ea|aa|0)<0){ma=0}else{if((c[D>>2]|0)<=(ea|0)){ma=0;break}if((c[J>>2]|0)<=(aa|0)){ma=0;break}la=c[N>>2]|0;ia=c[F>>2]|0;ka=ea>>la;ja=(ga($>>la,ia)|0)+ka|0;na=(ga(aa>>la,ia)|0)+ka|0;ka=c[W>>2]|0;if((b[ka+(ja*24|0)>>1]|0)!=(b[ka+(na*24|0)>>1]|0)){ma=0;break}ka=c[V>>2]|0;ma=(c[ka+(ja<<2)>>2]|0)==(c[ka+(na<<2)>>2]|0)|0}}while(0);na=c[E>>2]|0;ka=c[t>>2]|0;ja=(ga($>>na,ka)|0)+(ea>>na)|0;do{if((ha|0)==0){oa=1}else{na=c[u>>2]|0;ia=(ga($>>na,c[w>>2]|0)|0)+(fa>>na)|0;na=(c[v>>2]|0)+(ia*3|0)|0;if(!(((d[na]|d[na+1|0]<<8)<<16>>16&1792)==0)){oa=1;break}oa=d[(c[z>>2]|0)+(ja-1)|0]|0}}while(0);do{if((ma|0)==0){pa=1}else{fa=c[u>>2]|0;na=(ga(aa>>fa,c[w>>2]|0)|0)+(ea>>fa)|0;fa=(c[v>>2]|0)+(na*3|0)|0;if(!(((d[fa]|d[fa+1|0]<<8)<<16>>16&1792)==0)){pa=1;break}fa=c[N>>2]|0;if(($|0)<=($>>fa<<fa|0)){pa=1;break}pa=d[(c[z>>2]|0)+(ja-ka)|0]|0}}while(0);do{if((oa|0)==(pa|0)){if(oa>>>0<2>>>0){c[I>>2]=0;c[B>>2]=1;c[s>>2]=26;qa=0;ra=1;sa=26;break}else{c[I>>2]=oa;ka=(oa+29&31)+2|0;c[B>>2]=ka;ea=((oa-1|0)%32|0)+2|0;c[s>>2]=ea;qa=oa;ra=ka;sa=ea;break}}else{c[I>>2]=oa;c[B>>2]=pa;if(!((oa|0)==0|(pa|0)==0)){c[s>>2]=0;qa=oa;ra=pa;sa=0;break}if((oa|0)==1|(pa|0)==1){c[s>>2]=26;qa=oa;ra=pa;sa=26;break}else{c[s>>2]=1;qa=oa;ra=pa;sa=1;break}}}while(0);if((da|0)==1){ta=c[p+(c[n+(ca<<2)>>2]<<2)>>2]&255}else{if((qa|0)>(ra|0)){c[I>>2]=ra;c[B>>2]=qa;ua=ra;va=qa}else{ua=qa;va=ra}if((ua|0)>(sa|0)){c[I>>2]=sa;c[s>>2]=ua;wa=ua;xa=sa}else{wa=sa;xa=ua}if((va|0)>(wa|0)){c[B>>2]=wa;c[s>>2]=va;ya=wa;za=va}else{ya=va;za=wa}ea=c[o+(ca<<2)>>2]|0;ka=((ea|0)>=(xa|0))+ea|0;ea=((ka|0)>=(ya|0))+ka|0;ta=((ea|0)>=(za|0))+ea&255}ea=1<<x-(c[H>>2]|0);if((ea|0)>0){ka=0;do{fa=0;do{na=fa+ja+(ga(c[L>>2]|0,ka)|0)|0;a[(c[z>>2]|0)+na|0]=ta;fa=fa+1|0;}while((fa|0)<(ea|0));ka=ka+1|0;}while((ka|0)<(ea|0))}ca=ca+1|0;ba=ba+S|0;}while((ba|0)<(y|0));ba=Z+S|0;if((ba|0)<(y|0)){Z=ba;_=ca}else{Aa=A;break}}}else{O=92}}while(0);if((O|0)==92){Aa=e+14448|0}if((od(Aa,e+14485|0)|0)==0){Ba=4}else{Ba=sd(Aa,2)|0}x=c[r+78780>>2]|0;U=(ga(g>>x,c[r+78784>>2]|0)|0)+(f>>x)|0;x=d[(c[r+78772>>2]|0)+U|0]|0;if((Ba|0)==4){Ca=x}else{U=c[14352+(Ba<<2)>>2]|0;Ca=(U|0)==(x|0)?34:U}c[e+32>>2]=Ca}else{if(K){Yg(e,f,g,0,0,y,y,j,y,0);break}switch(Q|0){case 7:{U=(3<<h|0)/4|0;Yg(e,f,g,0,0,U,y,j,y,0);Yg(e,f,g,U,0,(y|0)/4|0,y,j,y,1);break b;break};case 3:{U=(y|0)/2|0;Yg(e,f,g,0,0,U,U,j,y,0);Yg(e,f,g,U,0,U,U,j,y,1);Yg(e,f,g,0,U,U,U,j,y,2);Yg(e,f,g,U,U,U,U,j,y,3);break b;break};case 1:{U=(y|0)/2|0;Yg(e,f,g,0,0,y,U,j,y,0);Yg(e,f,g,0,U,y,U,j,y,1);break b;break};case 2:{U=(y|0)/2|0;Yg(e,f,g,0,0,U,y,j,y,0);Yg(e,f,g,U,0,U,y,j,y,1);break b;break};case 4:{U=(y|0)/4|0;Yg(e,f,g,0,0,y,U,j,y,0);Yg(e,f,g,0,U,y,(3<<h|0)/4|0,j,y,1);break b;break};case 5:{U=(3<<h|0)/4|0;Yg(e,f,g,0,0,y,U,j,y,0);Yg(e,f,g,0,U,y,(y|0)/4|0,j,y,1);break b;break};case 6:{U=(y|0)/4|0;Yg(e,f,g,0,0,U,y,j,y,0);Yg(e,f,g,U,0,(3<<h|0)/4|0,y,j,y,1);break b;break};default:{bc(1992,10960,3545,13792)}}}}while(0);do{if(M){if(!((Q|0)!=0|(a[e+26|0]|0)==0)){break}if((od(e+14448|0,e+14617|0)|0)!=0){break}i=k;return}}while(0);if(R){Da=(c[r+69900>>2]|0)+P|0}else{Da=c[r+69896>>2]|0}Wg(e,f,g,f,g,f,g,h,0,0,Da,P,G,1,1);i=k;return}function _g(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;g=d+14632|0;h=c[g>>2]|0;i=c[h+74236>>2]|0;j=d+12|0;k=h+74369|0;do{if(!f){if((a[k]|0)==0){break}l=c[j>>2]|0;if((l|0)<=0){break}if((c[d+8>>2]|0)!=0){break}m=c[d+14644>>2]|0;n=l-1|0;if((i|0)>1){Uf(h,m,1,n,1);xs(d+14472|0,(c[(c[d+14640>>2]|0)+79028>>2]|0)+(((c[j>>2]|0)*154|0)-154)|0,154)|0;break}else{Uf(h,m,0,n,1);Qg(d);break}}}while(0);f=d+8|0;n=i-1|0;m=d+14644|0;l=d+14636|0;o=d|0;p=h+74244|0;q=d+14640|0;r=d+14472|0;s=d+14448|0;t=h+74339|0;u=d+4|0;v=h+74370|0;w=h+74576|0;h=c[f>>2]|0;x=c[j>>2]|0;while(1){if((x|0)>0&e&(h|0)<(n|0)){Uf(c[g>>2]|0,c[m>>2]|0,h+1|0,x-1|0,1)}y=c[l>>2]|0;z=c[g>>2]|0;A=c[o>>2]|0;B=c[z+74236>>2]|0;C=(A|0)%(B|0)|0;D=(A|0)/(B|0)|0;B=z+74220|0;A=c[B>>2]|0;E=C<<A;F=D<<A;G=c[z+78724>>2]|0;H=(ga(G,D)|0)+C|0;I=c[z+78712>>2]|0;b[I+(H*24|0)>>1]=c[y+792>>2];H=c[z+78720>>2]|0;b[I+(((ga(F>>H,G)|0)+(E>>H)|0)*24|0)+2>>1]=c[y>>2];if((a[y+325|0]|0)==0){if((a[y+326|0]|0)==0){J=A}else{K=13}}else{K=13}if((K|0)==13){K=0;Sg(d,C,D,0);J=c[B>>2]|0}Tg(d,E,F,J,0);do{if((a[k]|0)!=0&(h|0)==1){if((x|0)>=((c[p>>2]|0)-1|0)){break}xs((c[(c[q>>2]|0)+79028>>2]|0)+(x*154|0)|0,r|0,154)|0}}while(0);F=pd(s)|0;E=(F|0)!=0;do{if(E){if((a[t]|0)==0){break}xs((c[l>>2]|0)+1332|0,r|0,154)|0}}while(0);B=(ga(x,i)|0)+h|0;Uh((c[(c[g>>2]|0)+78880>>2]|0)+(B*76|0)|0,1);B=c[j>>2]|0;D=c[u>>2]|0;C=D+1|0;c[u>>2]=C;A=c[g>>2]|0;y=c[A+74252>>2]|0;if((C|0)<(y|0)){H=c[(c[A+74564>>2]|0)+(C<<2)>>2]|0;c[o>>2]=H;G=A+74236|0;I=(H|0)%(c[G>>2]|0)|0;c[f>>2]=I;z=(H|0)/(c[G>>2]|0)|0;c[j>>2]=z;L=I;M=z}else{c[o>>2]=y;z=A+74236|0;A=(y|0)%(c[z>>2]|0)|0;c[f>>2]=A;I=(y|0)/(c[z>>2]|0)|0;c[j>>2]=I;if((F|0)==0){K=23;break}else{L=A;M=I}}if(E){N=0;K=33;break}if((a[v]|0)==0){O=0}else{I=c[w>>2]|0;O=(c[I+(C<<2)>>2]|0)!=(c[I+(D<<2)>>2]|0)|0}if((a[k]|0)==0){P=0}else{P=(B|0)!=(M|0)|0}if((P|O|0)==0){h=L;x=M}else{K=30;break}}if((K|0)==23){we(c[d+14628>>2]|0,1004,0);a[(c[g>>2]|0)+78864|0]=3;N=2;return N|0}else if((K|0)==30){if((pd(s)|0)==0){we(c[d+14628>>2]|0,1017,0);a[(c[g>>2]|0)+78864|0]=3;N=2;return N|0}else{nd(s);N=1;return N|0}}else if((K|0)==33){return N|0}return 0}function $g(b){b=b|0;var d=0,f=0,g=0,h=0,i=0,j=0;d=b+14632|0;f=c[d>>2]|0;g=c[b+14636>>2]|0;if((a[g+12|0]|0)==0){Qg(b);return}h=c[g+16>>2]|0;g=c[(c[f+74564>>2]|0)+((c[(c[f+74552>>2]|0)+(h<<2)>>2]|0)-1<<2)>>2]|0;i=c[(c[f+44>>2]|0)+(e[(c[f+78712>>2]|0)+(g*24|0)+2>>1]<<2)>>2]|0;j=c[f+74236>>2]|0;if(tg(f+74336|0,(h|0)%(j|0)|0,(h|0)/(j|0)|0)|0){Qg(b);return}else{Vf(c[d>>2]|0,c[b+14644>>2]|0,g,1);xs(b+14472|0,i+1332|0,154)|0;return}}function ah(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;d=c[b+12>>2]|0;e=d+14632|0;f=c[e>>2]|0;g=b+4|0;c[g>>2]=1;Sf(f);h=c[e>>2]|0;e=c[d+4>>2]|0;i=c[h+74252>>2]|0;if((e|0)<(i|0)){j=c[(c[h+74564>>2]|0)+(e<<2)>>2]|0;c[d>>2]=j;e=h+74236|0;c[d+8>>2]=(j|0)%(c[e>>2]|0)|0;c[d+12>>2]=(j|0)/(c[e>>2]|0)|0}else{c[d>>2]=i;e=h+74236|0;c[d+8>>2]=(i|0)%(c[e>>2]|0)|0;c[d+12>>2]=(i|0)/(c[e>>2]|0)|0}e=b+8|0;if((a[e]|0)==0){Qg(d);k=d+14448|0;nd(k);l=a[e]|0;m=l<<24>>24!=0;n=_g(d,0,m)|0;c[g>>2]=3;Tf(f);return}else{$g(d);k=d+14448|0;nd(k);l=a[e]|0;m=l<<24>>24!=0;n=_g(d,0,m)|0;c[g>>2]=3;Tf(f);return}}function bh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;d=c[b+12>>2]|0;e=d+14632|0;f=c[e>>2]|0;g=f+74236|0;h=c[g>>2]|0;i=b+4|0;c[i>>2]=1;Sf(f);j=c[e>>2]|0;e=c[d+4>>2]|0;k=c[j+74252>>2]|0;if((e|0)<(k|0)){l=c[(c[j+74564>>2]|0)+(e<<2)>>2]|0;c[d>>2]=l;e=j+74236|0;c[d+8>>2]=(l|0)%(c[e>>2]|0)|0;c[d+12>>2]=(l|0)/(c[e>>2]|0)|0;m=l}else{c[d>>2]=k;l=j+74236|0;c[d+8>>2]=(k|0)%(c[l>>2]|0)|0;c[d+12>>2]=(k|0)/(c[l>>2]|0)|0;m=k}k=(m|0)/(h|0)|0;m=b+8|0;if((a[m]|0)!=0){$g(d)}nd(d+14448|0);if((a[m]|0)==0){n=0}else{n=(a[(c[d+14636>>2]|0)+12|0]|0)==0}_g(d,1,n)|0;if((c[d+12>>2]|0)!=(k|0)){c[i>>2]=3;Tf(f);return}n=c[g>>2]|0;g=c[d+8>>2]|0;if((g|0)>=(n|0)){c[i>>2]=3;Tf(f);return}d=ga(k,h)|0;h=f+78880|0;k=g;do{Uh((c[h>>2]|0)+((k+d|0)*76|0)|0,1);k=k+1|0;}while((k|0)<(n|0));c[i>>2]=3;Tf(f);return}function ch(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=c[b+14632>>2]|0;e=c[b+4>>2]|0;f=c[d+74252>>2]|0;if((e|0)<(f|0)){g=c[(c[d+74564>>2]|0)+(e<<2)>>2]|0;c[b>>2]=g;e=d+74236|0;c[b+8>>2]=(g|0)%(c[e>>2]|0)|0;c[b+12>>2]=(g|0)/(c[e>>2]|0)|0}else{c[b>>2]=f;e=d+74236|0;c[b+8>>2]=(f|0)%(c[e>>2]|0)|0;c[b+12>>2]=(f|0)/(c[e>>2]|0)|0}e=b+14636|0;f=c[e>>2]|0;$g(b);g=b+14448|0;nd(g);h=b+14452|0;i=g|0;g=b+14628|0;j=d+74370|0;d=(a[f+12|0]|0)==0;f=0;while(1){do{if((f|0)>0){k=f-1|0;l=c[e>>2]|0;m=c[l+776>>2]|0;if(k>>>0<(c[l+780>>2]|0)-m>>2>>>0){if(((c[h>>2]|0)-2-(c[i>>2]|0)|0)==(c[m+(k<<2)>>2]|0)){break}}we(c[g>>2]|0,1003,1)}}while(0);k=f+1|0;if(((_g(b,0,d)|0)&-3|0)==0){break}if((a[j]|0)==0){d=0;f=k;continue}Qg(b);d=0;f=k}return 0}function dh(a){a=a|0;return}function eh(a){a=a|0;is(a);return}function fh(a){a=a|0;return}function gh(a){a=a|0;is(a);return}function hh(b){b=b|0;c[b+4692>>2]=0;c[b+4696>>2]=0;c[b+4700>>2]=0;a[b|0]=0;return}function ih(a){a=a|0;var b=0,d=0;b=c[a+4692>>2]|0;if((b|0)==0){return}d=a+4696|0;a=c[d>>2]|0;if((a|0)!=(b|0)){c[d>>2]=a+(~(((a-100+(-b|0)|0)>>>0)/100|0)*100|0)}is(b|0);return}function jh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;a[b+1|0]=hd(e,4)|0;f=(hd(e,3)|0)+1&255;g=b+2|0;a[g]=f;if(f<<24>>24>7){h=8;return h|0}a[b+3|0]=hd(e,1)|0;th(e,b+4|0,a[g]|0);f=kd(e)|0;if((f|0)==-99999){we(d|0,8,0);h=8;return h|0}c[b+440>>2]=f;f=kd(e)|0;if((f|0)==-99999){we(d|0,8,0);h=8;return h|0}i=b+444|0;c[i>>2]=f;do{if((f|0)==3){j=(hd(e,1)|0)&255;a[b+448|0]=j;k=b+448|0;if(j<<24>>24==0){l=k;m=10;break}c[b+4892>>2]=0;n=c[i>>2]|0;o=k}else{a[b+448|0]=0;l=b+448|0;m=10}}while(0);if((m|0)==10){f=c[i>>2]|0;c[b+4892>>2]=f;n=f;o=l}if(n>>>0>3>>>0){we(d|0,1019,0);h=8;return h|0}l=b+4896|0;c[l>>2]=c[25464+(n<<2)>>2];f=b+4900|0;c[f>>2]=c[25392+(n<<2)>>2];n=kd(e)|0;if((n|0)==-99999){we(d|0,8,0);h=8;return h|0}k=b+452|0;c[k>>2]=n;n=kd(e)|0;if((n|0)==-99999){we(d|0,8,0);h=8;return h|0}j=b+456|0;c[j>>2]=n;n=(hd(e,1)|0)&255;a[b+460|0]=n;do{if(n<<24>>24==0){ys(b+464|0,0,16)|0}else{p=kd(e)|0;if((p|0)==-99999){we(d|0,8,0);h=8;return h|0}c[b+464>>2]=p;p=kd(e)|0;if((p|0)==-99999){we(d|0,8,0);h=8;return h|0}c[b+468>>2]=p;p=kd(e)|0;if((p|0)==-99999){we(d|0,8,0);h=8;return h|0}c[b+472>>2]=p;p=kd(e)|0;if(!((p|0)==-99999)){c[b+476>>2]=p;break}we(d|0,8,0);h=8;return h|0}}while(0);if((c[b+4892>>2]|0)==0){c[b+4904>>2]=1;c[b+4908>>2]=1}else{n=c[i>>2]|0;c[b+4904>>2]=c[25464+(n<<2)>>2];c[b+4908>>2]=c[25392+(n<<2)>>2]}n=kd(e)|0;if((n|0)==-99999){we(d|0,8,0);h=8;return h|0}p=b+480|0;c[p>>2]=n+8;n=kd(e)|0;if((n|0)==-99999){we(d|0,8,0);h=8;return h|0}q=b+484|0;c[q>>2]=n+8;n=kd(e)|0;if((n|0)==-99999){we(d|0,8,0);h=8;return h|0}r=n+4|0;n=b+488|0;c[n>>2]=r;c[b+4912>>2]=1<<r;r=(hd(e,1)|0)&255;s=b+492|0;a[s]=r;if(r<<24>>24==0){r=a[g]|0;t=(r<<24>>24)-1|0;u=r}else{v=0;m=39}while(1){if((m|0)==39){m=0;t=v;u=a[g]|0}w=(u<<24>>24)-1|0;if((t|0)>(w|0)){m=48;break}r=kd(e)|0;if((r|0)==-99999|(r|0)>15){m=42;break}c[b+496+(t<<2)>>2]=r+1;r=kd(e)|0;if((r|0)==-99999){m=44;break}x=b+524+(t<<2)|0;c[x>>2]=r;r=kd(e)|0;if((r|0)==-99999){m=46;break}c[b+552+(t<<2)>>2]=r;c[b+5008+(t<<2)>>2]=r-1+(c[x>>2]|0);v=t+1|0;m=39}if((m|0)==42){we(d|0,8,0);h=8;return h|0}else if((m|0)==44){we(d|0,8,0);h=8;return h|0}else if((m|0)==46){we(d|0,8,0);h=8;return h|0}else if((m|0)==48){do{if((a[s]|0)!=0){if(!(u<<24>>24<8)){bc(4040,10832,192,12744);return 0}if((w|0)<=0){break}t=b+496+(w<<2)|0;v=b+524+(w<<2)|0;x=b+552+(w<<2)|0;r=0;do{c[b+496+(r<<2)>>2]=c[t>>2];c[b+524+(r<<2)>>2]=c[v>>2];c[b+552+(r<<2)>>2]=c[x>>2];r=r+1|0;}while((r|0)<((a[g]|0)-1|0))}}while(0);g=kd(e)|0;if((g|0)==-99999){we(d|0,8,0);h=8;return h|0}w=b+580|0;c[w>>2]=g+3;g=kd(e)|0;if((g|0)==-99999){we(d|0,8,0);h=8;return h|0}u=b+584|0;c[u>>2]=g;g=kd(e)|0;if((g|0)==-99999){we(d|0,8,0);h=8;return h|0}s=b+588|0;c[s>>2]=g+2;g=kd(e)|0;if((g|0)==-99999){we(d|0,8,0);h=8;return h|0}r=b+592|0;c[r>>2]=g;g=kd(e)|0;if((g|0)==-99999){we(d|0,8,0);h=8;return h|0}c[b+596>>2]=g;g=kd(e)|0;if((g|0)==-99999){we(d|0,8,0);h=8;return h|0}c[b+600>>2]=g;g=(hd(e,1)|0)&255;a[b+604|0]=g;do{if(!(g<<24>>24==0)){x=(hd(e,1)|0)&255;a[b+605|0]=x;v=b+606|0;if(x<<24>>24==0){lh(v);break}x=kh(e,0,v,0)|0;if((x|0)==0){break}else{h=x}return h|0}}while(0);a[b+4670|0]=hd(e,1)|0;a[b+4671|0]=hd(e,1)|0;g=(hd(e,1)|0)&255;a[b+4672|0]=g;do{if(g<<24>>24==0){a[b+4673|0]=0;a[b+4674|0]=0;c[b+4676>>2]=0;c[b+4680>>2]=0;a[b+4684|0]=0}else{a[b+4673|0]=(hd(e,4)|0)+1;a[b+4674|0]=(hd(e,4)|0)+1;x=kd(e)|0;if((x|0)==-99999){we(d|0,8,0);h=8;return h|0}c[b+4676>>2]=x+3;x=kd(e)|0;if(!((x|0)==-99999)){c[b+4680>>2]=x;a[b+4684|0]=hd(e,1)|0;break}we(d|0,8,0);h=8;return h|0}}while(0);g=kd(e)|0;if((g|0)==-99999){we(d|0,8,0);h=8;return h|0}x=b+4688|0;c[x>>2]=g;if(g>>>0>64>>>0){we(d|0,1014,0);h=8;return h|0}v=b+4692|0;t=b+4696|0;y=c[t>>2]|0;z=v|0;A=c[z>>2]|0;B=(y-A|0)/100|0;do{if(B>>>0<g>>>0){oh(v,g-B|0);C=c[x>>2]|0}else{if(!(B>>>0>g>>>0)){C=g;break}D=A+(g*100|0)|0;if((y|0)==(D|0)){C=g;break}c[t>>2]=y+(~(((y-100+(-D|0)|0)>>>0)/100|0)*100|0);C=g}}while(0);a:do{if((C|0)>0){g=0;while(1){y=g+1|0;if(!(xg(d,b,e,(c[z>>2]|0)+(g*100|0)|0,g,v,0)|0)){h=1005;break}if((y|0)<(c[x>>2]|0)){g=y}else{break a}}return h|0}}while(0);x=(hd(e,1)|0)&255;a[b+4704|0]=x;do{if(x<<24>>24==0){c[b+4708>>2]=0}else{v=kd(e)|0;if((v|0)==-99999){we(d|0,8,0);h=8;return h|0}z=b+4708|0;c[z>>2]=v;if((v|0)>32){h=8;return h|0}if((v|0)>0){E=0}else{break}do{c[b+4712+(E<<2)>>2]=hd(e,c[n>>2]|0)|0;a[b+4840+E|0]=hd(e,1)|0;E=E+1|0;}while((E|0)<(c[z>>2]|0))}}while(0);a[b+4872|0]=hd(e,1)|0;a[b+4873|0]=hd(e,1)|0;a[b+4874|0]=hd(e,1)|0;e=c[p>>2]|0;c[b+4876>>2]=e;c[b+4880>>2]=(e*6|0)-48;e=c[q>>2]|0;c[b+4884>>2]=e;c[b+4888>>2]=(e*6|0)-48;e=c[w>>2]|0;c[b+4916>>2]=e;w=(c[u>>2]|0)+e|0;c[b+4920>>2]=w;u=1<<e;c[b+4924>>2]=u;q=1<<w;c[b+4928>>2]=q;p=c[k>>2]|0;k=(p|0)/(u|0)|0;c[b+4932>>2]=k;E=(p-1+q|0)/(q|0)|0;c[b+4936>>2]=E;n=c[j>>2]|0;j=(n|0)/(u|0)|0;c[b+4940>>2]=j;u=(n-1+q|0)/(q|0)|0;c[b+4944>>2]=u;c[b+4948>>2]=ga(j,k)|0;c[b+4952>>2]=ga(u,E)|0;c[b+4956>>2]=ga(n,p)|0;do{if((c[i>>2]|0)==0){m=98}else{if((a[o]|0)!=0){m=98;break}c[b+4960>>2]=(q|0)/(c[l>>2]|0)|0;c[b+4964>>2]=(q|0)/(c[f>>2]|0)|0}}while(0);if((m|0)==98){c[b+4960>>2]=0;c[b+4964>>2]=0}m=c[s>>2]|0;c[b+4980>>2]=m;c[b+4984>>2]=(c[r>>2]|0)+m;r=e-1|0;c[b+4988>>2]=r;e=w-r|0;c[b+4992>>2]=E<<e;c[b+4996>>2]=u<<e;e=c[b+4676>>2]|0;c[b+5e3>>2]=e;c[b+5004>>2]=(c[b+4680>>2]|0)+e;e=w-m|0;m=E<<e;c[b+4968>>2]=m;E=u<<e;c[b+4972>>2]=E;c[b+4976>>2]=ga(E,m)|0;a[b|0]=1;h=0;return h|0}return 0}function kh(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;g=i;i=i+6240|0;e=g|0;h=g+96|0;j=0;a:while(1){k=(j|0)==3;l=k?2:6;m=(j|0)==0;n=k^1;o=m?16:64;p=(j|0)>1;q=0;do{r=h+(q<<10)|0;s=k&(q|0)==1;do{if(((hd(b,1)|0)&255)<<24>>24==0){t=kd(b)|0;if((t|0)<0|(t|0)>(q|0)){u=8;v=29;break a}w=e+(j*24|0)+(q<<2)|0;c[w>>2]=16;if((t|0)!=0){if(!((t|0)==1|n)){v=12;break a}x=q-t|0;xs(r|0,h+(x<<10)|0,o)|0;t=c[e+(j*24|0)+(x<<2)>>2]|0;c[w>>2]=t;y=t&255;v=20;break}if(m){xs(r|0,24952,16)|0;v=21;break}if((q|0)<3&(s^1)){xs(r|0,24744,64)|0;y=16;v=20;break}else{xs(r|0,24808,64)|0;y=16;v=20;break}}else{if(p){t=ld(b)|0;if((t+7|0)>>>0>254>>>0){u=8;v=29;break a}w=t+8|0;c[e+(j*24|0)+(q<<2)>>2]=w;z=w;A=w&255}else{z=8;A=16}w=z;t=0;while(1){x=ld(b)|0;if((x+128|0)>>>0>255>>>0){u=8;v=29;break a}B=(w+256+x|0)%256|0;a[h+(q<<10)+t|0]=B;x=t+1|0;if((x|0)<(o|0)){w=B;t=x}else{y=A;v=20;break}}}}while(0);do{if((v|0)==20){v=0;if((j|0)==0){v=21;break}else if((j|0)==1){s=Fg(3,0)|0;t=0;do{a[((d[s+(t<<1)+1|0]|0)<<3)+(d[s+(t<<1)|0]|0)+(f+96+(q<<6))|0]=a[h+(q<<10)+t|0]|0;t=t+1|0;}while((t|0)<64)}else if((j|0)==2){t=f+480+(q<<8)|0;nh(t,r,2);a[t]=y;break}else if((j|0)==3){t=f+2016+(q<<10)|0;nh(t,r,3);a[t]=y;break}else{break}}}while(0);if((v|0)==21){v=0;r=Fg(2,0)|0;t=0;do{a[((d[r+(t<<1)+1|0]|0)<<2)+(d[r+(t<<1)|0]|0)+(f+(q<<4))|0]=a[h+(q<<10)+t|0]|0;t=t+1|0;}while((t|0)<16)}q=q+1|0;}while((q|0)<(l|0));l=j+1|0;if((l|0)<4){j=l}else{u=0;v=29;break}}if((v|0)==12){bc(1920,10832,672,13768);return 0}else if((v|0)==29){i=g;return u|0}return 0}function lh(b){b=b|0;var c=0,e=0;c=Fg(2,0)|0;e=0;do{a[b+(((d[c+(e<<1)+1|0]|0)<<2)+(d[c+(e<<1)|0]|0))|0]=a[24952+e|0]|0;e=e+1|0;}while((e|0)<16);e=Fg(2,0)|0;c=0;do{a[((d[e+(c<<1)+1|0]|0)<<2)+(d[e+(c<<1)|0]|0)+(b+16)|0]=a[24952+c|0]|0;c=c+1|0;}while((c|0)<16);c=Fg(2,0)|0;e=0;do{a[((d[c+(e<<1)+1|0]|0)<<2)+(d[c+(e<<1)|0]|0)+(b+32)|0]=a[24952+e|0]|0;e=e+1|0;}while((e|0)<16);e=Fg(2,0)|0;c=0;do{a[((d[e+(c<<1)+1|0]|0)<<2)+(d[e+(c<<1)|0]|0)+(b+48)|0]=a[24952+c|0]|0;c=c+1|0;}while((c|0)<16);c=Fg(2,0)|0;e=0;do{a[((d[c+(e<<1)+1|0]|0)<<2)+(d[c+(e<<1)|0]|0)+(b+64)|0]=a[24952+e|0]|0;e=e+1|0;}while((e|0)<16);e=Fg(2,0)|0;c=0;do{a[((d[e+(c<<1)+1|0]|0)<<2)+(d[e+(c<<1)|0]|0)+(b+80)|0]=a[24952+c|0]|0;c=c+1|0;}while((c|0)<16);c=Fg(3,0)|0;e=0;do{a[((d[c+(e<<1)+1|0]|0)<<3)+(d[c+(e<<1)|0]|0)+(b+96)|0]=a[24744+e|0]|0;e=e+1|0;}while((e|0)<64);e=Fg(3,0)|0;c=0;do{a[((d[e+(c<<1)+1|0]|0)<<3)+(d[e+(c<<1)|0]|0)+(b+288)|0]=a[24808+c|0]|0;c=c+1|0;}while((c|0)<64);c=Fg(3,0)|0;e=0;do{a[((d[c+(e<<1)+1|0]|0)<<3)+(d[c+(e<<1)|0]|0)+(b+160)|0]=a[24744+e|0]|0;e=e+1|0;}while((e|0)<64);e=Fg(3,0)|0;c=0;do{a[((d[e+(c<<1)+1|0]|0)<<3)+(d[e+(c<<1)|0]|0)+(b+352)|0]=a[24808+c|0]|0;c=c+1|0;}while((c|0)<64);c=Fg(3,0)|0;e=0;do{a[((d[c+(e<<1)+1|0]|0)<<3)+(d[c+(e<<1)|0]|0)+(b+224)|0]=a[24744+e|0]|0;e=e+1|0;}while((e|0)<64);e=Fg(3,0)|0;c=0;do{a[((d[e+(c<<1)+1|0]|0)<<3)+(d[e+(c<<1)|0]|0)+(b+416)|0]=a[24808+c|0]|0;c=c+1|0;}while((c|0)<64);nh(b+480|0,24744,2);nh(b+1248|0,24808,2);nh(b+736|0,24744,2);nh(b+1504|0,24808,2);nh(b+992|0,24744,2);nh(b+1760|0,24808,2);nh(b+2016|0,24744,3);nh(b+3040|0,24808,3);return}function mh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;if((d|0)==2){f=r}else if((d|0)==1){f=s}else{i=e;return}d=c[f>>2]|0;rh(d,8576,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f;rh(d,6288,(f=i,i=i+8|0,c[f>>2]=a[b+1|0]|0,f)|0);i=f;g=b+2|0;rh(d,3944,(f=i,i=i+8|0,c[f>>2]=a[g]|0,f)|0);i=f;rh(d,2568,(f=i,i=i+8|0,c[f>>2]=a[b+3|0]|0,f)|0);i=f;vh(b+4|0,a[g]|0,d);rh(d,1600,(f=i,i=i+8|0,c[f>>2]=c[b+440>>2],f)|0);i=f;h=b+444|0;j=c[h>>2]|0;do{if((j|0)==1){k=744}else{if((j|0)==2){k=400;break}k=(j|0)==3?12344:11800}}while(0);rh(d,1120,(f=i,i=i+16|0,c[f>>2]=j,c[f+8>>2]=k,f)|0);i=f;if((c[h>>2]|0)==3){rh(d,11424,(f=i,i=i+8|0,c[f>>2]=a[b+448|0]|0,f)|0);i=f}rh(d,11040,(f=i,i=i+8|0,c[f>>2]=c[b+452>>2],f)|0);i=f;rh(d,10792,(f=i,i=i+8|0,c[f>>2]=c[b+456>>2],f)|0);i=f;h=b+460|0;rh(d,10456,(f=i,i=i+8|0,c[f>>2]=a[h]|0,f)|0);i=f;if((a[h]|0)!=0){rh(d,10248,(f=i,i=i+8|0,c[f>>2]=c[b+464>>2],f)|0);i=f;rh(d,1e4,(f=i,i=i+8|0,c[f>>2]=c[b+468>>2],f)|0);i=f;rh(d,9800,(f=i,i=i+8|0,c[f>>2]=c[b+472>>2],f)|0);i=f;rh(d,9592,(f=i,i=i+8|0,c[f>>2]=c[b+476>>2],f)|0);i=f}rh(d,9424,(f=i,i=i+8|0,c[f>>2]=c[b+480>>2],f)|0);i=f;rh(d,9208,(f=i,i=i+8|0,c[f>>2]=c[b+484>>2],f)|0);i=f;rh(d,9008,(f=i,i=i+8|0,c[f>>2]=c[b+488>>2],f)|0);i=f;h=b+492|0;rh(d,8768,(f=i,i=i+8|0,c[f>>2]=a[h]|0,f)|0);i=f;k=a[g]|0;if((a[h]|0)==0){l=(k<<24>>24)-1|0}else{l=0}if((l|0)<=((k<<24>>24)-1|0)){k=l;while(1){rh(d,8560,(f=i,i=i+8|0,c[f>>2]=k,f)|0);i=f;rh(d,8392,(f=i,i=i+8|0,c[f>>2]=c[b+496+(k<<2)>>2],f)|0);i=f;rh(d,8104,(f=i,i=i+8|0,c[f>>2]=c[b+524+(k<<2)>>2],f)|0);i=f;rh(d,7840,(f=i,i=i+8|0,c[f>>2]=c[b+552+(k<<2)>>2],f)|0);i=f;if((k|0)<((a[g]|0)-1|0)){k=k+1|0}else{break}}}k=b+580|0;rh(d,7648,(f=i,i=i+8|0,c[f>>2]=c[k>>2],f)|0);i=f;g=b+584|0;rh(d,7496,(f=i,i=i+8|0,c[f>>2]=c[g>>2],f)|0);i=f;l=b+588|0;rh(d,7288,(f=i,i=i+8|0,c[f>>2]=c[l>>2],f)|0);i=f;h=b+592|0;rh(d,7008,(f=i,i=i+8|0,c[f>>2]=c[h>>2],f)|0);i=f;rh(d,6792,(f=i,i=i+8|0,c[f>>2]=c[b+596>>2],f)|0);i=f;rh(d,6536,(f=i,i=i+8|0,c[f>>2]=c[b+600>>2],f)|0);i=f;j=b+604|0;rh(d,6256,(f=i,i=i+8|0,c[f>>2]=a[j]|0,f)|0);i=f;do{if((a[j]|0)!=0){m=b+605|0;rh(d,5872,(f=i,i=i+8|0,c[f>>2]=a[m]|0,f)|0);i=f;if((a[m]|0)==0){break}rh(d,5664,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f}}while(0);rh(d,5392,(f=i,i=i+8|0,c[f>>2]=a[b+4670|0]|0,f)|0);i=f;rh(d,5192,(f=i,i=i+8|0,c[f>>2]=a[b+4671|0]|0,f)|0);i=f;j=b+4672|0;rh(d,4952,(f=i,i=i+8|0,c[f>>2]=a[j]|0,f)|0);i=f;if((a[j]|0)!=0){rh(d,4680,(f=i,i=i+8|0,c[f>>2]=a[b+4673|0]|0,f)|0);i=f;rh(d,4504,(f=i,i=i+8|0,c[f>>2]=a[b+4674|0]|0,f)|0);i=f;rh(d,4304,(f=i,i=i+8|0,c[f>>2]=c[b+4676>>2],f)|0);i=f;rh(d,4120,(f=i,i=i+8|0,c[f>>2]=c[b+4680>>2],f)|0);i=f;rh(d,3904,(f=i,i=i+8|0,c[f>>2]=a[b+4684|0]|0,f)|0);i=f}j=b+4688|0;rh(d,3704,(f=i,i=i+8|0,c[f>>2]=c[j>>2],f)|0);i=f;if((c[j>>2]|0)>0){m=b+4692|0;n=0;do{rh(d,3536,(f=i,i=i+8|0,c[f>>2]=n,f)|0);i=f;yg((c[m>>2]|0)+(n*100|0)|0,16,d);n=n+1|0;}while((n|0)<(c[j>>2]|0))}j=b+4704|0;rh(d,3408,(f=i,i=i+8|0,c[f>>2]=a[j]|0,f)|0);i=f;do{if((a[j]|0)!=0){n=b+4708|0;rh(d,3320,(f=i,i=i+8|0,c[f>>2]=c[n>>2],f)|0);i=f;if((c[n>>2]|0)>0){o=0}else{break}do{m=c[b+4712+(o<<2)>>2]|0;p=a[b+4840+o|0]|0;rh(d,3216,(f=i,i=i+24|0,c[f>>2]=o,c[f+8>>2]=m,c[f+16>>2]=p,f)|0);i=f;o=o+1|0;}while((o|0)<(c[n>>2]|0))}}while(0);rh(d,3088,(f=i,i=i+8|0,c[f>>2]=a[b+4872|0]|0,f)|0);i=f;rh(d,2968,(f=i,i=i+8|0,c[f>>2]=a[b+4873|0]|0,f)|0);i=f;rh(d,2840,(f=i,i=i+8|0,c[f>>2]=a[b+4874|0]|0,f)|0);i=f;rh(d,2688,(f=i,i=i+8|0,c[f>>2]=c[b+4928>>2],f)|0);i=f;rh(d,2544,(f=i,i=i+8|0,c[f>>2]=c[b+4924>>2],f)|0);i=f;rh(d,2384,(f=i,i=i+8|0,c[f>>2]=1<<(c[g>>2]|0)+(c[k>>2]|0),f)|0);i=f;rh(d,2272,(f=i,i=i+8|0,c[f>>2]=1<<c[l>>2],f)|0);i=f;rh(d,2200,(f=i,i=i+8|0,c[f>>2]=1<<(c[h>>2]|0)+(c[l>>2]|0),f)|0);i=f;rh(d,2104,(f=i,i=i+8|0,c[f>>2]=c[b+4896>>2],f)|0);i=f;rh(d,2032,(f=i,i=i+8|0,c[f>>2]=c[b+4900>>2],f)|0);i=f;i=e;return}function nh(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((e|0)==0){f=Fg(2,0)|0;g=0;do{a[b+(((d[f+(g<<1)+1|0]|0)<<2)+(d[f+(g<<1)|0]|0))|0]=a[c+g|0]|0;g=g+1|0;}while((g|0)<16);return}else if((e|0)==2){g=Fg(3,0)|0;f=0;do{h=g+(f<<1)|0;i=g+(f<<1)+1|0;j=c+f|0;a[b+(((d[h]|0)<<1)+((d[i]|0)<<5))|0]=a[j]|0;a[b+(((d[h]|0)<<1|1)+((d[i]|0)<<5))|0]=a[j]|0;a[b+(((d[h]|0)<<1)+((d[i]|0)<<5|16))|0]=a[j]|0;a[b+(((d[h]|0)<<1|1)+((d[i]|0)<<5|16))|0]=a[j]|0;f=f+1|0;}while((f|0)<64);return}else if((e|0)==1){f=Fg(3,0)|0;g=0;do{a[b+(((d[f+(g<<1)+1|0]|0)<<3)+(d[f+(g<<1)|0]|0))|0]=a[c+g|0]|0;g=g+1|0;}while((g|0)<64);return}else if((e|0)==3){e=Fg(3,0)|0;g=0;do{f=e+(g<<1)|0;j=e+(g<<1)+1|0;i=c+g|0;h=0;do{a[b+(((d[f]|0)<<2)+(((d[j]|0)<<2)+h<<5))|0]=a[i]|0;a[b+(((d[f]|0)<<2|1)+(((d[j]|0)<<2)+h<<5))|0]=a[i]|0;a[b+(((d[f]|0)<<2|2)+(((d[j]|0)<<2)+h<<5))|0]=a[i]|0;a[b+(((d[f]|0)<<2|3)+(((d[j]|0)<<2)+h<<5))|0]=a[i]|0;h=h+1|0;}while((h|0)<4);g=g+1|0;}while((g|0)<64);return}else{bc(1960,10832,609,13720)}}function oh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=a+8|0;e=a+4|0;f=c[e>>2]|0;g=c[d>>2]|0;h=f;if(!(((g-h|0)/100|0)>>>0<b>>>0)){i=b;j=f;do{if((j|0)==0){k=0}else{ys(j|0,0,100)|0;k=c[e>>2]|0}j=k+100|0;c[e>>2]=j;i=i-1|0;}while((i|0)!=0);return}i=a|0;a=c[i>>2]|0;j=(h-a|0)/100|0;h=j+b|0;if(h>>>0>42949672>>>0){gp(0)}k=(g-a|0)/100|0;if(k>>>0<21474836>>>0){a=k<<1;k=a>>>0<h>>>0?h:a;if((k|0)==0){l=0;m=0}else{n=k;o=9}}else{n=42949672;o=9}if((o|0)==9){l=gs(n*100|0)|0;m=n}n=b;b=l+(j*100|0)|0;do{if((b|0)==0){p=0}else{ys(b|0,0,100)|0;p=b}b=p+100|0;n=n-1|0;}while((n|0)!=0);n=c[i>>2]|0;p=(c[e>>2]|0)-n|0;o=l+((((p|0)/-100|0)+j|0)*100|0)|0;j=n|0;xs(o|0,j|0,p)|0;c[i>>2]=o;c[e>>2]=b;c[d>>2]=l+(m*100|0);if((n|0)==0){return}is(j);return}function ph(a){a=a|0;c[11598]=a;return}function qh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;b=i;i=i+16|0;f=b|0;if(!((c[11598]|0)>-1e4&(a[25192]^1))){i=b;return}g=(a[d]|0)==42;h=c[s>>2]|0;if(!g){Ma(2944,5,1,h|0)|0}j=f;c[j>>2]=e;c[j+4>>2]=0;Nb(h|0,d+(g&1)|0,f|0)|0;Ka(h|0)|0;i=b;return}function rh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f|0;h=(a[d]|0)==42;j=c[s>>2]|0;if(!h){Ma(10600,6,1,j|0)|0}k=g;c[k>>2]=e;c[k+4>>2]=0;Nb(b|0,d+(h&1)|0,g|0)|0;Ka(j|0)|0;i=f;return}function sh(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=hd(f,4)|0;c[g>>2]=h;if((h|0)>15){i=8;return i|0}id(f,2);h=hd(f,6)|0;c[g+4>>2]=h+1;if((h|0)!=0){i=8;return i|0}h=hd(f,3)|0;j=g+8|0;c[j>>2]=h+1;if((h|0)>6){i=8;return i|0}c[g+12>>2]=hd(f,1)|0;id(f,16);th(f,g+16|0,c[j>>2]|0);h=hd(f,1)|0;k=g+452|0;c[k>>2]=h;l=c[j>>2]|0;if((h|0)==0){m=l-1|0;n=7}else{if((l|0)>0){m=0;n=7}}do{if((n|0)==7){l=m;do{c[g+456+(l*12|0)>>2]=kd(f)|0;c[g+456+(l*12|0)+4>>2]=kd(f)|0;c[g+456+(l*12|0)+8>>2]=kd(f)|0;l=l+1|0;}while((l|0)<(c[j>>2]|0));if((c[k>>2]|0)!=0){break}if((m|0)>=8){bc(2800,10592,65,13224);return 0}if((m|0)<=0){break}l=g+456+(m*12|0)|0;h=g+456+(m*12|0)+4|0;o=g+456+(m*12|0)+8|0;p=0;do{c[g+456+(p*12|0)>>2]=c[l>>2];c[g+456+(p*12|0)+4>>2]=c[h>>2];c[g+456+(p*12|0)+8>>2]=c[o>>2];p=p+1|0;}while((p|0)<(m|0))}}while(0);m=g+552|0;a[m]=hd(f,6)|0;k=kd(f)|0;j=k+1|0;n=g+556|0;c[n>>2]=j;if((j|0)<0|(k|0)>1022){we(e|0,8,0);i=8;return i|0}if((j|0)>=2){j=1;while(1){e=0;while(1){a[g+560+(j<<6)+e|0]=hd(f,1)|0;if((e|0)<(d[m]|0|0)){e=e+1|0}else{break}}if((j|0)<((c[n>>2]|0)-1|0)){j=j+1|0}else{break}}}j=(hd(f,1)|0)&255;a[g+66096|0]=j;do{if(!(j<<24>>24==0)){c[g+66100>>2]=hd(f,32)|0;c[g+66104>>2]=hd(f,32)|0;n=(hd(f,1)|0)&255;a[g+66108|0]=n;if(n<<24>>24==0){break}c[g+66112>>2]=(kd(f)|0)+1;n=kd(f)|0;c[g+66116>>2]=n;if((n|0)>1023){bc(8472,10592,102,13224);return 0}if((n|0)<=0){break}b[g+66120>>1]=kd(f)|0;i=0;return i|0}}while(0);a[g+69192|0]=hd(f,1)|0;i=0;return i|0}function th(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;c[d>>2]=hd(b,2)|0;c[d+4>>2]=hd(b,1)|0;c[d+8>>2]=hd(b,5)|0;f=0;g=(hd(b,1)|0)&255;do{a[d+12+f|0]=g;f=f+1|0;g=(hd(b,1)|0)&255}while((f|0)<32);a[d+44|0]=g;a[d+45|0]=hd(b,1)|0;a[d+46|0]=hd(b,1)|0;a[d+47|0]=hd(b,1)|0;id(b,44);c[d+48>>2]=hd(b,8)|0;g=e-1|0;f=(g|0)>0;if(f){h=0;do{a[d+52+(h*48|0)|0]=hd(b,1)|0;a[d+52+(h*48|0)+40|0]=hd(b,1)|0;h=h+1|0;}while((h|0)<(g|0))}if((e-2|0)>>>0<7>>>0){e=g;do{id(b,2);e=e+1|0;}while((e|0)<8)}if(f){i=0}else{return}do{if((a[d+52+(i*48|0)|0]|0)!=0){a[d+52+(i*48|0)+1|0]=hd(b,2)|0;a[d+52+(i*48|0)+2|0]=hd(b,1)|0;a[d+52+(i*48|0)+3|0]=hd(b,5)|0;f=0;e=(hd(b,1)|0)&255;do{a[d+52+(i*48|0)+4+f|0]=e;f=f+1|0;e=(hd(b,1)|0)&255}while((f|0)<32);a[d+52+(i*48|0)+36|0]=e;a[d+52+(i*48|0)+37|0]=hd(b,1)|0;a[d+52+(i*48|0)+38|0]=hd(b,1)|0;a[d+52+(i*48|0)+39|0]=hd(b,1)|0;id(b,44)}if((a[d+52+(i*48|0)+40|0]|0)!=0){c[d+52+(i*48|0)+44>>2]=hd(b,8)|0}i=i+1|0;}while((i|0)<(g|0));return}function uh(b,f){b=b|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;if((f|0)==1){h=s}else if((f|0)==2){h=r}else{i=g;return}f=c[h>>2]|0;rh(f,6032,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h;rh(f,3792,(h=i,i=i+8|0,c[h>>2]=c[b>>2],h)|0);i=h;rh(f,2408,(h=i,i=i+8|0,c[h>>2]=c[b+4>>2],h)|0);i=h;j=b+8|0;rh(f,1512,(h=i,i=i+8|0,c[h>>2]=c[j>>2],h)|0);i=h;rh(f,1056,(h=i,i=i+8|0,c[h>>2]=c[b+12>>2],h)|0);i=h;vh(b+16|0,c[j>>2]|0,f);k=b+452|0;rh(f,688,(h=i,i=i+8|0,c[h>>2]=c[k>>2],h)|0);i=h;do{if((c[k>>2]|0)==0){rh(f,11352,(h=i,i=i+8|0,c[h>>2]=c[b+456>>2],h)|0);i=h;rh(f,10976,(h=i,i=i+8|0,c[h>>2]=c[b+460>>2],h)|0);i=h;rh(f,10744,(h=i,i=i+8|0,c[h>>2]=c[b+464>>2],h)|0);i=h}else{if((c[j>>2]|0)>0){l=0}else{break}do{m=c[b+456+(l*12|0)>>2]|0;rh(f,344,(h=i,i=i+16|0,c[h>>2]=l,c[h+8>>2]=m,h)|0);i=h;rh(f,12296,(h=i,i=i+8|0,c[h>>2]=c[b+456+(l*12|0)+4>>2],h)|0);i=h;rh(f,11720,(h=i,i=i+8|0,c[h>>2]=c[b+456+(l*12|0)+8>>2],h)|0);i=h;l=l+1|0;}while((l|0)<(c[j>>2]|0))}}while(0);j=b+552|0;rh(f,10424,(h=i,i=i+8|0,c[h>>2]=d[j]|0,h)|0);i=h;l=b+556|0;rh(f,10216,(h=i,i=i+8|0,c[h>>2]=c[l>>2],h)|0);i=h;if((c[l>>2]|0)>=2){k=1;while(1){m=0;while(1){n=a[b+560+(k<<6)+m|0]|0;rh(f,9960,(h=i,i=i+24|0,c[h>>2]=k,c[h+8>>2]=m,c[h+16>>2]=n,h)|0);i=h;if((m|0)<(d[j]|0)){m=m+1|0}else{break}}if((k|0)<((c[l>>2]|0)-1|0)){k=k+1|0}else{break}}}k=b+66096|0;rh(f,9760,(h=i,i=i+8|0,c[h>>2]=a[k]|0,h)|0);i=h;do{if((a[k]|0)!=0){rh(f,9560,(h=i,i=i+8|0,c[h>>2]=c[b+66100>>2],h)|0);i=h;rh(f,9392,(h=i,i=i+8|0,c[h>>2]=c[b+66104>>2],h)|0);i=h;l=b+66108|0;rh(f,9152,(h=i,i=i+8|0,c[h>>2]=a[l]|0,h)|0);i=h;if((a[l]|0)==0){break}rh(f,8920,(h=i,i=i+8|0,c[h>>2]=c[b+66112>>2],h)|0);i=h;l=b+66116|0;rh(f,8728,(h=i,i=i+8|0,c[h>>2]=c[l>>2],h)|0);i=h;if((c[l>>2]|0)<=0){break}l=e[b+66120>>1]|0;rh(f,8528,(h=i,i=i+16|0,c[h>>2]=0,c[h+8>>2]=l,h)|0);i=h;i=g;return}}while(0);rh(f,8056,(h=i,i=i+8|0,c[h>>2]=a[b+69192|0]|0,h)|0);i=h;i=g;return}function vh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;rh(e,7800,(g=i,i=i+8|0,c[g>>2]=c[b>>2],g)|0);i=g;rh(e,7608,(g=i,i=i+8|0,c[g>>2]=c[b+4>>2],g)|0);i=g;rh(e,7456,(g=i,i=i+8|0,c[g>>2]=c[b+8>>2],g)|0);i=g;rh(e,7248,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;h=0;do{if((h|0)!=0){rh(e,6992,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}rh(e,6744,(g=i,i=i+8|0,c[g>>2]=a[b+12+h|0]|0,g)|0);i=g;h=h+1|0;}while((h|0)<32);rh(e,6528,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;rh(e,6216,(g=i,i=i+8|0,c[g>>2]=c[b+48>>2],g)|0);i=g;h=d-1|0;if((h|0)>0){j=0}else{i=f;return}do{rh(e,5832,(g=i,i=i+8|0,c[g>>2]=j,g)|0);i=g;if((a[b+52+(j*48|0)|0]|0)!=0){rh(e,5624,(g=i,i=i+8|0,c[g>>2]=a[b+52+(j*48|0)+1|0]|0,g)|0);i=g;rh(e,5352,(g=i,i=i+8|0,c[g>>2]=a[b+52+(j*48|0)+2|0]|0,g)|0);i=g;rh(e,5152,(g=i,i=i+8|0,c[g>>2]=a[b+52+(j*48|0)+3|0]|0,g)|0);i=g;rh(e,4904,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;d=0;do{if((d|0)!=0){rh(e,4672,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}rh(e,4480,(g=i,i=i+8|0,c[g>>2]=a[b+52+(j*48|0)+4+d|0]|0,g)|0);i=g;d=d+1|0;}while((d|0)<32);rh(e,4256,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;rh(e,4072,(g=i,i=i+8|0,c[g>>2]=a[b+52+(j*48|0)+36|0]|0,g)|0);i=g;rh(e,3856,(g=i,i=i+8|0,c[g>>2]=a[b+52+(j*48|0)+37|0]|0,g)|0);i=g;rh(e,3656,(g=i,i=i+8|0,c[g>>2]=a[b+52+(j*48|0)+38|0]|0,g)|0);i=g;rh(e,3488,(g=i,i=i+8|0,c[g>>2]=a[b+52+(j*48|0)+39|0]|0,g)|0);i=g}if((a[b+52+(j*48|0)+40|0]|0)!=0){rh(e,3376,(g=i,i=i+8|0,c[g>>2]=c[b+52+(j*48|0)+44>>2],g)|0);i=g}j=j+1|0;}while((j|0)<(h|0));i=f;return}function wh(e,f,g,h,j,k,l,m,n,o,p,q){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;r=i;i=i+14768|0;s=r|0;t=r+9088|0;u=g&3;v=h&3;w=(g>>2)+j|0;j=(h>>2)+k|0;k=14-(c[f+74176>>2]|0)|0;x=c[f+69752>>2]|0;y=c[f+69756>>2]|0;if(((h|g)&3|0)==0){do{if((j|w|0)>-1){if((w+p|0)>(x|0)){break}if((j+q|0)>(y|0)){break}g=n+((ga(j,o)|0)+w)|0;zc[c[e+236>>2]&127](l,m,g,o,p,q,s|0);z=9088;A=0;i=r;return}}while(0);if((q|0)<=0){z=9088;A=0;i=r;return}g=y-1|0;h=x-1|0;if((p|0)>0){B=0}else{z=9088;A=0;i=r;return}do{f=B+j|0;C=ga(B,m)|0;D=(f|0)>(g|0)?g:f;if((f|0)<0){f=0;do{E=f+w|0;if((E|0)<0){F=0}else{F=(E|0)>(h|0)?h:E}b[l+(f+C<<1)>>1]=(d[n+F|0]|0)<<k;f=f+1|0;}while((f|0)<(p|0))}else{f=0;do{E=f+w|0;if((E|0)<0){G=0}else{G=(E|0)>(h|0)?h:E}b[l+(f+C<<1)>>1]=(d[n+((ga(D,o)|0)+G)|0]|0)<<k;f=f+1|0;}while((f|0)<(p|0))}B=B+1|0;}while((B|0)<(q|0));z=9088;A=0;i=r;return}B=c[25528+(u<<2)>>2]|0;k=c[25560+(u<<2)>>2]|0;G=c[25528+(v<<2)>>2]|0;h=c[25560+(v<<2)>>2]|0;F=-B|0;do{if((w-B|0)>-1){if(!((j-G|0)>-1)){H=21;break}if((w+p+k|0)>=(x|0)){H=21;break}if((j+q+h|0)>=(y|0)){H=21;break}I=o;J=n+((ga(j,o)|0)+w)|0}else{H=21}}while(0);if((H|0)==21){H=-G|0;g=h+q|0;if((g|0)>(H|0)){h=k+p|0;k=(h|0)>(F|0);f=y-1|0;y=x-1|0;x=H;do{if(k){H=x+j|0;D=((x+G|0)*80|0)+B|0;C=(H|0)>(f|0)?f:H;if((H|0)<0){H=F;do{E=H+w|0;if((E|0)<0){K=0}else{K=(E|0)>(y|0)?y:E}a[t+(D+H)|0]=a[n+K|0]|0;H=H+1|0;}while((H|0)<(h|0))}else{H=F;do{E=H+w|0;if((E|0)<0){L=0}else{L=(E|0)>(y|0)?y:E}a[t+(D+H)|0]=a[n+((ga(C,o)|0)+L)|0]|0;H=H+1|0;}while((H|0)<(h|0))}}x=x+1|0;}while((x|0)<(g|0))}I=80;J=t+((G*80|0)+B)|0}zc[c[e+236+(u<<4)+(v<<2)>>2]&127](l,m,J,I,p,q,s|0);z=9088;A=0;i=r;return}function xh(e,f,g,h,j,k,l,m,n,o,p,q){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;r=i;i=i+14448|0;s=r|0;t=r+9088|0;u=14-(c[f+74184>>2]|0)|0;v=(c[f+69752>>2]|0)/(c[f+74196>>2]|0)|0;w=(c[f+69756>>2]|0)/(c[f+74200>>2]|0)|0;f=g&7;x=h&7;y=((j|0)/2|0)+(g>>3)|0;j=((k|0)/2|0)+(h>>3)|0;k=(x|0)==0;if(((h|g)&7|0)==0){do{if((y|0)>-1){if(!((y+p|0)<=(v|0)&(j|0)>-1)){break}if((j+q|0)>(w|0)){break}g=n+((ga(j,o)|0)+y)|0;Lc[c[e+220>>2]&15](l,m,g,o,p,q,0,0,0);z=9088;A=0;i=r;return}}while(0);if((q|0)<=0){z=9088;A=0;i=r;return}g=(p|0)>0;h=w-1|0;B=v-1|0;C=0;do{if(g){D=C+j|0;E=(D|0)<0;F=ga(C,m)|0;G=(D|0)>(h|0)?h:D;D=0;do{H=D+y|0;if((H|0)<0){I=0}else{I=(H|0)>(B|0)?B:H}b[l+(D+F<<1)>>1]=(d[n+((ga(E?0:G,o)|0)+I)|0]|0)<<u;D=D+1|0;}while((D|0)<(p|0))}C=C+1|0;}while((C|0)<(q|0));z=9088;A=0;i=r;return}do{if((y|0)>0){if(!((y+p|0)<=(v-2|0)&(j|0)>0)){J=15;break}if((j+q|0)>(w-2|0)){J=15;break}K=n+((ga(j,o)|0)+y)|0;L=o}else{J=15}}while(0);if((J|0)==15){J=q+2|0;if((J|0)>-1){C=p+2|0;u=(C|0)>-1;I=w-1|0;w=v-1|0;v=-1;do{if(u){B=v+j|0;h=(B|0)<0;g=(v*80|0)+80|0;D=(B|0)>(I|0)?I:B;B=-1;do{G=B+y|0;if((G|0)<0){M=0}else{M=(G|0)>(w|0)?w:G}B=B+1|0;a[t+(g+B)|0]=a[n+((ga(h?0:D,o)|0)+M)|0]|0;}while((B|0)<(C|0))}v=v+1|0;}while((v|0)<(J|0))}K=t+81|0;L=80}t=(f|0)!=0;if(!(k|t^1)){Lc[c[e+232>>2]&15](l,m,K,L,p,q,f,x,s|0);z=9088;A=0;i=r;return}if(t){Lc[c[e+224>>2]&15](l,m,K,L,p,q,f,x,s|0);z=9088;A=0;i=r;return}if(k){bc(2176,10408,300,13208)}Lc[c[e+228>>2]&15](l,m,K,L,p,q,0,x,s|0);z=9088;A=0;i=r;return}function yh(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;q=i;i=i+49160|0;r=q|0;s=q+16384|0;t=q+49152|0;u=k+h|0;h=l+j|0;j=a[p+2|0]|0;l=j&255;c[t>>2]=l;k=a[p+3|0]|0;v=k&255;w=t+4|0;c[w>>2]=v;x=f+74365|0;do{if((a[x]|0)==0){if(j<<24>>24==0|k<<24>>24==0){y=v;break}if((b[p+4>>1]|0)!=(b[p+8>>1]|0)){y=v;break}if((b[p+6>>1]|0)!=(b[p+10>>1]|0)){y=v;break}if((c[g+916+(a[p|0]<<2)>>2]|0)!=(c[g+980+(a[p+1|0]<<2)>>2]|0)){y=v;break}c[w>>2]=0;y=0}else{y=v}}while(0);v=e+1468668|0;w=f+78864|0;k=e|0;z=(n|0)/2|0;A=(o|0)/2|0;B=0;C=l;a:while(1){do{if((C|0)!=0){l=a[p+B|0]|0;if(l<<24>>24>15){D=10;break a}E=c[(c[v>>2]|0)+(c[g+916+(B<<6)+(l<<24>>24<<2)>>2]<<2)>>2]|0;if((c[E+92>>2]|0)==0){a[w]=3;we(k,1012,0);break}else{l=p+4+(B<<2)|0;F=p+4+(B<<2)+2|0;wh(e,f,b[l>>1]|0,b[F>>1]|0,u,h,r+(B<<13)|0,m,c[E+4>>2]|0,c[E+36>>2]|0,n,o);G=E+40|0;xh(e,f,b[l>>1]|0,b[F>>1]|0,u,h,s+(B<<13)|0,m,c[E+8>>2]|0,c[G>>2]|0,z,A);xh(e,f,b[l>>1]|0,b[F>>1]|0,u,h,s+16384+(B<<13)|0,m,c[E+12>>2]|0,c[G>>2]|0,z,A);break}}}while(0);G=B+1|0;if((G|0)>=2){break}B=G;C=c[t+(G<<2)>>2]|0}if((D|0)==10){a[w]=3;we(k,1012,0);H=32768;I=0;J=16384;K=0;i=q;return}D=c[g+20>>2]|0;if((D|0)==0){t=(y|0)==1;do{if(j<<24>>24==1){if(!t){break}if((a[f+74366|0]|0)==0){C=c[f+36>>2]|0;B=(c[f+4>>2]|0)+((ga(C,h)|0)+u)|0;v=e+204|0;zc[c[v>>2]&127](B,C,r|0,r+8192|0,m,n,o);C=f+40|0;B=c[C>>2]|0;G=(ga(B,(h|0)/2|0)|0)+((u|0)/2|0)|0;E=(c[f+12>>2]|0)+G|0;zc[c[v>>2]&127]((c[f+8>>2]|0)+G|0,B,s|0,s+8192|0,m,z,A);zc[c[v>>2]&127](E,c[C>>2]|0,s+16384|0,s+24576|0,m,z,A);H=32768;I=0;J=16384;K=0;i=q;return}else{C=a[p|0]|0;E=a[p+1|0]|0;v=(d[g+381|0]|0)+6|0;B=b[g+542+(C<<2)>>1]|0;G=a[g+670+(C<<1)|0]|0;F=b[g+542+(C<<2)+2>>1]|0;l=a[g+670+(C<<1)+1|0]|0;L=b[g+606+(E<<2)>>1]|0;M=a[g+702+(E<<1)|0]|0;N=b[g+606+(E<<2)+2>>1]|0;O=a[g+702+(E<<1)+1|0]|0;P=c[f+36>>2]|0;Q=(c[f+4>>2]|0)+((ga(P,h)|0)+u)|0;R=e+216|0;Cc[c[R>>2]&3](Q,P,r|0,r+8192|0,m,n,o,b[g+446+(C<<1)>>1]|0,a[g+510+C|0]|0,b[g+478+(E<<1)>>1]|0,a[g+526+E|0]|0,(d[g+380|0]|0)+6|0);E=f+40|0;C=c[E>>2]|0;P=(ga(C,(h|0)/2|0)|0)+((u|0)/2|0)|0;Q=(c[f+12>>2]|0)+P|0;Cc[c[R>>2]&3]((c[f+8>>2]|0)+P|0,C,s|0,s+8192|0,m,z,A,B,G,L,M,v);Cc[c[R>>2]&3](Q,c[E>>2]|0,s+16384|0,s+24576|0,m,z,A,F,l,N,O,v);H=32768;I=0;J=16384;K=0;i=q;return}}else{if(t){break}we(k,1011,0);a[w]=3;H=32768;I=0;J=16384;K=0;i=q;return}}while(0);t=j<<24>>24==0|0;if((a[f+74366|0]|0)==0){v=e+208|0;O=c[f+36>>2]|0;N=(c[f+4>>2]|0)+((ga(O,h)|0)+u)|0;Nc[c[v>>2]&63](N,O,r+(t<<13)|0,m,n,o);O=(u|0)/2|0;N=(h|0)/2|0;l=f+40|0;F=c[l>>2]|0;E=(c[f+8>>2]|0)+((ga(F,N)|0)+O)|0;Nc[c[v>>2]&63](E,F,s+(t<<13)|0,m,z,A);F=c[l>>2]|0;l=(c[f+12>>2]|0)+((ga(F,N)|0)+O)|0;Nc[c[v>>2]&63](l,F,s+16384+(t<<13)|0,m,z,A);H=32768;I=0;J=16384;K=0;i=q;return}else{F=a[p+t|0]|0;l=(d[g+381|0]|0)+6|0;v=b[g+542+(t<<6)+(F<<2)>>1]|0;O=a[g+670+(t<<5)+(F<<1)|0]|0;N=b[g+542+(t<<6)+(F<<2)+2>>1]|0;E=a[g+670+(t<<5)+(F<<1)+1|0]|0;Q=e+212|0;R=c[f+36>>2]|0;M=(c[f+4>>2]|0)+((ga(R,h)|0)+u)|0;Lc[c[Q>>2]&15](M,R,r+(t<<13)|0,m,n,o,b[g+446+(t<<5)+(F<<1)>>1]|0,a[g+510+(t<<4)+F|0]|0,(d[g+380|0]|0)+6|0);F=(u|0)/2|0;R=(h|0)/2|0;M=f+40|0;L=c[M>>2]|0;G=(c[f+8>>2]|0)+((ga(L,R)|0)+F)|0;Lc[c[Q>>2]&15](G,L,s+(t<<13)|0,m,z,A,v,O,l);O=c[M>>2]|0;M=(c[f+12>>2]|0)+((ga(O,R)|0)+F)|0;Lc[c[Q>>2]&15](M,O,s+16384+(t<<13)|0,m,z,A,N,E,l);H=32768;I=0;J=16384;K=0;i=q;return}}else if((D|0)==1){D=j<<24>>24==1&(y|0)==0;if((a[x]|0)==0){if(D){x=e+208|0;y=c[f+36>>2]|0;j=(c[f+4>>2]|0)+((ga(y,h)|0)+u)|0;Nc[c[x>>2]&63](j,y,r|0,m,n,o);y=(u|0)/2|0;j=(h|0)/2|0;l=f+40|0;E=c[l>>2]|0;N=(c[f+8>>2]|0)+((ga(E,j)|0)+y)|0;Nc[c[x>>2]&63](N,E,s|0,m,z,A);E=c[l>>2]|0;l=(c[f+12>>2]|0)+((ga(E,j)|0)+y)|0;Nc[c[x>>2]&63](l,E,s+16384|0,m,z,A);H=32768;I=0;J=16384;K=0;i=q;return}else{we(k,1011,0);a[w]=3;H=32768;I=0;J=16384;K=0;i=q;return}}else{if(D){D=a[p|0]|0;p=(d[g+381|0]|0)+6|0;E=b[g+542+(D<<2)>>1]|0;l=a[g+670+(D<<1)|0]|0;x=b[g+542+(D<<2)+2>>1]|0;y=a[g+670+(D<<1)+1|0]|0;j=e+212|0;e=c[f+36>>2]|0;N=(c[f+4>>2]|0)+((ga(e,h)|0)+u)|0;Lc[c[j>>2]&15](N,e,r|0,m,n,o,b[g+446+(D<<1)>>1]|0,a[g+510+D|0]|0,(d[g+380|0]|0)+6|0);g=(u|0)/2|0;u=(h|0)/2|0;h=f+40|0;D=c[h>>2]|0;o=(c[f+8>>2]|0)+((ga(D,u)|0)+g)|0;Lc[c[j>>2]&15](o,D,s|0,m,z,A,E,l,p);l=c[h>>2]|0;h=(c[f+12>>2]|0)+((ga(l,u)|0)+g)|0;Lc[c[j>>2]&15](h,l,s+16384|0,m,z,A,x,y,p);H=32768;I=0;J=16384;K=0;i=q;return}else{we(k,1011,0);a[w]=3;H=32768;I=0;J=16384;K=0;i=q;return}}}else{bc(8312,10408,452,13424)}}



function cs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[6504]|0;if(g>>>0<j>>>0){ec();return 0}k=e&3;if(!((k|0)!=1&g>>>0<h>>>0)){ec();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){ec();return 0}if((k|0)==0){if(b>>>0<256>>>0){n=0;return n|0}do{if(!(f>>>0<(b+4|0)>>>0)){if((f-b|0)>>>0>c[6426]<<1>>>0){break}else{n=a}return n|0}}while(0);n=0;return n|0}if(!(f>>>0<b>>>0)){k=f-b|0;if(!(k>>>0>15>>>0)){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;fs(g+b|0,k);n=a;return n|0}if((i|0)==(c[6506]|0)){k=(c[6503]|0)+f|0;if(!(k>>>0>b>>>0)){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[6506]=g+b;c[6503]=l;n=a;return n|0}if((i|0)==(c[6505]|0)){l=(c[6502]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15>>>0){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;e=g+(l+4)|0;c[e>>2]=c[e>>2]|1;p=0;q=0}c[6502]=q;c[6505]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;e=m>>>3;a:do{if(m>>>0<256>>>0){l=c[g+(f+8)>>2]|0;k=c[g+(f+12)>>2]|0;o=26040+(e<<1<<2)|0;do{if((l|0)!=(o|0)){if(l>>>0<j>>>0){ec();return 0}if((c[l+12>>2]|0)==(i|0)){break}ec();return 0}}while(0);if((k|0)==(l|0)){c[6500]=c[6500]&~(1<<e);break}do{if((k|0)==(o|0)){r=k+8|0}else{if(k>>>0<j>>>0){ec();return 0}s=k+8|0;if((c[s>>2]|0)==(i|0)){r=s;break}ec();return 0}}while(0);c[l+12>>2]=k;c[r>>2]=l}else{o=h;s=c[g+(f+24)>>2]|0;t=c[g+(f+12)>>2]|0;do{if((t|0)==(o|0)){u=g+(f+20)|0;v=c[u>>2]|0;if((v|0)==0){w=g+(f+16)|0;x=c[w>>2]|0;if((x|0)==0){y=0;break}else{z=x;A=w}}else{z=v;A=u}while(1){u=z+20|0;v=c[u>>2]|0;if((v|0)!=0){z=v;A=u;continue}u=z+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{z=v;A=u}}if(A>>>0<j>>>0){ec();return 0}else{c[A>>2]=0;y=z;break}}else{u=c[g+(f+8)>>2]|0;if(u>>>0<j>>>0){ec();return 0}v=u+12|0;if((c[v>>2]|0)!=(o|0)){ec();return 0}w=t+8|0;if((c[w>>2]|0)==(o|0)){c[v>>2]=t;c[w>>2]=u;y=t;break}else{ec();return 0}}}while(0);if((s|0)==0){break}t=c[g+(f+28)>>2]|0;l=26304+(t<<2)|0;do{if((o|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[6501]=c[6501]&~(1<<t);break a}else{if(s>>>0<(c[6504]|0)>>>0){ec();return 0}k=s+16|0;if((c[k>>2]|0)==(o|0)){c[k>>2]=y}else{c[s+20>>2]=y}if((y|0)==0){break a}}}while(0);if(y>>>0<(c[6504]|0)>>>0){ec();return 0}c[y+24>>2]=s;o=c[g+(f+16)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[y+16>>2]=o;c[o+24>>2]=y;break}}}while(0);o=c[g+(f+20)>>2]|0;if((o|0)==0){break}if(o>>>0<(c[6504]|0)>>>0){ec();return 0}else{c[y+20>>2]=o;c[o+24>>2]=y;break}}}while(0);if(q>>>0<16>>>0){c[d>>2]=p|c[d>>2]&1|2;y=g+(p|4)|0;c[y>>2]=c[y>>2]|1;n=a;return n|0}else{c[d>>2]=c[d>>2]&1|b|2;c[g+(b+4)>>2]=q|3;d=g+(p|4)|0;c[d>>2]=c[d>>2]|1;fs(g+b|0,q);n=a;return n|0}return 0}function ds(a,b){a=a|0;b=b|0;var c=0;if(a>>>0<9>>>0){c=$r(b)|0;return c|0}else{c=es(a,b)|0;return c|0}return 0}function es(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a>>>0<16>>>0?16:a;if((d-1&d|0)==0){e=d}else{a=16;while(1){if(a>>>0<d>>>0){a=a<<1}else{e=a;break}}}if(!((-64-e|0)>>>0>b>>>0)){c[(Sb()|0)>>2]=12;f=0;return f|0}if(b>>>0<11>>>0){g=16}else{g=b+11&-8}b=$r(e+12+g|0)|0;if((b|0)==0){f=0;return f|0}a=b-8|0;d=a;h=e-1|0;do{if((b&h|0)==0){i=d}else{j=b+h&-e;k=j-8|0;l=a;if((k-l|0)>>>0>15>>>0){m=k}else{m=j+(e-8)|0}j=m;k=m-l|0;l=b-4|0;n=c[l>>2]|0;o=(n&-8)-k|0;if((n&3|0)==0){c[m>>2]=(c[a>>2]|0)+k;c[m+4>>2]=o;i=j;break}else{n=m+4|0;c[n>>2]=o|c[n>>2]&1|2;n=m+(o+4)|0;c[n>>2]=c[n>>2]|1;c[l>>2]=k|c[l>>2]&1|2;l=b+(k-4)|0;c[l>>2]=c[l>>2]|1;fs(d,k);i=j;break}}}while(0);d=i+4|0;b=c[d>>2]|0;do{if((b&3|0)!=0){m=b&-8;if(!(m>>>0>(g+16|0)>>>0)){break}a=m-g|0;e=i;c[d>>2]=g|b&1|2;c[e+(g|4)>>2]=a|3;h=e+(m|4)|0;c[h>>2]=c[h>>2]|1;fs(e+g|0,a)}}while(0);f=i+8|0;return f|0}function fs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;a:do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[6504]|0;if(i>>>0<l>>>0){ec()}if((j|0)==(c[6505]|0)){m=d+(b+4)|0;if((c[m>>2]&3|0)!=3){n=j;o=k;break}c[6502]=k;c[m>>2]=c[m>>2]&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}m=h>>>3;if(h>>>0<256>>>0){p=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=26040+(m<<1<<2)|0;do{if((p|0)!=(r|0)){if(p>>>0<l>>>0){ec()}if((c[p+12>>2]|0)==(j|0)){break}ec()}}while(0);if((q|0)==(p|0)){c[6500]=c[6500]&~(1<<m);n=j;o=k;break}do{if((q|0)==(r|0)){s=q+8|0}else{if(q>>>0<l>>>0){ec()}t=q+8|0;if((c[t>>2]|0)==(j|0)){s=t;break}ec()}}while(0);c[p+12>>2]=q;c[s>>2]=p;n=j;o=k;break}r=i;m=c[d+(24-h)>>2]|0;t=c[d+(12-h)>>2]|0;do{if((t|0)==(r|0)){u=16-h|0;v=d+(u+4)|0;w=c[v>>2]|0;if((w|0)==0){x=d+u|0;u=c[x>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=x}}else{z=w;A=v}while(1){v=z+20|0;w=c[v>>2]|0;if((w|0)!=0){z=w;A=v;continue}v=z+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{z=w;A=v}}if(A>>>0<l>>>0){ec()}else{c[A>>2]=0;y=z;break}}else{v=c[d+(8-h)>>2]|0;if(v>>>0<l>>>0){ec()}w=v+12|0;if((c[w>>2]|0)!=(r|0)){ec()}x=t+8|0;if((c[x>>2]|0)==(r|0)){c[w>>2]=t;c[x>>2]=v;y=t;break}else{ec()}}}while(0);if((m|0)==0){n=j;o=k;break}t=c[d+(28-h)>>2]|0;l=26304+(t<<2)|0;do{if((r|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[6501]=c[6501]&~(1<<t);n=j;o=k;break a}else{if(m>>>0<(c[6504]|0)>>>0){ec()}i=m+16|0;if((c[i>>2]|0)==(r|0)){c[i>>2]=y}else{c[m+20>>2]=y}if((y|0)==0){n=j;o=k;break a}}}while(0);if(y>>>0<(c[6504]|0)>>>0){ec()}c[y+24>>2]=m;r=16-h|0;t=c[d+r>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[6504]|0)>>>0){ec()}else{c[y+16>>2]=t;c[t+24>>2]=y;break}}}while(0);t=c[d+(r+4)>>2]|0;if((t|0)==0){n=j;o=k;break}if(t>>>0<(c[6504]|0)>>>0){ec()}else{c[y+20>>2]=t;c[t+24>>2]=y;n=j;o=k;break}}else{n=a;o=b}}while(0);a=c[6504]|0;if(e>>>0<a>>>0){ec()}y=d+(b+4)|0;z=c[y>>2]|0;do{if((z&2|0)==0){if((f|0)==(c[6506]|0)){A=(c[6503]|0)+o|0;c[6503]=A;c[6506]=n;c[n+4>>2]=A|1;if((n|0)!=(c[6505]|0)){return}c[6505]=0;c[6502]=0;return}if((f|0)==(c[6505]|0)){A=(c[6502]|0)+o|0;c[6502]=A;c[6505]=n;c[n+4>>2]=A|1;c[n+A>>2]=A;return}A=(z&-8)+o|0;s=z>>>3;b:do{if(z>>>0<256>>>0){g=c[d+(b+8)>>2]|0;t=c[d+(b+12)>>2]|0;h=26040+(s<<1<<2)|0;do{if((g|0)!=(h|0)){if(g>>>0<a>>>0){ec()}if((c[g+12>>2]|0)==(f|0)){break}ec()}}while(0);if((t|0)==(g|0)){c[6500]=c[6500]&~(1<<s);break}do{if((t|0)==(h|0)){B=t+8|0}else{if(t>>>0<a>>>0){ec()}m=t+8|0;if((c[m>>2]|0)==(f|0)){B=m;break}ec()}}while(0);c[g+12>>2]=t;c[B>>2]=g}else{h=e;m=c[d+(b+24)>>2]|0;l=c[d+(b+12)>>2]|0;do{if((l|0)==(h|0)){i=d+(b+20)|0;p=c[i>>2]|0;if((p|0)==0){q=d+(b+16)|0;v=c[q>>2]|0;if((v|0)==0){C=0;break}else{D=v;E=q}}else{D=p;E=i}while(1){i=D+20|0;p=c[i>>2]|0;if((p|0)!=0){D=p;E=i;continue}i=D+16|0;p=c[i>>2]|0;if((p|0)==0){break}else{D=p;E=i}}if(E>>>0<a>>>0){ec()}else{c[E>>2]=0;C=D;break}}else{i=c[d+(b+8)>>2]|0;if(i>>>0<a>>>0){ec()}p=i+12|0;if((c[p>>2]|0)!=(h|0)){ec()}q=l+8|0;if((c[q>>2]|0)==(h|0)){c[p>>2]=l;c[q>>2]=i;C=l;break}else{ec()}}}while(0);if((m|0)==0){break}l=c[d+(b+28)>>2]|0;g=26304+(l<<2)|0;do{if((h|0)==(c[g>>2]|0)){c[g>>2]=C;if((C|0)!=0){break}c[6501]=c[6501]&~(1<<l);break b}else{if(m>>>0<(c[6504]|0)>>>0){ec()}t=m+16|0;if((c[t>>2]|0)==(h|0)){c[t>>2]=C}else{c[m+20>>2]=C}if((C|0)==0){break b}}}while(0);if(C>>>0<(c[6504]|0)>>>0){ec()}c[C+24>>2]=m;h=c[d+(b+16)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[6504]|0)>>>0){ec()}else{c[C+16>>2]=h;c[h+24>>2]=C;break}}}while(0);h=c[d+(b+20)>>2]|0;if((h|0)==0){break}if(h>>>0<(c[6504]|0)>>>0){ec()}else{c[C+20>>2]=h;c[h+24>>2]=C;break}}}while(0);c[n+4>>2]=A|1;c[n+A>>2]=A;if((n|0)!=(c[6505]|0)){F=A;break}c[6502]=A;return}else{c[y>>2]=z&-2;c[n+4>>2]=o|1;c[n+o>>2]=o;F=o}}while(0);o=F>>>3;if(F>>>0<256>>>0){z=o<<1;y=26040+(z<<2)|0;C=c[6500]|0;b=1<<o;do{if((C&b|0)==0){c[6500]=C|b;G=y;H=26040+(z+2<<2)|0}else{o=26040+(z+2<<2)|0;d=c[o>>2]|0;if(!(d>>>0<(c[6504]|0)>>>0)){G=d;H=o;break}ec()}}while(0);c[H>>2]=n;c[G+12>>2]=n;c[n+8>>2]=G;c[n+12>>2]=y;return}y=n;G=F>>>8;do{if((G|0)==0){I=0}else{if(F>>>0>16777215>>>0){I=31;break}H=(G+1048320|0)>>>16&8;z=G<<H;b=(z+520192|0)>>>16&4;C=z<<b;z=(C+245760|0)>>>16&2;o=14-(b|H|z)+(C<<z>>>15)|0;I=F>>>((o+7|0)>>>0)&1|o<<1}}while(0);G=26304+(I<<2)|0;c[n+28>>2]=I;c[n+20>>2]=0;c[n+16>>2]=0;o=c[6501]|0;z=1<<I;if((o&z|0)==0){c[6501]=o|z;c[G>>2]=y;c[n+24>>2]=G;c[n+12>>2]=n;c[n+8>>2]=n;return}z=c[G>>2]|0;if((I|0)==31){J=0}else{J=25-(I>>>1)|0}c:do{if((c[z+4>>2]&-8|0)==(F|0)){K=z}else{I=z;G=F<<J;while(1){L=I+16+(G>>>31<<2)|0;o=c[L>>2]|0;if((o|0)==0){break}if((c[o+4>>2]&-8|0)==(F|0)){K=o;break c}else{I=o;G=G<<1}}if(L>>>0<(c[6504]|0)>>>0){ec()}c[L>>2]=y;c[n+24>>2]=I;c[n+12>>2]=n;c[n+8>>2]=n;return}}while(0);L=K+8|0;F=c[L>>2]|0;J=c[6504]|0;if(K>>>0<J>>>0){ec()}if(F>>>0<J>>>0){ec()}c[F+12>>2]=y;c[L>>2]=y;c[n+8>>2]=F;c[n+12>>2]=K;c[n+24>>2]=0;return}function gs(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){d=$r(b)|0;if((d|0)!=0){e=10;break}a=(I=c[9556]|0,c[9556]=I+0,I);if((a|0)==0){break}Jc[a&1]()}if((e|0)==10){return d|0}d=mc(4)|0;c[d>>2]=14376;Db(d|0,20312,40);return 0}function hs(a){a=a|0;return gs(a)|0}function is(a){a=a|0;if((a|0)==0){return}as(a);return}function js(a){a=a|0;is(a);return}function ks(a){a=a|0;is(a);return}function ls(a){a=a|0;return}function ms(a){a=a|0;return 6360}function ns(){var a=0;a=mc(4)|0;c[a>>2]=14376;Db(a|0,20312,40)}function os(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0,T=0.0,U=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0.0,ja=0.0,ka=0,la=0,ma=0.0,na=0.0,oa=0,pa=0.0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0.0,za=0,Aa=0.0,Ba=0,Ca=0.0,Da=0,Ea=0,Fa=0,Ga=0.0,Ha=0,Ia=0.0,Ja=0.0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0.0,Bc=0,Cc=0,Dc=0.0,Ec=0.0,Fc=0.0,Gc=0.0,Hc=0.0,Ic=0.0,Jc=0.0,Kc=0,Lc=0,Mc=0.0,Nc=0,Oc=0;g=i;i=i+512|0;h=g|0;if((e|0)==2){j=-1074;k=53}else if((e|0)==1){j=-1074;k=53}else if((e|0)==0){j=-149;k=24}else{l=0.0;i=g;return+l}e=b+4|0;m=b+100|0;do{n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;o=d[n]|0}else{o=rs(b)|0}}while((Qa(o|0)|0)!=0);do{if((o|0)==45|(o|0)==43){n=1-(((o|0)==45)<<1)|0;p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;q=d[p]|0;r=n;break}else{q=rs(b)|0;r=n;break}}else{q=o;r=1}}while(0);o=0;n=q;while(1){if((n|32|0)!=(a[1632+o|0]|0)){s=o;t=n;break}do{if(o>>>0<7>>>0){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;u=d[q]|0;break}else{u=rs(b)|0;break}}else{u=n}}while(0);q=o+1|0;if(q>>>0<8>>>0){o=q;n=u}else{s=q;t=u;break}}do{if((s|0)==3){x=23}else if((s|0)!=8){u=(f|0)==0;if(!(s>>>0<4>>>0|u)){if((s|0)==8){break}else{x=23;break}}a:do{if((s|0)==0){n=0;o=t;while(1){if((o|32|0)!=(a[10032+n|0]|0)){y=o;z=n;break a}do{if(n>>>0<2>>>0){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;A=d[q]|0;break}else{A=rs(b)|0;break}}else{A=o}}while(0);q=n+1|0;if(q>>>0<3>>>0){n=q;o=A}else{y=A;z=q;break}}}else{y=t;z=s}}while(0);if((z|0)==3){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;B=d[o]|0}else{B=rs(b)|0}if((B|0)==40){C=1}else{if((c[m>>2]|0)==0){l=+v;i=g;return+l}c[e>>2]=(c[e>>2]|0)-1;l=+v;i=g;return+l}while(1){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;D=d[o]|0}else{D=rs(b)|0}if(!((D-48|0)>>>0<10>>>0|(D-65|0)>>>0<26>>>0)){if(!((D-97|0)>>>0<26>>>0|(D|0)==95)){break}}C=C+1|0}if((D|0)==41){l=+v;i=g;return+l}o=(c[m>>2]|0)==0;if(!o){c[e>>2]=(c[e>>2]|0)-1}if(u){c[(Sb()|0)>>2]=22;qs(b,0);l=0.0;i=g;return+l}if((C|0)==0|o){l=+v;i=g;return+l}else{E=C}while(1){o=E-1|0;c[e>>2]=(c[e>>2]|0)-1;if((o|0)==0){l=+v;break}else{E=o}}i=g;return+l}else if((z|0)==0){do{if((y|0)==48){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;F=d[o]|0}else{F=rs(b)|0}if((F|32|0)!=120){if((c[m>>2]|0)==0){G=48;break}c[e>>2]=(c[e>>2]|0)-1;G=48;break}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;H=d[o]|0;I=0}else{H=rs(b)|0;I=0}while(1){if((H|0)==46){x=70;break}else if((H|0)!=48){J=H;L=0;M=0;N=0;O=0;P=I;Q=0;R=0;S=1.0;T=0.0;U=0;break}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;H=d[o]|0;I=1;continue}else{H=rs(b)|0;I=1;continue}}b:do{if((x|0)==70){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;W=d[o]|0}else{W=rs(b)|0}if((W|0)==48){X=-1;Y=-1}else{J=W;L=0;M=0;N=0;O=0;P=I;Q=1;R=0;S=1.0;T=0.0;U=0;break}while(1){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;Z=d[o]|0}else{Z=rs(b)|0}if((Z|0)!=48){J=Z;L=0;M=0;N=X;O=Y;P=1;Q=1;R=0;S=1.0;T=0.0;U=0;break b}o=Bs(Y,X,-1,-1)|0;X=K;Y=o}}}while(0);c:while(1){o=J-48|0;do{if(o>>>0<10>>>0){_=o;x=84}else{n=J|32;q=(J|0)==46;if(!((n-97|0)>>>0<6>>>0|q)){$=J;break c}if(q){if((Q|0)==0){aa=L;ba=M;ca=L;da=M;ea=P;fa=1;ha=R;ia=S;ja=T;ka=U;break}else{$=46;break c}}else{_=(J|0)>57?n-87|0:o;x=84;break}}}while(0);if((x|0)==84){x=0;o=0;do{if((L|0)<(o|0)|(L|0)==(o|0)&M>>>0<8>>>0){la=R;ma=S;na=T;oa=_+(U<<4)|0}else{n=0;if((L|0)<(n|0)|(L|0)==(n|0)&M>>>0<14>>>0){pa=S*.0625;la=R;ma=pa;na=T+pa*+(_|0);oa=U;break}if(!((_|0)!=0&(R|0)==0)){la=R;ma=S;na=T;oa=U;break}la=1;ma=S;na=T+S*.5;oa=U}}while(0);o=Bs(M,L,1,0)|0;aa=K;ba=o;ca=N;da=O;ea=1;fa=Q;ha=la;ia=ma;ja=na;ka=oa}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;J=d[o]|0;L=aa;M=ba;N=ca;O=da;P=ea;Q=fa;R=ha;S=ia;T=ja;U=ka;continue}else{J=rs(b)|0;L=aa;M=ba;N=ca;O=da;P=ea;Q=fa;R=ha;S=ia;T=ja;U=ka;continue}}if((P|0)==0){o=(c[m>>2]|0)==0;if(!o){c[e>>2]=(c[e>>2]|0)-1}do{if(u){qs(b,0)}else{if(o){break}n=c[e>>2]|0;c[e>>2]=n-1;if((Q|0)==0){break}c[e>>2]=n-2}}while(0);l=+(r|0)*0.0;i=g;return+l}o=(Q|0)==0;n=o?M:O;q=o?L:N;o=0;if((L|0)<(o|0)|(L|0)==(o|0)&M>>>0<8>>>0){o=U;p=L;qa=M;while(1){ra=o<<4;sa=Bs(qa,p,1,0)|0;ta=K;ua=0;if((ta|0)<(ua|0)|(ta|0)==(ua|0)&sa>>>0<8>>>0){o=ra;p=ta;qa=sa}else{va=ra;break}}}else{va=U}do{if(($|32|0)==112){qa=ps(b,f)|0;p=K;if(!((qa|0)==0&(p|0)==(-2147483648|0))){wa=p;xa=qa;break}if(u){qs(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){wa=0;xa=0;break}c[e>>2]=(c[e>>2]|0)-1;wa=0;xa=0;break}}else{if((c[m>>2]|0)==0){wa=0;xa=0;break}c[e>>2]=(c[e>>2]|0)-1;wa=0;xa=0}}while(0);qa=Bs(n<<2|0>>>30,q<<2|n>>>30,-32,-1)|0;p=Bs(qa,K,xa,wa)|0;qa=K;if((va|0)==0){l=+(r|0)*0.0;i=g;return+l}o=0;if((qa|0)>(o|0)|(qa|0)==(o|0)&p>>>0>(-j|0)>>>0){c[(Sb()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}o=j-106|0;ra=(o|0)<0|0?-1:0;if((qa|0)<(ra|0)|(qa|0)==(ra|0)&p>>>0<o>>>0){c[(Sb()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((va|0)>-1){o=va;pa=T;ra=qa;sa=p;while(1){ta=o<<1;if(pa<.5){ya=pa;za=ta}else{ya=pa+-1.0;za=ta|1}Aa=pa+ya;ta=Bs(sa,ra,-1,-1)|0;ua=K;if((za|0)>-1){o=za;pa=Aa;ra=ua;sa=ta}else{Ba=za;Ca=Aa;Da=ua;Ea=ta;break}}}else{Ba=va;Ca=T;Da=qa;Ea=p}sa=0;ra=Cs(32,0,j,(j|0)<0|0?-1:0)|0;o=Bs(Ea,Da,ra,K)|0;ra=K;if((sa|0)>(ra|0)|(sa|0)==(ra|0)&k>>>0>o>>>0){ra=o;Fa=(ra|0)<0?0:ra}else{Fa=k}do{if((Fa|0)<53){pa=+(r|0);Aa=+Ab(+(+ss(1.0,84-Fa|0)),+pa);if(!((Fa|0)<32&Ca!=0.0)){Ga=Ca;Ha=Ba;Ia=Aa;Ja=pa;break}ra=Ba&1;Ga=(ra|0)==0?0.0:Ca;Ha=(ra^1)+Ba|0;Ia=Aa;Ja=pa}else{Ga=Ca;Ha=Ba;Ia=0.0;Ja=+(r|0)}}while(0);pa=Ja*Ga+(Ia+Ja*+(Ha>>>0>>>0))-Ia;if(!(pa!=0.0)){c[(Sb()|0)>>2]=34}l=+ts(pa,Ea);i=g;return+l}else{G=y}}while(0);p=j+k|0;qa=-p|0;ra=G;o=0;while(1){if((ra|0)==46){x=139;break}else if((ra|0)!=48){Ka=ra;La=0;Ma=o;Na=0;Oa=0;break}sa=c[e>>2]|0;if(sa>>>0<(c[m>>2]|0)>>>0){c[e>>2]=sa+1;ra=d[sa]|0;o=1;continue}else{ra=rs(b)|0;o=1;continue}}d:do{if((x|0)==139){ra=c[e>>2]|0;if(ra>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ra+1;Pa=d[ra]|0}else{Pa=rs(b)|0}if((Pa|0)==48){Ra=-1;Sa=-1}else{Ka=Pa;La=1;Ma=o;Na=0;Oa=0;break}while(1){ra=c[e>>2]|0;if(ra>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ra+1;Ta=d[ra]|0}else{Ta=rs(b)|0}if((Ta|0)!=48){Ka=Ta;La=1;Ma=1;Na=Ra;Oa=Sa;break d}ra=Bs(Sa,Ra,-1,-1)|0;Ra=K;Sa=ra}}}while(0);o=h|0;c[o>>2]=0;ra=Ka-48|0;sa=(Ka|0)==46;e:do{if(ra>>>0<10>>>0|sa){n=h+496|0;q=Na;ta=Oa;ua=0;Ua=0;Va=0;Wa=Ma;Xa=La;Ya=0;_a=0;$a=Ka;ab=ra;bb=sa;while(1){do{if(bb){if((Xa|0)==0){cb=_a;db=Ya;eb=1;fb=Wa;gb=Va;hb=ua;ib=Ua;jb=ua;kb=Ua}else{lb=q;mb=ta;nb=ua;ob=Ua;pb=Va;qb=Wa;rb=Ya;sb=_a;tb=$a;break e}}else{ub=Bs(Ua,ua,1,0)|0;vb=K;wb=($a|0)!=48;if((Ya|0)>=125){if(!wb){cb=_a;db=Ya;eb=Xa;fb=Wa;gb=Va;hb=vb;ib=ub;jb=q;kb=ta;break}c[n>>2]=c[n>>2]|1;cb=_a;db=Ya;eb=Xa;fb=Wa;gb=Va;hb=vb;ib=ub;jb=q;kb=ta;break}xb=h+(Ya<<2)|0;if((_a|0)==0){yb=ab}else{yb=$a-48+((c[xb>>2]|0)*10|0)|0}c[xb>>2]=yb;xb=_a+1|0;zb=(xb|0)==9;cb=zb?0:xb;db=(zb&1)+Ya|0;eb=Xa;fb=1;gb=wb?ub:Va;hb=vb;ib=ub;jb=q;kb=ta}}while(0);ub=c[e>>2]|0;if(ub>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ub+1;Bb=d[ub]|0}else{Bb=rs(b)|0}ub=Bb-48|0;vb=(Bb|0)==46;if(ub>>>0<10>>>0|vb){q=jb;ta=kb;ua=hb;Ua=ib;Va=gb;Wa=fb;Xa=eb;Ya=db;_a=cb;$a=Bb;ab=ub;bb=vb}else{Cb=jb;Db=kb;Eb=hb;Fb=ib;Gb=gb;Hb=fb;Ib=eb;Jb=db;Kb=cb;Lb=Bb;x=162;break}}}else{Cb=Na;Db=Oa;Eb=0;Fb=0;Gb=0;Hb=Ma;Ib=La;Jb=0;Kb=0;Lb=Ka;x=162}}while(0);if((x|0)==162){sa=(Ib|0)==0;lb=sa?Eb:Cb;mb=sa?Fb:Db;nb=Eb;ob=Fb;pb=Gb;qb=Hb;rb=Jb;sb=Kb;tb=Lb}sa=(qb|0)!=0;do{if(sa){if((tb|32|0)!=101){x=171;break}ra=ps(b,f)|0;bb=K;do{if((ra|0)==0&(bb|0)==(-2147483648|0)){if(u){qs(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){Mb=0;Nb=0;break}c[e>>2]=(c[e>>2]|0)-1;Mb=0;Nb=0;break}}else{Mb=bb;Nb=ra}}while(0);ra=Bs(Nb,Mb,mb,lb)|0;Ob=K;Pb=ra}else{x=171}}while(0);do{if((x|0)==171){if(!((tb|0)>-1)){Ob=lb;Pb=mb;break}if((c[m>>2]|0)==0){Ob=lb;Pb=mb;break}c[e>>2]=(c[e>>2]|0)-1;Ob=lb;Pb=mb}}while(0);if(!sa){c[(Sb()|0)>>2]=22;qs(b,0);l=0.0;i=g;return+l}u=c[o>>2]|0;if((u|0)==0){l=+(r|0)*0.0;i=g;return+l}ra=0;do{if((Pb|0)==(ob|0)&(Ob|0)==(nb|0)&((nb|0)<(ra|0)|(nb|0)==(ra|0)&ob>>>0<10>>>0)){if(!(k>>>0>30>>>0)){if((u>>>(k>>>0)|0)!=0){break}}l=+(r|0)*+(u>>>0>>>0);i=g;return+l}}while(0);u=(j|0)/-2|0;ra=(u|0)<0|0?-1:0;if((Ob|0)>(ra|0)|(Ob|0)==(ra|0)&Pb>>>0>u>>>0){c[(Sb()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}u=j-106|0;ra=(u|0)<0|0?-1:0;if((Ob|0)<(ra|0)|(Ob|0)==(ra|0)&Pb>>>0<u>>>0){c[(Sb()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((sb|0)==0){Qb=rb}else{if((sb|0)<9){u=h+(rb<<2)|0;ra=sb;sa=c[u>>2]|0;do{sa=sa*10|0;ra=ra+1|0;}while((ra|0)<9);c[u>>2]=sa}Qb=rb+1|0}ra=Pb;do{if((pb|0)<9){if(!((pb|0)<=(ra|0)&(ra|0)<18)){break}if((ra|0)==9){l=+(r|0)*+((c[o>>2]|0)>>>0>>>0);i=g;return+l}if((ra|0)<9){l=+(r|0)*+((c[o>>2]|0)>>>0>>>0)/+(c[216+(8-ra<<2)>>2]|0);i=g;return+l}bb=k+27+(ra*-3|0)|0;ab=c[o>>2]|0;if((bb|0)<=30){if((ab>>>(bb>>>0)|0)!=0){break}}l=+(r|0)*+(ab>>>0>>>0)*+(c[216+(ra-10<<2)>>2]|0);i=g;return+l}}while(0);o=(ra|0)%9|0;if((o|0)==0){Rb=0;Tb=Qb;Ub=0;Vb=ra}else{sa=(ra|0)>-1?o:o+9|0;o=c[216+(8-sa<<2)>>2]|0;do{if((Qb|0)==0){Wb=0;Xb=0;Yb=ra}else{u=1e9/(o|0)|0;ab=ra;bb=0;$a=0;_a=0;while(1){Ya=h+($a<<2)|0;Xa=c[Ya>>2]|0;Wa=((Xa>>>0)/(o>>>0)|0)+_a|0;c[Ya>>2]=Wa;Zb=ga((Xa>>>0)%(o>>>0)|0,u)|0;Xa=$a+1|0;if(($a|0)==(bb|0)&(Wa|0)==0){_b=Xa&127;$b=ab-9|0}else{_b=bb;$b=ab}if((Xa|0)==(Qb|0)){break}else{ab=$b;bb=_b;$a=Xa;_a=Zb}}if((Zb|0)==0){Wb=Qb;Xb=_b;Yb=$b;break}c[h+(Qb<<2)>>2]=Zb;Wb=Qb+1|0;Xb=_b;Yb=$b}}while(0);Rb=Xb;Tb=Wb;Ub=0;Vb=9-sa+Yb|0}f:while(1){o=h+(Rb<<2)|0;if((Vb|0)<18){ra=Tb;_a=Ub;while(1){$a=0;bb=ra+127|0;ab=ra;while(1){u=bb&127;Xa=h+(u<<2)|0;Wa=c[Xa>>2]|0;Ya=Bs(Wa<<29|0>>>3,0<<29|Wa>>>3,$a,0)|0;Wa=K;Va=0;if(Wa>>>0>Va>>>0|Wa>>>0==Va>>>0&Ya>>>0>1e9>>>0){Va=Ms(Ya,Wa,1e9,0)|0;Ua=Ns(Ya,Wa,1e9,0)|0;ac=Va;bc=Ua}else{ac=0;bc=Ya}c[Xa>>2]=bc;Xa=(u|0)==(Rb|0);if((u|0)!=(ab+127&127|0)|Xa){cc=ab}else{cc=(bc|0)==0?u:ab}if(Xa){break}else{$a=ac;bb=u-1|0;ab=cc}}ab=_a-29|0;if((ac|0)==0){ra=cc;_a=ab}else{dc=ab;ec=cc;fc=ac;break}}}else{if((Vb|0)==18){gc=Tb;hc=Ub}else{ic=Rb;jc=Tb;kc=Ub;lc=Vb;break}while(1){if(!((c[o>>2]|0)>>>0<9007199>>>0)){ic=Rb;jc=gc;kc=hc;lc=18;break f}_a=0;ra=gc+127|0;ab=gc;while(1){bb=ra&127;$a=h+(bb<<2)|0;u=c[$a>>2]|0;Xa=Bs(u<<29|0>>>3,0<<29|u>>>3,_a,0)|0;u=K;Ya=0;if(u>>>0>Ya>>>0|u>>>0==Ya>>>0&Xa>>>0>1e9>>>0){Ya=Ms(Xa,u,1e9,0)|0;Ua=Ns(Xa,u,1e9,0)|0;mc=Ya;nc=Ua}else{mc=0;nc=Xa}c[$a>>2]=nc;$a=(bb|0)==(Rb|0);if((bb|0)!=(ab+127&127|0)|$a){oc=ab}else{oc=(nc|0)==0?bb:ab}if($a){break}else{_a=mc;ra=bb-1|0;ab=oc}}ab=hc-29|0;if((mc|0)==0){gc=oc;hc=ab}else{dc=ab;ec=oc;fc=mc;break}}}o=Rb+127&127;if((o|0)==(ec|0)){ab=ec+127&127;ra=h+((ec+126&127)<<2)|0;c[ra>>2]=c[ra>>2]|c[h+(ab<<2)>>2];pc=ab}else{pc=ec}c[h+(o<<2)>>2]=fc;Rb=o;Tb=pc;Ub=dc;Vb=Vb+9|0}g:while(1){qc=jc+1&127;sa=h+((jc+127&127)<<2)|0;o=ic;ab=kc;ra=lc;while(1){_a=(ra|0)==18;bb=(ra|0)>27?9:1;rc=o;sc=ab;while(1){$a=0;while(1){Xa=$a+rc&127;if((Xa|0)==(jc|0)){tc=2;break}Ua=c[h+(Xa<<2)>>2]|0;Xa=c[208+($a<<2)>>2]|0;if(Ua>>>0<Xa>>>0){tc=2;break}Ya=$a+1|0;if(Ua>>>0>Xa>>>0){tc=$a;break}if((Ya|0)<2){$a=Ya}else{tc=Ya;break}}if((tc|0)==2&_a){break g}uc=bb+sc|0;if((rc|0)==(jc|0)){rc=jc;sc=uc}else{break}}_a=(1<<bb)-1|0;$a=1e9>>>(bb>>>0);vc=ra;wc=rc;Ya=rc;xc=0;do{Xa=h+(Ya<<2)|0;Ua=c[Xa>>2]|0;u=(Ua>>>(bb>>>0))+xc|0;c[Xa>>2]=u;xc=ga(Ua&_a,$a)|0;Ua=(Ya|0)==(wc|0)&(u|0)==0;Ya=Ya+1&127;vc=Ua?vc-9|0:vc;wc=Ua?Ya:wc;}while((Ya|0)!=(jc|0));if((xc|0)==0){o=wc;ab=uc;ra=vc;continue}if((qc|0)!=(wc|0)){break}c[sa>>2]=c[sa>>2]|1;o=wc;ab=uc;ra=vc}c[h+(jc<<2)>>2]=xc;ic=wc;jc=qc;kc=uc;lc=vc}ra=rc&127;if((ra|0)==(jc|0)){c[h+(qc-1<<2)>>2]=0;yc=qc}else{yc=jc}pa=+((c[h+(ra<<2)>>2]|0)>>>0>>>0);ra=rc+1&127;if((ra|0)==(yc|0)){ab=yc+1&127;c[h+(ab-1<<2)>>2]=0;zc=ab}else{zc=yc}Aa=+(r|0);Ac=Aa*(pa*1.0e9+ +((c[h+(ra<<2)>>2]|0)>>>0>>>0));ra=sc+53|0;ab=ra-j|0;if((ab|0)<(k|0)){Bc=(ab|0)<0?0:ab;Cc=1}else{Bc=k;Cc=0}if((Bc|0)<53){pa=+Ab(+(+ss(1.0,105-Bc|0)),+Ac);Dc=+Za(+Ac,+(+ss(1.0,53-Bc|0)));Ec=pa;Fc=Dc;Gc=pa+(Ac-Dc)}else{Ec=0.0;Fc=0.0;Gc=Ac}o=rc+2&127;do{if((o|0)==(zc|0)){Hc=Fc}else{sa=c[h+(o<<2)>>2]|0;do{if(sa>>>0<5e8>>>0){if((sa|0)==0){if((rc+3&127|0)==(zc|0)){Ic=Fc;break}}Ic=Aa*.25+Fc}else{if(sa>>>0>5e8>>>0){Ic=Aa*.75+Fc;break}if((rc+3&127|0)==(zc|0)){Ic=Aa*.5+Fc;break}else{Ic=Aa*.75+Fc;break}}}while(0);if((53-Bc|0)<=1){Hc=Ic;break}if(+Za(+Ic,+1.0)!=0.0){Hc=Ic;break}Hc=Ic+1.0}}while(0);Aa=Gc+Hc-Ec;do{if((ra&2147483647|0)>(-2-p|0)){if(+V(+Aa)<9007199254740992.0){Jc=Aa;Kc=Cc;Lc=sc}else{Jc=Aa*.5;Kc=(Cc|0)!=0&(Bc|0)==(ab|0)?0:Cc;Lc=sc+1|0}if((Lc+50|0)<=(qa|0)){if(!((Kc|0)!=0&Hc!=0.0)){Mc=Jc;Nc=Lc;break}}c[(Sb()|0)>>2]=34;Mc=Jc;Nc=Lc}else{Mc=Aa;Nc=sc}}while(0);l=+ts(Mc,Nc);i=g;return+l}else{if((c[m>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1}c[(Sb()|0)>>2]=22;qs(b,0);l=0.0;i=g;return+l}}}while(0);do{if((x|0)==23){b=(c[m>>2]|0)==0;if(!b){c[e>>2]=(c[e>>2]|0)-1}if(s>>>0<4>>>0|(f|0)==0|b){break}else{Oc=s}do{c[e>>2]=(c[e>>2]|0)-1;Oc=Oc-1|0;}while(Oc>>>0>3>>>0)}}while(0);l=+(r|0)*w;i=g;return+l}function ps(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=a+4|0;f=c[e>>2]|0;g=a+100|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f]|0}else{h=rs(a)|0}do{if((h|0)==45|(h|0)==43){f=(h|0)==45|0;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;j=d[i]|0}else{j=rs(a)|0}if((j-48|0)>>>0<10>>>0|(b|0)==0){k=f;l=j;break}if((c[g>>2]|0)==0){k=f;l=j;break}c[e>>2]=(c[e>>2]|0)-1;k=f;l=j}else{k=0;l=h}}while(0);if((l-48|0)>>>0>9>>>0){if((c[g>>2]|0)==0){m=-2147483648;n=0;return(K=m,n)|0}c[e>>2]=(c[e>>2]|0)-1;m=-2147483648;n=0;return(K=m,n)|0}else{o=l;p=0}while(1){q=o-48+p|0;l=c[e>>2]|0;if(l>>>0<(c[g>>2]|0)>>>0){c[e>>2]=l+1;r=d[l]|0}else{r=rs(a)|0}if(!((r-48|0)>>>0<10>>>0&(q|0)<214748364)){break}o=r;p=q*10|0}p=q;o=(q|0)<0|0?-1:0;if((r-48|0)>>>0<10>>>0){q=r;l=o;h=p;while(1){j=Ls(h,l,10,0)|0;b=K;f=Bs(q,(q|0)<0|0?-1:0,-48,-1)|0;i=Bs(f,K,j,b)|0;b=K;j=c[e>>2]|0;if(j>>>0<(c[g>>2]|0)>>>0){c[e>>2]=j+1;s=d[j]|0}else{s=rs(a)|0}j=21474836;if((s-48|0)>>>0<10>>>0&((b|0)<(j|0)|(b|0)==(j|0)&i>>>0<2061584302>>>0)){q=s;l=b;h=i}else{t=s;u=b;v=i;break}}}else{t=r;u=o;v=p}if((t-48|0)>>>0<10>>>0){do{t=c[e>>2]|0;if(t>>>0<(c[g>>2]|0)>>>0){c[e>>2]=t+1;w=d[t]|0}else{w=rs(a)|0}}while((w-48|0)>>>0<10>>>0)}if((c[g>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1}e=(k|0)!=0;k=Cs(0,0,v,u)|0;m=e?K:u;n=e?k:v;return(K=m,n)|0}function qs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a+104>>2]=b;d=c[a+8>>2]|0;e=c[a+4>>2]|0;f=d-e|0;c[a+108>>2]=f;if((b|0)!=0&(f|0)>(b|0)){c[a+100>>2]=e+b;return}else{c[a+100>>2]=d;return}}function rs(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=b+104|0;f=c[e>>2]|0;if((f|0)==0){g=3}else{if((c[b+108>>2]|0)<(f|0)){g=3}}do{if((g|0)==3){f=vs(b)|0;if((f|0)<0){break}h=c[e>>2]|0;i=c[b+8>>2]|0;do{if((h|0)==0){g=8}else{j=c[b+4>>2]|0;k=h-(c[b+108>>2]|0)-1|0;if((i-j|0)<=(k|0)){g=8;break}c[b+100>>2]=j+k}}while(0);if((g|0)==8){c[b+100>>2]=i}h=c[b+4>>2]|0;if((i|0)!=0){k=b+108|0;c[k>>2]=i+1-h+(c[k>>2]|0)}k=h-1|0;if((d[k]|0|0)==(f|0)){l=f;return l|0}a[k]=f;l=f;return l|0}}while(0);c[b+100>>2]=0;l=-1;return l|0}function ss(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0.0,g=0;do{if((b|0)>1023){d=a*8.98846567431158e+307;e=b-1023|0;if((e|0)<=1023){f=d;g=e;break}e=b-2046|0;f=d*8.98846567431158e+307;g=(e|0)>1023?1023:e}else{if(!((b|0)<-1022)){f=a;g=b;break}d=a*2.2250738585072014e-308;e=b+1022|0;if(!((e|0)<-1022)){f=d;g=e;break}e=b+2044|0;f=d*2.2250738585072014e-308;g=(e|0)<-1022?-1022:e}}while(0);return+(f*(c[k>>2]=0<<20|0>>>12,c[k+4>>2]=g+1023<<20|0>>>12,+h[k>>3]))}function ts(a,b){a=+a;b=b|0;return+(+ss(a,b))}function us(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b+74|0;e=a[d]|0;a[d]=e-1&255|e;e=b+20|0;d=b+44|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0){Gc[c[b+36>>2]&63](b,0,0)|0}c[b+16>>2]=0;c[b+28>>2]=0;c[e>>2]=0;e=b|0;f=c[e>>2]|0;if((f&20|0)==0){g=c[d>>2]|0;c[b+8>>2]=g;c[b+4>>2]=g;h=0;return h|0}if((f&4|0)==0){h=-1;return h|0}c[e>>2]=f|32;h=-1;return h|0}function vs(a){a=a|0;var b=0,e=0,f=0,g=0;b=i;i=i+8|0;e=b|0;if((c[a+8>>2]|0)==0){if((us(a)|0)==0){f=3}else{g=-1}}else{f=3}do{if((f|0)==3){if((Gc[c[a+32>>2]&63](a,e,1)|0)!=1){g=-1;break}g=d[e]|0}}while(0);i=b;return g|0}function ws(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0,k=0,l=0,m=0;d=i;i=i+112|0;e=d|0;ys(e|0,0,112)|0;f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;qs(e,0);h=+os(e,2,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){k=112;l=0;i=d;return+h}if((j|0)==0){m=a}else{m=a+j|0}c[b>>2]=m;k=112;l=0;i=d;return+h}function xs(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return ub(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function ys(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}return b-e|0}function zs(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}b=e}else{xs(b,c,d)|0}return b|0}function As(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function Bs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(K=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function Cs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(K=e,a-c>>>0|0)|0}function Ds(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}K=a<<c-32;return 0}function Es(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}K=0;return b>>>c-32|0}function Fs(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}K=(b|0)<0?-1:0;return b>>c-32|0}function Gs(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function Hs(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function Is(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=ga(d,c)|0;f=a>>>16;a=(e>>>16)+(ga(d,f)|0)|0;d=b>>>16;b=ga(d,c)|0;return(K=(a>>>16)+(ga(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function Js(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=Cs(e^a,f^b,e,f)|0;b=K;a=g^e;e=h^f;f=Cs((Os(i,b,Cs(g^c,h^d,g,h)|0,K,0)|0)^a,K^e,a,e)|0;return(K=K,f)|0}function Ks(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=Cs(h^a,j^b,h,j)|0;b=K;Os(m,b,Cs(k^d,l^e,k,l)|0,K,g)|0;l=Cs(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=K;i=f;return(K=j,l)|0}function Ls(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=Is(e,a)|0;f=K;return(K=(ga(b,a)|0)+(ga(d,e)|0)+f|f&0,c|0|0)|0}function Ms(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=Os(a,b,c,d,0)|0;return(K=K,e)|0}function Ns(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;Os(a,b,d,e,g)|0;i=f;return(K=c[g+4>>2]|0,c[g>>2]|0)|0}function Os(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(K=n,o)|0}else{if(!m){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(K=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(K=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(K=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((Hs(l|0)|0)>>>0);return(K=n,o)|0}p=(Gs(l|0)|0)-(Gs(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(K=n,o)|0}else{if(!m){r=(Gs(l|0)|0)-(Gs(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(K=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(Gs(j|0)|0)+33-(Gs(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(K=n,o)|0}else{p=Hs(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(K=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;E=t;F=0;G=0}else{g=d|0|0;d=k|e&0;e=Bs(g,d,-1,-1)|0;k=K;i=w;w=v;v=u;u=t;t=s;s=0;while(1){H=w>>>31|i<<1;I=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;Cs(e,k,j,a)|0;b=K;h=b>>31|((b|0)<0?-1:0)<<1;J=h&1;L=Cs(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;M=K;b=t-1|0;if((b|0)==0){break}else{i=H;w=I;v=M;u=L;t=b;s=J}}B=H;C=I;D=M;E=L;F=0;G=J}J=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(J|0)>>>31|(B|C)<<1|(C<<1|J>>>31)&0|F;o=(J<<1|0>>>31)&-2|G;return(K=n,o)|0}function Ps(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;yc[a&7](b|0,c|0,d|0,e|0,f|0)}function Qs(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;zc[a&127](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function Rs(a,b){a=a|0;b=b|0;Ac[a&511](b|0)}function Ss(a,b,c){a=a|0;b=b|0;c=c|0;Bc[a&127](b|0,c|0)}function Ts(a,b,c,d,e,f,g,h,i,j,k,l,m){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;Cc[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0,m|0)}function Us(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Dc[a&15](b|0,c|0,d|0,e|0)|0}function Vs(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;Ec[a&7](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function Ws(a,b){a=a|0;b=b|0;return Fc[a&255](b|0)|0}function Xs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Gc[a&63](b|0,c|0,d|0)|0}function Ys(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Hc[a&31](b|0,c|0,d|0)}function Zs(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;Ic[a&15](b|0,c|0,d|0,e|0,f|0,+g)}function _s(a){a=a|0;Jc[a&1]()}function $s(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return Kc[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function at(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Lc[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function bt(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;Mc[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function ct(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Nc[a&63](b|0,c|0,d|0,e|0,f|0,g|0)}function dt(a,b,c){a=a|0;b=b|0;c=c|0;return Oc[a&31](b|0,c|0)|0}function et(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Pc[a&31](b|0,c|0,d|0,e|0,f|0)|0}function ft(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Qc[a&31](b|0,c|0,d|0,e|0)}function gt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ha(0)}function ht(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ha(1)}function it(a){a=a|0;ha(2)}function jt(a,b){a=a|0;b=b|0;ha(3)}function kt(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;ha(4)}function lt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ha(5);return 0}function mt(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ha(6)}function nt(a){a=a|0;ha(7);return 0}function ot(a,b,c){a=a|0;b=b|0;c=c|0;ha(8);return 0}function pt(a,b,c){a=a|0;b=b|0;c=c|0;ha(9)}function qt(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ha(10)}function rt(){ha(11)}function st(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ha(12);return 0}function tt(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ha(13)}function ut(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ha(14)}function vt(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ha(15)}function wt(a,b){a=a|0;b=b|0;ha(16);return 0}function xt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ha(17);return 0}function yt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ha(18)}




// EMSCRIPTEN_END_FUNCS
var yc=[gt,gt,Wr,gt,Xr,gt,Vr,gt];var zc=[ht,ht,si,ht,an,ht,ln,ht,nn,ht,Wo,ht,ri,ht,xi,ht,ii,ht,Pm,ht,Nm,ht,Qo,ht,mi,ht,Ym,ht,pi,ht,li,ht,yi,ht,vi,ht,$m,ht,on,ht,qi,ht,oi,ht,Bm,ht,fi,ht,ui,ht,em,ht,ti,ht,wi,ht,km,ht,ni,ht,_m,ht,_l,ht,mn,ht,zm,ht,cm,ht,Wl,ht,ki,ht,Yl,ht,Nl,ht,am,ht,Ul,ht,Sl,ht,im,ht,gm,ht,pn,ht,Bl,ht,Zm,ht,Fl,ht,xl,ht,zl,ht,Dl,ht,vl,ht,Ll,ht,Jl,ht,Hl,ht,tl,ht,ht,ht,ht,ht,ht,ht,ht,ht,ht,ht,ht,ht,ht,ht,ht,ht];var Ac=[it,it,ap,it,rl,it,Im,it,wj,it,ih,it,gk,it,fp,it,sp,it,cj,it,Mf,it,Ri,it,sm,it,oj,it,eq,it,uj,it,Ql,it,cf,it,hl,it,dl,it,ls,it,pj,it,qp,it,Gp,it,jn,it,Rl,it,Gr,it,Xk,it,Yo,it,rp,it,Jk,it,sl,it,Yn,it,kp,it,Eg,it,Dq,it,Lr,it,Cq,it,bl,it,uj,it,nl,it,eh,it,Dn,it,Fq,it,tp,it,as,it,Ro,it,Bq,it,fl,it,pg,it,Nk,it,Qi,it,sf,it,bh,it,ml,it,yn,it,re,it,pj,it,lr,it,tm,it,pq,it,Zn,it,Ik,it,Uk,it,vn,it,hn,it,el,it,Nn,it,Rh,it,ks,it,fk,it,pe,it,or,it,pr,it,Yk,it,uk,it,bf,it,Qp,it,Ir,it,Kk,it,cl,it,to,it,Ii,it,io,it,Zk,it,op,it,Or,it,rr,it,Mr,it,Xi,it,jp,it,Bg,it,wn,it,Eo,it,Hr,it,Aq,it,wo,it,Kf,it,qr,it,Cn,it,Hm,it,gl,it,Yi,it,il,it,Pk,it,Ej,it,Yp,it,Lo,it,Do,it,rf,it,Eq,it,So,it,Wj,it,qg,it,Ir,it,Pr,it,Tk,it,Fj,it,ah,it,Hk,it,Kr,it,hh,it,he,it,Wk,it,fh,it,Xo,it,gh,it,ck,it,Sk,it,dj,it,mp,it,jo,it,Vm,it,On,it,Ki,it,le,it,Ok,it,tk,it,Rk,it,Dg,it,nr,it,Wm,it,Nr,it,bp,it,Ji,it,Mk,it,dh,it,zn,it,ke,it,Sh,it,Mo,it,uo,it,Lj,it,Hp,it,tj,it,sr,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it,it];var Bc=[jt,jt,Oq,jt,oo,jt,Rn,jt,Lq,jt,ho,jt,Kq,jt,Xn,jt,Li,jt,$o,jt,vk,jt,Jn,jt,ro,jt,eo,jt,In,jt,mo,jt,Gn,jt,po,jt,np,jt,Zi,jt,Si,jt,so,jt,Nq,jt,Sn,jt,sj,jt,Pq,jt,go,jt,Un,jt,Mq,jt,Wn,jt,hk,jt,ej,jt,ep,jt,ao,jt,Mn,jt,Ln,jt,Hn,jt,bo,jt,co,jt,no,jt,Tn,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt,jt];var Cc=[kt,kt,ei,kt];var Dc=[lt,lt,vp,lt,If,lt,wp,lt,Np,lt,Dp,lt,xp,lt,lt,lt];var Ec=[mt,mt,To,mt,No,mt,mt,mt];var Fc=[nt,nt,br,nt,$n,nt,ok,nt,Vp,nt,Tq,nt,pk,nt,$q,nt,Pn,nt,Xm,nt,Rq,nt,gj,nt,Dk,nt,Ck,nt,vq,nt,Xq,nt,Vq,nt,Jr,nt,vj,nt,Gq,nt,Wq,nt,Hq,nt,lk,nt,Up,nt,qo,nt,Yq,nt,Mi,nt,Qn,nt,lq,nt,ko,nt,Qq,nt,Ti,nt,wq,nt,ms,nt,$k,nt,Kn,nt,Ui,nt,Iq,nt,mk,nt,zk,nt,_i,nt,Xp,nt,Vn,nt,ar,nt,fj,nt,kq,nt,bq,nt,Ak,nt,En,nt,Sq,nt,Fn,nt,qj,nt,Xh,nt,_n,nt,dq,nt,fo,nt,Uq,nt,lo,nt,aq,nt,kn,nt,Jq,nt,_q,nt,Zq,nt,oq,nt,zq,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt,nt];var Gc=[ot,ot,ll,ot,Jp,ot,Bp,ot,Qr,ot,Ep,ot,ql,ot,zj,ot,rk,ot,nk,ot,up,ot,wk,ot,cp,ot,Op,ot,zp,ot,Ni,ot,Aj,ot,Bk,ot,Lp,ot,Zo,ot,ik,ot,$i,ot,Fk,ot,ot,ot,ot,ot,ot,ot,ot,ot,ot,ot,ot,ot,ot,ot,ot,ot,ot,ot];var Hc=[pt,pt,zi,pt,Ei,pt,Fi,pt,Gi,pt,Ci,pt,Bi,pt,yj,pt,al,pt,Jf,pt,pt,pt,pt,pt,pt,pt,pt,pt,pt,pt,pt,pt];var Ic=[qt,qt,Sm,qt,Qm,qt,Fm,qt,Cm,qt,qt,qt,qt,qt,qt,qt];var Jc=[rt,rt];var Kc=[st,st,Zp,st,hq,st,fq,st,sq,st,_p,st,qq,st,Rp,st,Sp,st,st,st,st,st,st,st,st,st,st,st,st,st,st,st];var Lc=[tt,tt,qn,tt,gi,tt,di,tt,bn,tt,hi,tt,tt,tt,tt,tt];var Mc=[ut,ut,An,ut,xn,ut,vo,ut,Fo,ut,zo,ut,Ho,ut,ut,ut];var Nc=[vt,vt,Yr,vt,Om,vt,Km,vt,Jm,vt,Zr,vt,Tm,vt,ci,vt,_o,vt,xk,vt,Gm,vt,um,vt,Am,vt,vm,vt,_r,vt,jk,vt,dp,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt,vt];var Oc=[wt,wt,Kp,wt,hj,wt,Cp,wt,Ek,wt,Mp,wt,Ip,wt,Vi,wt,aj,wt,yp,wt,sk,wt,Gk,wt,Ap,wt,qk,wt,Oi,wt,wt,wt];var Pc=[xt,xt,Fp,xt,jq,xt,ol,xt,xq,xt,mq,xt,Pp,xt,$p,xt,jl,xt,Tp,xt,Wp,xt,uq,xt,cq,xt,xt,xt,xt,xt,xt,xt];var Qc=[yt,yt,Sr,yt,Tr,yt,Ai,yt,Rr,yt,kk,yt,pl,yt,yk,yt,kl,yt,yt,yt,yt,yt,yt,yt,yt,yt,yt,yt,yt,yt,yt,yt];return{_de265_get_error_text:wd,_strlen:As,_de265_get_image_plane_user_data:Zd,_de265_release_next_picture:Jd,_de265_push_end_of_NAL:Ed,_memset:ys,_de265_free_decoder:zd,_de265_set_limit_TID:Md,_de265_get_image_plane:Yd,_de265_get_parameter_bool:Sd,_de265_get_version:ud,_de265_peek_next_picture:Id,_de265_get_image_width:Vd,_de265_set_parameter_int:Rd,_de265_get_current_TID:Ld,_de265_change_framerate:Od,_de265_isOK:xd,_de265_push_end_of_frame:Fd,_memcpy:xs,_de265_set_framerate_ratio:Nd,_de265_get_chroma_format:Xd,_de265_get_image_user_data:$d,_de265_get_version_number:vd,_de265_get_image_PTS:_d,_de265_get_number_of_input_bytes_pending:Td,_de265_flush_data:Bd,_realloc:bs,_de265_new_decoder:yd,_de265_get_number_of_NAL_units_pending:Ud,_de265_get_next_picture:Hd,_de265_get_highest_TID:Kd,_de265_decode:Cd,_de265_set_parameter_bool:Qd,_de265_push_NAL:Dd,_free:as,_memmove:zs,__GLOBAL__I_a:jj,_de265_get_image_height:Wd,_de265_reset:Gd,_malloc:$r,_de265_get_warning:Pd,_de265_push_data:Ad,_de265_set_image_user_data:ae,runPostSets:fd,stackAlloc:Rc,stackSave:Sc,stackRestore:Tc,setThrew:Uc,setTempRet0:Xc,setTempRet1:Yc,setTempRet2:Zc,setTempRet3:_c,setTempRet4:$c,setTempRet5:ad,setTempRet6:bd,setTempRet7:cd,setTempRet8:dd,setTempRet9:ed,dynCall_viiiii:Ps,dynCall_viiiiiii:Qs,dynCall_vi:Rs,dynCall_vii:Ss,dynCall_viiiiiiiiiiii:Ts,dynCall_iiiii:Us,dynCall_viiiiiid:Vs,dynCall_ii:Ws,dynCall_iiii:Xs,dynCall_viii:Ys,dynCall_viiiiid:Zs,dynCall_v:_s,dynCall_iiiiiiiii:$s,dynCall_viiiiiiiii:at,dynCall_viiiiiiii:bt,dynCall_viiiiii:ct,dynCall_iii:dt,dynCall_iiiiii:et,dynCall_viiii:ft}})


// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_viiiii": invoke_viiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_viiiiiiiiiiii": invoke_viiiiiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_ii": invoke_ii, "invoke_iiii": invoke_iiii, "invoke_viii": invoke_viii, "invoke_viiiiid": invoke_viiiiid, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_llvm_lifetime_end": _llvm_lifetime_end, "__scanString": __scanString, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_end_catch": ___cxa_end_catch, "_strtoull": _strtoull, "_fflush": _fflush, "__isLeapYear": __isLeapYear, "_fwrite": _fwrite, "_send": _send, "_pthread_mutex_init": _pthread_mutex_init, "_llvm_umul_with_overflow_i32": _llvm_umul_with_overflow_i32, "_isspace": _isspace, "_read": _read, "_isxdigit_l": _isxdigit_l, "_fileno": _fileno, "___cxa_guard_abort": ___cxa_guard_abort, "_newlocale": _newlocale, "___gxx_personality_v0": ___gxx_personality_v0, "_pthread_cond_wait": _pthread_cond_wait, "___cxa_rethrow": ___cxa_rethrow, "_fmod": _fmod, "___resumeException": ___resumeException, "_llvm_va_end": _llvm_va_end, "_vsscanf": _vsscanf, "_snprintf": _snprintf, "_fgetc": _fgetc, "__getFloat": __getFloat, "_pthread_cond_signal": _pthread_cond_signal, "___cxa_free_exception": ___cxa_free_exception, "_isdigit_l": _isdigit_l, "___setErrNo": ___setErrNo, "_isxdigit": _isxdigit, "_exit": _exit, "_sprintf": _sprintf, "_asprintf": _asprintf, "___ctype_b_loc": ___ctype_b_loc, "_freelocale": _freelocale, "_catgets": _catgets, "___cxa_is_number_type": ___cxa_is_number_type, "_llvm_uadd_with_overflow_i32": _llvm_uadd_with_overflow_i32, "___cxa_does_inherit": ___cxa_does_inherit, "___cxa_guard_acquire": ___cxa_guard_acquire, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_recv": _recv, "__parseInt64": __parseInt64, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "_mkport": _mkport, "_copysign": _copysign, "__exit": __exit, "_strftime": _strftime, "___cxa_throw": ___cxa_throw, "_pread": _pread, "_strtoull_l": _strtoull_l, "__arraySum": __arraySum, "_sysconf": _sysconf, "_strtoll_l": _strtoll_l, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "__formatString": __formatString, "_pthread_cond_broadcast": _pthread_cond_broadcast, "__ZSt9terminatev": __ZSt9terminatev, "_vfprintf": _vfprintf, "_pthread_mutex_unlock": _pthread_mutex_unlock, "___cxa_call_unexpected": ___cxa_call_unexpected, "_sbrk": _sbrk, "_atexit": _atexit, "___errno_location": ___errno_location, "_strerror": _strerror, "_pthread_mutex_destroy": _pthread_mutex_destroy, "_catclose": _catclose, "_llvm_lifetime_start": _llvm_lifetime_start, "___cxa_guard_release": ___cxa_guard_release, "_ungetc": _ungetc, "_pthread_cond_destroy": _pthread_cond_destroy, "_uselocale": _uselocale, "_vsnprintf": _vsnprintf, "_sscanf": _sscanf, "___assert_fail": ___assert_fail, "_fread": _fread, "_strftime_l": _strftime_l, "_abort": _abort, "_fprintf": _fprintf, "_isdigit": _isdigit, "_strtoll": _strtoll, "__addDays": __addDays, "_fabs": _fabs, "__reallyNegative": __reallyNegative, "_write": _write, "___cxa_allocate_exception": ___cxa_allocate_exception, "_vasprintf": _vasprintf, "_catopen": _catopen, "___ctype_toupper_loc": ___ctype_toupper_loc, "___ctype_tolower_loc": ___ctype_tolower_loc, "_pthread_join": _pthread_join, "_pthread_cond_init": _pthread_cond_init, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_pthread_create": _pthread_create, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stdin": _stdin, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr, "_stdout": _stdout, "__ZTISt9exception": __ZTISt9exception, "___dso_handle": ___dso_handle }, buffer);
var _de265_get_error_text = Module["_de265_get_error_text"] = asm["_de265_get_error_text"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _de265_get_image_plane_user_data = Module["_de265_get_image_plane_user_data"] = asm["_de265_get_image_plane_user_data"];
var _de265_release_next_picture = Module["_de265_release_next_picture"] = asm["_de265_release_next_picture"];
var _de265_push_end_of_NAL = Module["_de265_push_end_of_NAL"] = asm["_de265_push_end_of_NAL"];
var _memset = Module["_memset"] = asm["_memset"];
var _de265_free_decoder = Module["_de265_free_decoder"] = asm["_de265_free_decoder"];
var _de265_set_limit_TID = Module["_de265_set_limit_TID"] = asm["_de265_set_limit_TID"];
var _de265_get_image_plane = Module["_de265_get_image_plane"] = asm["_de265_get_image_plane"];
var _de265_get_parameter_bool = Module["_de265_get_parameter_bool"] = asm["_de265_get_parameter_bool"];
var _de265_get_version = Module["_de265_get_version"] = asm["_de265_get_version"];
var _de265_peek_next_picture = Module["_de265_peek_next_picture"] = asm["_de265_peek_next_picture"];
var _de265_get_image_width = Module["_de265_get_image_width"] = asm["_de265_get_image_width"];
var _de265_set_parameter_int = Module["_de265_set_parameter_int"] = asm["_de265_set_parameter_int"];
var _de265_get_current_TID = Module["_de265_get_current_TID"] = asm["_de265_get_current_TID"];
var _de265_change_framerate = Module["_de265_change_framerate"] = asm["_de265_change_framerate"];
var _de265_isOK = Module["_de265_isOK"] = asm["_de265_isOK"];
var _de265_push_end_of_frame = Module["_de265_push_end_of_frame"] = asm["_de265_push_end_of_frame"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _de265_set_framerate_ratio = Module["_de265_set_framerate_ratio"] = asm["_de265_set_framerate_ratio"];
var _de265_get_chroma_format = Module["_de265_get_chroma_format"] = asm["_de265_get_chroma_format"];
var _de265_get_image_user_data = Module["_de265_get_image_user_data"] = asm["_de265_get_image_user_data"];
var _de265_get_version_number = Module["_de265_get_version_number"] = asm["_de265_get_version_number"];
var _de265_get_image_PTS = Module["_de265_get_image_PTS"] = asm["_de265_get_image_PTS"];
var _de265_get_number_of_input_bytes_pending = Module["_de265_get_number_of_input_bytes_pending"] = asm["_de265_get_number_of_input_bytes_pending"];
var _de265_flush_data = Module["_de265_flush_data"] = asm["_de265_flush_data"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _de265_new_decoder = Module["_de265_new_decoder"] = asm["_de265_new_decoder"];
var _de265_get_number_of_NAL_units_pending = Module["_de265_get_number_of_NAL_units_pending"] = asm["_de265_get_number_of_NAL_units_pending"];
var _de265_get_next_picture = Module["_de265_get_next_picture"] = asm["_de265_get_next_picture"];
var _de265_get_highest_TID = Module["_de265_get_highest_TID"] = asm["_de265_get_highest_TID"];
var _de265_decode = Module["_de265_decode"] = asm["_de265_decode"];
var _de265_set_parameter_bool = Module["_de265_set_parameter_bool"] = asm["_de265_set_parameter_bool"];
var _de265_push_NAL = Module["_de265_push_NAL"] = asm["_de265_push_NAL"];
var _free = Module["_free"] = asm["_free"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _de265_get_image_height = Module["_de265_get_image_height"] = asm["_de265_get_image_height"];
var _de265_reset = Module["_de265_reset"] = asm["_de265_reset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _de265_get_warning = Module["_de265_get_warning"] = asm["_de265_get_warning"];
var _de265_push_data = Module["_de265_push_data"] = asm["_de265_push_data"];
var _de265_set_image_user_data = Module["_de265_set_image_user_data"] = asm["_de265_set_image_user_data"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viiiiiiiiiiii = Module["dynCall_viiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };

// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}





/**
 * libde265.js HEVC/H.265 decoder
 * (c)2014 struktur AG, http://www.struktur.de, opensource@struktur.de
 *
 * This file is part of libde265.js
 * https://github.com/strukturag/libde265.js
 *
 * libde265.js is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * libde265.js is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with libde265.js.  If not, see <http://www.gnu.org/licenses/>.
 */
// don't pollute the global namespace
delete this['Module'];

/**
 * Public API.
 */
var libde265 = {
    /** @expose */
    DE265_OK: 0,
    /** @expose */
    DE265_ERROR_NO_SUCH_FILE: 1,
    //DE265_ERROR_NO_STARTCODE: 2, obsolete
    /** @expose */
    DE265_ERROR_EOF: 3,
    /** @expose */
    DE265_ERROR_COEFFICIENT_OUT_OF_IMAGE_BOUNDS: 4,
    /** @expose */
    DE265_ERROR_CHECKSUM_MISMATCH: 5,
    /** @expose */
    DE265_ERROR_CTB_OUTSIDE_IMAGE_AREA: 6,
    /** @expose */
    DE265_ERROR_OUT_OF_MEMORY: 7,
    /** @expose */
    DE265_ERROR_CODED_PARAMETER_OUT_OF_RANGE: 8,
    /** @expose */
    DE265_ERROR_IMAGE_BUFFER_FULL: 9,
    /** @expose */
    DE265_ERROR_CANNOT_START_THREADPOOL: 10,
    /** @expose */
    DE265_ERROR_LIBRARY_INITIALIZATION_FAILED: 11,
    /** @expose */
    DE265_ERROR_LIBRARY_NOT_INITIALIZED: 12,
    /** @expose */
    DE265_ERROR_WAITING_FOR_INPUT_DATA: 13,
    /** @expose */
    DE265_ERROR_CANNOT_PROCESS_SEI: 14,

    // --- errors that should become obsolete in later libde265 versions ---

    /** @expose */
    DE265_ERROR_MAX_THREAD_CONTEXTS_EXCEEDED: 500,
    /** @expose */
    DE265_ERROR_MAX_NUMBER_OF_SLICES_EXCEEDED: 501,
    //DE265_ERROR_SCALING_LIST_NOT_IMPLEMENTED: 502, obsolete

    // --- warnings ---

    /** @expose */
    DE265_WARNING_NO_WPP_CANNOT_USE_MULTITHREADING: 1000,
    /** @expose */
    DE265_WARNING_WARNING_BUFFER_FULL: 1001,
    /** @expose */
    DE265_WARNING_PREMATURE_END_OF_SLICE_SEGMENT: 1002,
    /** @expose */
    DE265_WARNING_INCORRECT_ENTRY_POINT_OFFSET: 1003,
    /** @expose */
    DE265_WARNING_CTB_OUTSIDE_IMAGE_AREA: 1004,
    /** @expose */
    DE265_WARNING_SPS_HEADER_INVALID: 1005,
    /** @expose */
    DE265_WARNING_PPS_HEADER_INVALID: 1006,
    /** @expose */
    DE265_WARNING_SLICEHEADER_INVALID: 1007,
    /** @expose */
    DE265_WARNING_INCORRECT_MOTION_VECTOR_SCALING: 1008,
    /** @expose */
    DE265_WARNING_NONEXISTING_PPS_REFERENCED: 1009,
    /** @expose */
    DE265_WARNING_NONEXISTING_SPS_REFERENCED: 1010,
    /** @expose */
    DE265_WARNING_BOTH_PREDFLAGS_ZERO: 1011,
    /** @expose */
    DE265_WARNING_NONEXISTING_REFERENCE_PICTURE_ACCESSED: 1012,
    /** @expose */
    DE265_WARNING_NUMMVP_NOT_EQUAL_TO_NUMMVQ: 1013,
    /** @expose */
    DE265_WARNING_NUMBER_OF_SHORT_TERM_REF_PIC_SETS_OUT_OF_RANGE: 1014,
    /** @expose */
    DE265_WARNING_SHORT_TERM_REF_PIC_SET_OUT_OF_RANGE: 1015,
    /** @expose */
    DE265_WARNING_FAULTY_REFERENCE_PICTURE_LIST: 1016,
    /** @expose */
    DE265_WARNING_EOSS_BIT_NOT_SET: 1017,
    /** @expose */
    DE265_WARNING_MAX_NUM_REF_PICS_EXCEEDED: 1018,
    /** @expose */
    DE265_WARNING_INVALID_CHROMA_FORMAT: 1019,
    /** @expose */
    DE265_WARNING_SLICE_SEGMENT_ADDRESS_INVALID: 1020,
    /** @expose */
    DE265_WARNING_DEPENDENT_SLICE_WITH_ADDRESS_ZERO: 1021,
    /** @expose */
    DE265_WARNING_NUMBER_OF_THREADS_LIMITED_TO_MAXIMUM: 1022,
    /** @expose */
    DE265_NON_EXISTING_LT_REFERENCE_CANDIDATE_IN_SLICE_HEADER: 1023,
    /** @expose */
    DE265_WARNING_CANNOT_APPLY_SAO_OUT_OF_MEMORY: 1024,
    /** @expose */
    DE265_WARNING_SPS_MISSING_CANNOT_DECODE_SEI: 1025,

    /** @expose */
    de265_get_version: cwrap('de265_get_version', 'string'),
    /** @expose */
    de265_get_version_number: cwrap('de265_get_version_number', 'number'),
    /** @expose */
    de265_get_error_text: cwrap('de265_get_error_text', 'string', ['number']),
    /** @expose */
    de265_isOK: cwrap('de265_isOK', 'number', ['number']),

    /** @expose */
    de265_chroma_mono: 0,
    /** @expose */
    de265_chroma_420: 1,  // currently the only used format
    /** @expose */
    de265_chroma_422: 2,
    /** @expose */
    de265_chroma_444: 3,

    /** @expose */
    de265_get_image_width: cwrap('de265_get_image_width', 'number', ['number', 'number']),
    /** @expose */
    de265_get_image_height: cwrap('de265_get_image_height', 'number', ['number', 'number']),
    /** @expose */
    de265_get_chroma_format: cwrap('de265_get_chroma_format', 'number', ['number']),
    /** @expose */
    de265_get_image_plane: cwrap('de265_get_image_plane', 'number', ['number', 'number', 'number']),
    /** @expose */
    de265_get_image_plane_user_data: cwrap('de265_get_image_plane_user_data', 'number', ['number', 'number']),
    /** @expose */
    de265_get_image_PTS: cwrap('de265_get_image_PTS', 'number', ['number']),
    /** @expose */
    de265_get_image_user_data: cwrap('de265_get_image_user_data', 'number', ['number']),
    /** @expose */
    de265_set_image_user_data: cwrap('de265_set_image_user_data', 'number', ['number', 'number']),
    // de265_get_image_NAL_header

    /** @expose */
    de265_new_decoder: cwrap('de265_new_decoder', 'number'),
    // de265_start_worker_threads
    /** @expose */
    de265_free_decoder: cwrap('de265_free_decoder', 'number', ['number']),
    /** @expose */
    de265_push_data: cwrap('de265_push_data', 'number', ['number', 'array', 'number', 'number', 'number']),
    /** @expose */
    de265_push_end_of_NAL: cwrap('de265_push_end_of_NAL', 'number', ['number']),
    /** @expose */
    de265_push_end_of_frame: cwrap('de265_push_end_of_frame', 'number', ['number']),
    /** @expose */
    de265_push_NAL: cwrap('de265_push_NAL', 'number', ['number', 'array', 'number', 'number', 'number']),
    /** @expose */
    de265_flush_data: cwrap('de265_flush_data', 'number', ['number']),
    /** @expose */
    de265_get_number_of_input_bytes_pending: cwrap('de265_get_number_of_input_bytes_pending', 'number', ['number']),
    /** @expose */
    de265_get_number_of_NAL_units_pending: cwrap('de265_get_number_of_NAL_units_pending', 'number', ['number']),
    /** @expose */
    de265_decode: cwrap('de265_decode', 'number', ['number', 'number']),
    /** @expose */
    de265_reset: cwrap('de265_reset', 'number', ['number']),
    /** @expose */
    de265_peek_next_picture: cwrap('de265_peek_next_picture', 'number', ['number']),
    /** @expose */
    de265_get_next_picture: cwrap('de265_get_next_picture', 'number', ['number']),
    /** @expose */
    de265_release_next_picture: cwrap('de265_release_next_picture', 'number', ['number']),
    /** @expose */
    de265_get_warning: cwrap('de265_get_warning', 'number', ['number']),

    // de265_set_image_allocation_functions
    // de265_get_default_image_allocation_functions
    // de265_set_image_plane

    /** @expose */
    de265_get_highest_TID: cwrap('de265_get_highest_TID', 'number', ['number']),
    /** @expose */
    de265_get_current_TID: cwrap('de265_get_current_TID', 'number', ['number']),
    /** @expose */
    de265_set_limit_TID: cwrap('de265_set_limit_TID', 'number', ['number', 'number']),
    /** @expose */
    de265_set_framerate_ratio: cwrap('de265_set_framerate_ratio', 'number', ['number', 'number']),
    /** @expose */
    de265_change_framerate: cwrap('de265_change_framerate', 'number', ['number', 'number']),

    /** @expose */
    DE265_DECODER_PARAM_BOOL_SEI_CHECK_HASH: 0, // (bool) Perform SEI hash check on decoded pictures.
    /** @expose */
    DE265_DECODER_PARAM_DUMP_SPS_HEADERS: 1,    // (int)  Dump headers to specified file-descriptor.
    /** @expose */
    DE265_DECODER_PARAM_DUMP_VPS_HEADERS: 2,
    /** @expose */
    DE265_DECODER_PARAM_DUMP_PPS_HEADERS: 3,
    /** @expose */
    DE265_DECODER_PARAM_DUMP_SLICE_HEADERS: 4,
    /** @expose */
    DE265_DECODER_PARAM_ACCELERATION_CODE: 5,    // (int)  enum de265_acceleration, default: AUTO
    /** @expose */
    DE265_DECODER_PARAM_SUPPRESS_FAULTY_PICTURES: 6, // (bool)  do not output frames with decoding errors, default: no (output all images)
    /** @expose */
    DE265_DECODER_PARAM_DISABLE_DEBLOCKING: 7,   // (bool)  disable deblocking
    /** @expose */
    DE265_DECODER_PARAM_DISABLE_SAO: 8,           // (bool)  disable SAO filter

    /** @expose */
    de265_acceleration_SCALAR: 0, // only fallback implementation
    /** @expose */
    de265_acceleration_MMX  : 10,
    /** @expose */
    de265_acceleration_SSE  : 20,
    /** @expose */
    de265_acceleration_SSE2 : 30,
    /** @expose */
    de265_acceleration_SSE4 : 40,
    /** @expose */
    de265_acceleration_AVX  : 50,    // not implemented yet
    /** @expose */
    de265_acceleration_AVX2 : 60,    // not implemented yet
    /** @expose */
    de265_acceleration_AUTO : 10000,

    /** @expose */
    de265_set_parameter_bool: cwrap('de265_set_parameter_bool', 'number', ['number', 'number', 'number']),
    /** @expose */
    de265_set_parameter_int: cwrap('de265_set_parameter_int', 'number', ['number', 'number', 'number']),
    /** @expose */
    de265_get_parameter_bool: cwrap('de265_get_parameter_bool', 'number', ['number', 'number'])
};

/**
 * A decoded image
 *
 * @constructor
 */
var Image = function(decoder, img) {
    this.decoder = decoder;
    this.img = img;
    this.width = null;
    this.height = null;
};

/**
 * @expose
 */
Image.prototype.free = function() {
};

/**
 * @expose
 */
Image.prototype.get_width = function() {
    if (this.width === null) {
        this.width = libde265.de265_get_image_width(this.img, 0);
    }
    return this.width;
};

/**
 * @expose
 */
Image.prototype.get_height = function() {
    if (this.height === null) {
        this.height = libde265.de265_get_image_height(this.img, 0);
    }
    return this.height;
};

/**
 * @expose
 */
Image.prototype.display = function(imageData, callback) {
    var w = this.get_width();
    var h = this.get_height();
    var stride = _malloc(4);
    var y = libde265.de265_get_image_plane(this.img, 0, stride);
    var stridey = getValue(stride, "i32");
    var u = libde265.de265_get_image_plane(this.img, 1, stride);
    var strideu = getValue(stride, "i32");
    var v = libde265.de265_get_image_plane(this.img, 2, stride);
    var stridev = getValue(stride, "i32");
    _free(stride);

    this.decoder.convert_yuv2rgb(y, u, v, w, h, stridey, strideu, stridev, imageData, callback);
};

function worker_func() {
    self.addEventListener("message", function(e) {
        var data = e.data;
        switch (data["cmd"]) {
        case "start":
            break;

        case "stop":
            this.postMessage({"cmd": "stopped"});
            self.close();
            break;

        case "convert":
            var img = _do_convert_yuv2rgb(data["data"]["y"], data["data"]["u"], data["data"]["v"], data["data"]["w"], data["data"]["h"], data["data"]["stridey"], data["data"]["strideu"], data["data"]["stridev"]);
            this.postMessage({"cmd": "converted", "data": {"image": img}});
            break;

        default:
            // ignore unknown commands
            break;
        }
    }, 0);
}

var worker_blob_url = null;

/**
 * The HEVC/H.265 decoder
 *
 * @constructor
 */
var Decoder = function() {
    this.image_callback = null;
    this.more = _malloc(2);
    this.stop = false;
    this.ctx = libde265.de265_new_decoder();
    if (typeof Worker !== "undefined" && typeof Uint8ClampedArray !== "undefined" && typeof Blob !== "undefined") {
        var that = this;
        this.yuv2rgb_callbacks = [];
        if (worker_blob_url === null) {
            // load worker from inplace blob so we don't have to depend
            // on additional external files
            var blob = new Blob([
                "(function() {\n",
                _do_convert_yuv2rgb.toString() + ";\n",
                worker_func.toString() + ";\n",
                worker_func.name + "();\n",
                "}).call(this);"
            ], {"type": "text/javascript"});

            worker_blob_url = window.URL.createObjectURL(blob);
        }
        this.yuv2rgb_worker = new Worker(worker_blob_url);
        this.yuv2rgb_worker.addEventListener('message', function(e) {
            switch (e.data["cmd"]) {
            case "converted":
                var cb = that.yuv2rgb_callbacks[0];
                that.yuv2rgb_callbacks = that.yuv2rgb_callbacks.splice(1);
                cb(e.data["data"]["image"]);
                break;

            case "stopped":
                that.yuv2rgb_callbacks = null;
                that = null;
                break;

            default:
                // ignore unknown commands
                break;
            }
        }, false);
        this.yuv2rgb_worker.postMessage({"cmd": "start"});
    } else {
        this.yuv2rgb_worker = null;
    }
};

/**
 * @expose
 */
Decoder.prototype.free = function() {
    if (this.yuv2rgb_worker) {
        this.yuv2rgb_worker.postMessage({"cmd": "stop"});
        this.yuv2rgb_worker = null;
    }
    libde265.de265_free_decoder(this.ctx);
    this.ctx = null;
    _free(this.more);
    this.more = null;
};

/**
 * @expose
 */
Decoder.prototype.set_image_callback = function(callback) {
    this.image_callback = callback;
};

/**
 * @expose
 */
Decoder.prototype.reset = function() {
    libde265.de265_reset(this.ctx);
};

/**
 * @expose
 */
Decoder.prototype.push_data = function(data, pts) {
    pts = pts || 0;
    return libde265.de265_push_data(this.ctx, data, data.length, pts, 0);
};

/**
 * @expose
 */
Decoder.prototype.flush = function() {
    this.stop = true;
    return libde265.de265_flush_data(this.ctx);
};

/**
 * @expose
 */
Decoder.prototype.has_more = function() {
    return !this.stop || getValue(this.more, "i16") !== 0;
};

/**
 * @expose
 */
Decoder.prototype.set_framerate_ratio = function(ratio) {
    libde265.de265_set_framerate_ratio(this.ctx, ratio);
};

/**
 * @expose
 */
Decoder.prototype.disable_filters = function(disable) {
    libde265.de265_set_parameter_bool(this.ctx, libde265.DE265_DECODER_PARAM_DISABLE_DEBLOCKING, !!disable);
    libde265.de265_set_parameter_bool(this.ctx, libde265.DE265_DECODER_PARAM_DISABLE_SAO, !!disable);
};

/**
 * @expose
 */
Decoder.prototype.decode = function(callback) {
    var err;
    setValue(this.more, 1, "i16");
    while (getValue(this.more, "i16") !== 0) {
        err = libde265.de265_decode(this.ctx, this.more);
        if (!libde265.de265_isOK(err)) {
            setValue(this.more, 0, "i16");
            break;
        }

        var img = libde265.de265_get_next_picture(this.ctx);
        if (img) {
            if (this.image_callback) {
                this.image_callback(new Image(this, img));
            }
            break;
        }
    }
    callback(err);
    return;
};

function _do_convert_yuv2rgb(y, u, v, w, h, stridey, strideu, stridev, dest) {
    if (!dest) {
        dest = new Uint8ClampedArray(w*h*4);
    }
    var yval;
    var uval;
    var vval;
    var xpos = 0;
    var ypos = 0;
    var w2 = w >> 1;
    var maxi = w2*h;
    var yoffset = 0;
    var uoffset = 0;
    var voffset = 0;
    var x2;
    var i2;
    for (var i=0; i<maxi; i++) {
        i2 = i << 1;
        x2 = (xpos << 1);
        yval = 1.164 * (y[yoffset + x2] - 16);

        uval = u[uoffset + xpos] - 128;
        vval = v[voffset + xpos] - 128;
        dest[(i2<<2)+0] = yval + 1.596 * vval;
        dest[(i2<<2)+1] = yval - 0.813 * vval - 0.391 * uval;
        dest[(i2<<2)+2] = yval + 2.018 * uval;
        dest[(i2<<2)+3] = 0xff;

        yval = 1.164 * (y[yoffset + x2 + 1] - 16);
        dest[((i2+1)<<2)+0] = yval + 1.596 * vval;
        dest[((i2+1)<<2)+1] = yval - 0.813 * vval - 0.391 * uval;
        dest[((i2+1)<<2)+2] = yval + 2.018 * uval;
        dest[((i2+1)<<2)+3] = 0xff;

        xpos++;
        if (xpos === w2) {
            xpos = 0;
            ypos++;
            yoffset += stridey;
            uoffset = ((ypos >> 1) * strideu);
            voffset = ((ypos >> 1) * stridev);
        }
    }
    return dest;
}

Decoder.prototype.convert_yuv2rgb = function(y, u, v, w, h, stridey, strideu, stridev, imageData, callback) {
    y = HEAPU8.subarray(y, y+(h*stridey));
    u = HEAPU8.subarray(u, u+(h*strideu));
    v = HEAPU8.subarray(v, v+(h*stridev));
    if (this.yuv2rgb_worker) {
        var msg = {
            "cmd": "convert",
            "data": {
                "y": new Uint8Array(y),
                "u": new Uint8Array(u),
                "v": new Uint8Array(v),
                "w": w,
                "h": h,
                "stridey": stridey,
                "strideu": strideu,
                "stridev": stridev
            }
        };
        this.yuv2rgb_callbacks.push(function(data) {
            if (imageData.data.set) {
                imageData.data.set(data);
            } else {
                var dest = imageData.data;
                var cnt = dest.length;
                for (var i=0; i<cnt; i++) {
                    dest[i] = data[i];
                }
            }
            callback(imageData);
        });
        this.yuv2rgb_worker.postMessage(msg);
        return;
    }

    _do_convert_yuv2rgb(y, u, v,
        w, h,
        stridey, strideu, stridev,
        imageData.data);
    callback(imageData);
};

/**
 * @expose
 */
libde265.Decoder = Decoder;

/**
 * A simple raw bitstream player interface.
 *
 * @constructor
 */
var RawPlayer = function(canvas) {
    this.canvas = canvas;
    this.ctx = canvas.getContext("2d");
    this.status_cb = null;
    this.error_cb = null;
    this.ratio = null;
    this.filters = false;
    this._reset();
};

RawPlayer.prototype._reset = function() {
    this.start = null;
    this.frames = 0;
    this.image_data = null;
    this.running = false;
};

/** @expose */
RawPlayer.prototype.set_status_callback = function(callback) {
    this.status_cb = callback;
};

RawPlayer.prototype._set_status = function() {
    if (this.status_cb) {
        this.status_cb.apply(this.status_cb, arguments);
    }
};

/** @expose */
RawPlayer.prototype.set_error_callback = function(callback) {
    this.error_cb = callback;
};

RawPlayer.prototype._set_error = function(error, message) {
    if (this.error_cb) {
        this.error_cb(error, message);
    }
};

RawPlayer.prototype._display_image = function(image) {
    if (!this.start) {
        this.start = new Date();
        this._set_status("playing");
    } else {
        this.frames += 1;
        var duration = (new Date()) - this.start;
        if (duration > 1000) {
            this._set_status("fps", this.frames / (duration * 0.001));
        }
    }

    var w = image.get_width();
    var h = image.get_height();
    if (w != this.canvas.width || h != this.canvas.height || !this.image_data) {
        this.canvas.width = w;
        this.canvas.height = h;
        this.image_data = this.ctx.createImageData(w, h);
        var image_data = this.image_data.data;
        for (var i=0; i<w*h; i++) {
            image_data[i*4+3] = 255;
        }
    }

    var that = this;
    image.display(this.image_data, function(display_image_data) {
        that.ctx.putImageData(display_image_data, 0, 0);
    });
};

RawPlayer.prototype._handle_onload = function(request, event) {
    var that = this;
    this._set_status("initializing");

    var decoder = new Decoder();
    decoder.set_image_callback(function(image) {
        that._display_image(image);
        image.free();
    });

    var data = request.response;
    var pos = 0;
    var remaining = data.byteLength;
    var ratio = null;
    var filters = false;

    var decode = function() {
        if (!that.running) {
            return;
        }

        var err;
        if (remaining === 0) {
            err = decoder.flush();
        } else {
            var l = 4096;
            if (l > remaining) {
                l = remaining;
            }
            var tmp = new Uint8Array(data, pos, l);
            err = decoder.push_data(tmp);
            pos += l;
            remaining -= l;
        }
        if (!libde265.de265_isOK(err)) {
            that._set_error(err, libde265.de265_get_error_text(err));
            return;
        }

        if (that.ratio !== ratio) {
            decoder.set_framerate_ratio(that.ratio);
            ratio = that.ratio;
        }

        if (that.filters !== filters) {
            decoder.disable_filters(that.filters);
            filters = that.filters;
        }

        decoder.decode(function(err) {
            switch(err) {
            case libde265.DE265_ERROR_WAITING_FOR_INPUT_DATA:
                setTimeout(decode, 0);
                return;

            default:
                if (!libde265.de265_isOK(err)) {
                    that._set_error(err, libde265.de265_get_error_text(err));
                    return;
                }
            }

            if (remaining > 0 || decoder.has_more()) {
                setTimeout(decode, 0);
                return;
            }

            decoder.free();
            that.stop();
        });
    };

    setTimeout(decode, 0);
};

/** @expose */
RawPlayer.prototype.playback = function(url) {
    this._reset();
    var request = new XMLHttpRequest();
    request.open("get", url, true);
    request.responseType = "arraybuffer";
    var that = this;
    request.onload = function(event) {
        that._handle_onload(request, event);
    };
    this._set_status("loading");
    this.running = true;
    request.send();
};

/** @expose */
RawPlayer.prototype.stop = function() {
    this._set_status("stopped");
    this._reset();
};

/** @expose */
RawPlayer.prototype.set_framerate_ratio = function(ratio) {
    this.ratio = ratio;
};

/** @expose */
RawPlayer.prototype.disable_filters = function(disable) {
    this.filters = disable;
};

/**
 * @expose
 */
libde265.RawPlayer = RawPlayer;

var root = this;

if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
        /** @expose */
        exports = module.exports = libde265;
    }
    /** @expose */
    exports.libde265 = libde265;
} else {
    /** @expose */
    root.libde265 = libde265;
}

if (typeof define === "function" && define.amd) {
    /** @expose */
    define([], function() {
        return libde265;
    });
}

// NOTE: wrapped inside "(function() {" block from pre.js
}).call(this);


